SELECT activity, COUNT(DISTINCT resource) AS num_employees FROM events_log GROUP BY activity;
SELECT activity FROM events_log WHERE id IN ( SELECT id - 1 FROM events_log WHERE activity = 'send reminder' )
SELECT activity FROM events_log WHERE timestamp < (SELECT MIN(timestamp) FROM events_log WHERE activity = 'send reminder');
SELECT activity FROM events_log WHERE activity = 'reminder_sent' AND idcase IN ( SELECT idcase FROM events_log WHERE activity = 'travel_declaration' AND timestamp < ( SELECT timestamp FROM events_log WHERE activity = 'reminder_sent' AND idcase = events_log.idcase ) )
SELECT idcase, COUNT(id) as num_events FROM events_log GROUP BY idcase;
SELECT COUNT(idcase) as num_cases, COUNT(id) as num_events FROM ( SELECT idcase, COUNT(id) as num_events FROM events_log GROUP BY idcase ) GROUP BY num_events;
SELECT COUNT(idcase) AS num_cases, COUNT(id) AS num_events FROM ( SELECT idcase, COUNT(id) AS num_events FROM events_log GROUP BY idcase ) AS events_per_case GROUP BY num_events;
SELECT COUNT(DISTINCT idcase) FROM events_log GROUP BY idcase;
SELECT COUNT(idcase) AS num_events, COUNT(DISTINCT idcase) AS num_declarations FROM events_log GROUP BY idcase;
SELECT AVG(total_cost) AS average_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM events_log GROUP BY idcase ) subquery;
SELECT AVG(total_cost) AS mean_total_costs FROM ( SELECT idcase, SUM(cost) AS total_cost FROM events_log GROUP BY idcase ) subquery;
SELECT AVG(total_cost) AS mean_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM events_log GROUP BY idcase ) subquery;
SELECT AVG(total_cost) AS mean_total_costs FROM ( SELECT idcase, SUM(cost) AS total_cost FROM events_log GROUP BY idcase ) subquery;
SELECT AVG(total_cost) AS mean_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM events_log GROUP BY idcase ) subquery;
SELECT AVG(cost) FROM events_log WHERE activity = 'processing'
SELECT resource, AVG(cost) AS mean_cost FROM events_log GROUP BY resource;
SELECT resource, AVG(cost) as mean_cost FROM events_log GROUP BY resource;
SELECT resource, AVG(cost) as mean_cost FROM events_log GROUP BY resource;
SELECT resource, AVG(cost) as mean_cost FROM events_log GROUP BY resource;
SELECT resource, AVG(cost) as mean_cost FROM events_log GROUP BY resource;
SELECT resource, AVG(cost) as mean_cost FROM events_log GROUP BY resource;
SELECT resource, COUNT(resource) as frequency FROM events_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(resource) as frequency FROM events_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(resource) as frequency FROM events_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(resource) as frequency FROM events_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(*) as num_events FROM events_log GROUP BY resource ORDER BY num_events DESC LIMIT 10;
SELECT resource, COUNT(resource) as num_requests FROM events_log WHERE activity = 'processing travel declarations' GROUP BY resource ORDER BY num_requests DESC LIMIT 10;
SELECT strftime('%Y-%m-%d', timestamp) as day, count(*) as num_events FROM events_log GROUP BY day;
SELECT strftime('%Y-%m-%d', timestamp) as day, activity, count(*) as occurrences FROM events_log GROUP BY day, activity;
SELECT strftime('%Y-%m-%d', timestamp) as day, count(activity) as actions_performed FROM events_log WHERE activity = 'processing the declarations' GROUP BY day;
SELECT DISTINCT e1.idcase FROM events_log e1 JOIN events_log e2 ON e1.idcase = e2.idcase WHERE e1.resource <> e2.resource AND e1.activity = e2.activity;
SELECT DISTINCT e1.idcase FROM events_log e1 JOIN events_log e2 ON e1.idcase = e2.idcase WHERE e1.timestamp = e2.timestamp - 1 AND e1.activity = e2.activity AND e1.resource <> e2.resource;
SELECT idcase FROM events_log WHERE activity = 'declaration' AND id IN ( SELECT id FROM events_log WHERE activity = 'declaration' GROUP BY id HAVING COUNT(DISTINCT resource) > 1 )
SELECT idcase, COUNT(*) as num_events_before_declaration FROM events_log WHERE activity = 'declaration final approved by director' GROUP BY idcase;
SELECT COUNT(*) FROM events_log WHERE activity = 'declaration final approved by director';
SELECT idcase, COUNT(*) AS interventions FROM events_log WHERE activity = 'final approval from director' GROUP BY idcase;
SELECT idcase, MAX(CASE WHEN activity = 'permit approved by administration' THEN timestamp END) - MAX(CASE WHEN activity = 'permit submitted by employee' THEN timestamp END) AS time_passed FROM events_log WHERE activity IN ('permit submitted by employee', 'permit approved by administration') GROUP BY idcase;
SELECT MAX(timestamp) - MIN(timestamp) AS time_interval FROM events_log WHERE activity = 'permit submitted by employee' OR activity = 'permit approved by administration' GROUP BY idcase;
SELECT MAX(timestamp) - MIN(timestamp) AS time_passed FROM events_log WHERE activity = 'permit requested' OR activity = 'permit approved' GROUP BY idcase HAVING COUNT(DISTINCT activity) = 2;
SELECT DISTINCT idcase FROM events_log WHERE activity = 'rework';
SELECT DISTINCT idcase FROM events_log WHERE activity = 'rework';
SELECT DISTINCT idcase FROM events_log WHERE activity = 'rework';
SELECT DISTINCT idcase FROM events_log WHERE activity = 'rework';
SELECT idcase, activity FROM events_log WHERE activity = 'declaration' GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT activity, COUNT(activity) as num_occurrences FROM events_log GROUP BY activity HAVING COUNT(activity) > 1;
SELECT DISTINCT resource FROM events_log;
SELECT DISTINCT resource FROM events_log WHERE activity = 'supervisor'
SELECT DISTINCT resource FROM events_log WHERE activity = 'budget';
SELECT DISTINCT resource FROM events_log WHERE activity = 'budget owner role assigned';
