SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'End trip' AND T1.timestamp < T2.timestamp
SELECT COUNT(activity) FROM event_log WHERE activity = 'End trip'
SELECT COUNT(activity) FROM event_log WHERE activity = 'End trip'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'End trip' AND T2.activity = 'Start trip'
SELECT COUNT(activity) FROM event_log WHERE activity = 'End trip'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'End trip'
SELECT COUNT(activity) FROM event_log WHERE activity = 'End trip'
SELECT COUNT(id) FROM event_log WHERE activity = 'End trip'
SELECT COUNT(id) FROM event_log WHERE activity = 'End trip'
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity = 'end trip' GROUP BY T1.resource
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN resources AS T2 ON T1.resource = T2.id WHERE T1.activity = 'End trip' AND T2.name = 'James'
SELECT COUNT(*) FROM event_log WHERE resource = 'James' AND activity = 'End trip'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT COUNT(id) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'End trip' AND T2.resource = 'James'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN users AS T2 ON T1.idcase = T2.id WHERE T1.activity = 'End trip' AND T2.name = 'James'
SELECT resource, COUNT(id) FROM event_log GROUP BY resource
SELECT resource, COUNT(id) FROM event_log GROUP BY resource
SELECT resource, COUNT(id) FROM event_log GROUP BY resource
SELECT resource, COUNT(id) FROM event_log GROUP BY resource
SELECT resource, COUNT(id) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) FROM event_log GROUP BY resource
SELECT resource, COUNT(id) FROM event_log GROUP BY resource
SELECT resource, COUNT(activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) FROM event_log GROUP BY resource
SELECT COUNT(id) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN resource AS T2 ON T1.resource = T2.id WHERE T2.name = 'Peter'
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN resource AS T2 ON T1.resource = T2.id WHERE T2.name = 'Peter'
SELECT COUNT(T1.resource) FROM event_log AS T1 INNER JOIN (SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp WHERE T1.resource = 'Peter'
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter' AND activity = 'Travel Declaration'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'terminate' AND timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-03'
SELECT idcase FROM event_log WHERE activity = 'terminate' AND timestamp BETWEEN '2018-03-01' AND '2018-04-01'
SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-03'
SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-03' ORDER BY timestamp DESC
SELECT idcase FROM event_log WHERE activity = 'terminate' AND timestamp BETWEEN '2018-03-01' AND '2018-03-31' GROUP BY idcase
SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-03' GROUP BY idcase HAVING max(timestamp) < '2018-04-01'
SELECT idcase FROM event_log WHERE activity = 'end' AND timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN case_log AS T2 ON T1.idcase = T2.id WHERE T1.activity = 'Declaration rejected by pre-approver' AND T2.preapprover != 'Douglas'
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT activity, COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'processing'
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'Processing'
SELECT resource, COUNT(id) FROM event_log GROUP BY resource
SELECT resource, COUNT(id) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity LIKE 'Processing declaration%' GROUP BY resource
SELECT DISTINCT idcase FROM events_log WHERE cost > 2225
SELECT DISTINCT idcase FROM event_log WHERE cost > 2225
SELECT idcase FROM event_log WHERE cost > 2225
SELECT DISTINCT idcase FROM event_log WHERE cost > 2225
SELECT DISTINCT idcase FROM event_log WHERE cost > 2225
SELECT resource, COUNT(id) FROM event_log GROUP BY resource ORDER BY COUNT(id) DESC LIMIT 1
SELECT resource, COUNT(id) FROM event_log GROUP BY resource ORDER BY COUNT(id) DESC LIMIT 1
SELECT resource, COUNT(id) FROM event_log GROUP BY resource ORDER BY COUNT(id) DESC LIMIT 1
SELECT resource, COUNT(resource) FROM event_log GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 1
SELECT resource, COUNT(id) FROM event_log GROUP BY resource ORDER BY COUNT(id) DESC LIMIT 1
SELECT resource, COUNT(id) FROM event_log GROUP BY resource ORDER BY COUNT(id) DESC LIMIT 1
SELECT resource, COUNT(id) FROM event_log GROUP BY resource ORDER BY COUNT(id) DESC LIMIT 1
SELECT resource, COUNT(id) FROM event_log GROUP BY resource ORDER BY COUNT(id) DESC LIMIT 1
SELECT resource, COUNT(resource) FROM event_log GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 1
SELECT resource, COUNT(id) FROM event_log GROUP BY resource ORDER BY COUNT(id) DESC LIMIT 1
SELECT resource FROM events_log WHERE activity = 'declaration' GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 1
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1
SELECT resource, COUNT(resource) FROM event_log GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 1
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1
SELECT resource, COUNT(resource) FROM event_log GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 1
SELECT resource, COUNT(id) FROM event_log GROUP BY resource ORDER BY COUNT(id) DESC LIMIT 1
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource ORDER BY count DESC LIMIT 1
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC
SELECT resource, COUNT(id) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC
SELECT resource, COUNT(id) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC
SELECT resource, COUNT(id) AS declaration_count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY declaration_count DESC
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost > 0
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost > 0
SELECT * FROM event_log WHERE cost > 0
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost > 0
SELECT id FROM event_log WHERE cost != 0
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT DISTINCT activity FROM event_log WHERE cost > 0
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT id, activity, resource, cost FROM event_log WHERE cost IS NOT NULL
SELECT COUNT(DISTINCT idcase) FROM events_log WHERE cost IS NULL
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Request payment'
SELECT COUNT(id), activity FROM event_log WHERE activity = 'Start trip' OR activity = 'End trip' GROUP BY activity
SELECT * FROM events_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource
SELECT * FROM events_log WHERE activity = 'Start trip' OR activity = 'Request payment'
SELECT T1.idcase, T1.activity, T1.timestamp, T1.resource, T1.cost FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity IN ('Start trip', 'End trip') AND T2.activity IN ('Request payment', 'Payment handled') GROUP BY T1.idcase HAVING COUNT(DISTINCT T2.activity) < 2
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(activity) DESC LIMIT 1
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(activity) DESC LIMIT 1
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(activity) DESC LIMIT 1
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(activity) DESC LIMIT 1
SELECT activity FROM event_log WHERE idcase LIKE 'declaration%' GROUP BY activity ORDER BY COUNT(activity) DESC LIMIT 1
SELECT activity, COUNT(activity) FROM event_log GROUP BY activity ORDER BY COUNT(activity) DESC
SELECT activity, COUNT(activity) AS count FROM event_log GROUP BY activity ORDER BY count DESC
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC
SELECT activity, COUNT(activity) AS count FROM event_log GROUP BY activity ORDER BY count DESC
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017'
SELECT activity FROM event_log WHERE strftime('%Y', timestamp) = '2017'
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017'
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017'
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017'
SELECT DISTINCT activity FROM event_log WHERE strftime('%Y', timestamp) = '2017'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE idcase LIKE 'declaration%' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT activity, COUNT(id) AS count FROM event_log WHERE strftime('%Y', timestamp) = '2017' GROUP BY activity
SELECT activity FROM event_log WHERE strftime('%Y', timestamp) = '2017' AND activity LIKE 'Declaration Processing%'
SELECT activity, COUNT(activity) FROM event_log WHERE strftime('%Y', timestamp) = '2017' AND activity LIKE '%declaration%' GROUP BY activity
SELECT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' AND activity LIKE '%declaration%' GROUP BY activity
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(idcase) DESC LIMIT 5
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(idcase) DESC LIMIT 5
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(idcase) DESC LIMIT 5
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(idcase) DESC LIMIT 5
SELECT resource FROM event_log WHERE activity = 'declaration' GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 5
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(id) DESC LIMIT 5
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(id) DESC LIMIT 5
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(id) DESC LIMIT 5
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 5
SELECT resource FROM events_log GROUP BY resource ORDER BY COUNT(id) DESC LIMIT 5
SELECT resource, COUNT(id) FROM event_log WHERE activity = 'Start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(id) FROM event_log WHERE activity = 'Start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(id) FROM event_log WHERE activity = 'Start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(activity) FROM event_log WHERE activity = 'start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(id) FROM event_log WHERE activity = 'start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(activity) FROM event_log WHERE activity = 'start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(activity) FROM event_log WHERE activity = 'start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 INNER JOIN idcase AS T2 ON T1.idcase = T2.id WHERE T1.activity = 'Start trip' AND strftime('%Y', T2.date) = '2016' GROUP BY T1.resource
SELECT COUNT(T1.activity), T1.resource FROM event_log AS T1 INNER JOIN idcase AS T2 ON T1.idcase = T2.id WHERE T2.year = 2016 AND T1.activity LIKE 'start trip' GROUP BY T1.resource
SELECT COUNT(T1.id) , T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'Declaration rejected by supervisor' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity = 'Declaration rejected by supervisor' GROUP BY T1.resource
SELECT COUNT(T1.id) , T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'Declaration rejected by supervisor' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity = 'Declaration rejected by supervisor' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity = 'Declaration rejected by supervisor' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity = 'Declaration rejected by supervisor' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity = 'Declaration rejected by supervisor' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'declaration rejected by supervisor' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'declaration rejected by supervisor' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'Declaration rejected by supervisor' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Declaration rejected by supervisor' AND T2.activity = 'Declaration submitted' GROUP BY T1.resource
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM events_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(*) AS cnt FROM event_log GROUP BY idcase ORDER BY cnt DESC LIMIT 10 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase ORDER BY COUNT(T1.idcase) DESC
SELECT T1.idcase FROM event_log AS T1 INNER JOIN (SELECT idcase, COUNT(activity) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase ORDER BY COUNT(T1.activity) DESC
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(*) AS cnt FROM event_log GROUP BY idcase ORDER BY cnt DESC LIMIT 10 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase ORDER BY COUNT(T1.idcase) DESC
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 1
SELECT T1.idcase, COUNT(T1.id) FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(id) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 5 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase
SELECT T1.idcase, COUNT(T1.id) FROM event_log AS T1 INNER JOIN ( SELECT idcase, MAX(timestamp) AS max_timestamp, MIN(timestamp) AS min_timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp BETWEEN T2.min_timestamp AND T2.max_timestamp GROUP BY T1.idcase ORDER BY COUNT(T1.id) DESC LIMIT 5
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(id) DESC LIMIT 10
SELECT DISTINCT idcase FROM events_log WHERE resource = 'Sara' AND idcase NOT IN (SELECT idcase FROM events_log WHERE activity = 'Request payment')
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'Request payment' AND T1.resource = 'Sara'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND activity != 'request payment'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' EXCEPT SELECT idcase FROM event_log WHERE activity = 'Request payment'
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Request payment' AND T2.resource = 'Sara'
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Start trip' AND T2.activity = 'Request payment' AND T2.resource = 'Sara'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaration 143598'
SELECT * FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01'
SELECT SUM(cost) FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01'
SELECT cost FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaration 143598'
SELECT * FROM event_log WHERE idcase = 143598 AND timestamp BETWEEN '2017-01-10' AND '2017-02-01'
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT T1.idcase), T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY T1.resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT T1.idcase), T1.resource FROM event_log AS T1 WHERE T1.timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY T1.resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT T1.idcase), T1.resource FROM event_log AS T1 INNER JOIN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT idcase, COUNT(id) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(id) DESC LIMIT 10
SELECT T1.idcase FROM event_log AS T1 INNER JOIN (SELECT idcase, COUNT(*) AS cnt FROM event_log GROUP BY idcase ORDER BY cnt DESC LIMIT 10) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase ORDER BY COUNT(T1.idcase) DESC
SELECT idcase FROM events_log GROUP BY idcase ORDER BY COUNT(idcase) DESC LIMIT 10
SELECT idcase FROM events_log GROUP BY idcase ORDER BY COUNT(id) DESC LIMIT 10
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(*) AS cnt FROM event_log GROUP BY idcase ORDER BY cnt DESC LIMIT 10 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase ORDER BY COUNT(T1.idcase) DESC
SELECT idcase, COUNT(id) FROM event_log GROUP BY idcase ORDER BY COUNT(id) DESC LIMIT 10
SELECT idcase, COUNT(id) AS activity_performances FROM event_log GROUP BY idcase ORDER BY activity_performances DESC LIMIT 10
SELECT T1.idcase, COUNT(T1.id) AS activity_count, (strftime('%s', MAX(T1.timestamp)) - strftime('%s', MIN(T1.timestamp))) AS duration FROM event_log AS T1 GROUP BY T1.idcase ORDER BY activity_count DESC LIMIT 10
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(DISTINCT activity) AS distinct_activities FROM event_log GROUP BY idcase ORDER BY distinct_activities DESC LIMIT 10 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase ORDER BY T1.idcase DESC
SELECT T1.idcase, COUNT(DISTINCT T1.activity) AS action_count FROM event_log AS T1 GROUP BY T1.idcase ORDER BY action_count DESC LIMIT 10
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(id) DESC LIMIT 10
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(id) DESC LIMIT 10
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10
SELECT idcase FROM events_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 10
SELECT COUNT(T1.idcase) FROM events_log AS T1 INNER JOIN (SELECT idcase, SUM(cost) AS total_cost FROM events_log GROUP BY idcase HAVING SUM(cost) = 0) AS T2 ON T1.idcase = T2.idcase
SELECT SUM(cost), idcase FROM event_log GROUP BY idcase
SELECT SUM(cost), idcase FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) FROM event_log GROUP BY idcase
SELECT SUM(cost) FROM event_log GROUP BY idcase
SELECT SUM(cost) FROM events_log WHERE activity = 'declaration'
SELECT SUM(cost) FROM event_log WHERE activity = 'Processing' GROUP BY idcase
SELECT resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY COUNT(*) DESC
SELECT resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY COUNT(*) DESC
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) >= 100 ORDER BY activity DESC
SELECT T1.idcase, T1.activity, T1.timestamp, T1.resource, T1.cost FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp ORDER BY T1.idcase, T1.timestamp
SELECT T1.idcase, T2.activity, T2.timestamp FROM cases AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase ORDER BY T1.idcase, T2.timestamp
SELECT idcase, MIN(timestamp) FROM event_log GROUP BY idcase ORDER BY idcase, MIN(timestamp)
SELECT T1.idcase, T1.activity, T1.timestamp FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp ORDER BY T1.idcase, T1.timestamp
SELECT idcase, activity, timestamp, resource, cost FROM event_log ORDER BY idcase, timestamp
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'Declaration approved by administration' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'Declaration approved by administration' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity = 'Declaration approved by administration' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity = 'Declaration approved by administration' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.id = T2.id WHERE T1.activity = 'Declaration approved by administration' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity = 'Declaration approved by administration' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity = 'Declaration approved by administration' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.id = T2.id WHERE T2.activity = 'Declaration approved by administration' GROUP BY T1.resource
SELECT activity, COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity
SELECT activity, COUNT(activity) FROM event_log WHERE resource = 'Thomas' AND strftime('%Y', timestamp) = '2017' GROUP BY activity
SELECT activity, COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity
SELECT activity, COUNT(activity) FROM event_log WHERE strftime('%Y', timestamp) = '2017' AND resource = 'Thomas' GROUP BY activity
SELECT COUNT(activity) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT COUNT(activity), activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity
SELECT COUNT(activity) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(id) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN idcase AS T2 ON T1.idcase = T2.id WHERE T1.resource = 'Thomas' AND T1.timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'Declaration submitted by employee' AND strftime('%Y', timestamp) = '2017'
SELECT activity, MAX(timestamp) FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS timestamp FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS timestamp, id FROM event_log GROUP BY activity ORDER BY timestamp
SELECT activity, MAX(timestamp) FROM event_log GROUP BY activity
SELECT SUM(CASE WHEN activity = 'declaration approved by supervisor' AND strftime('%Y', timestamp) = '2017' THEN 1 ELSE 0 END) + SUM(CASE WHEN activity = 'permit rejected by employee' AND strftime('%Y', timestamp) = '2018' THEN 1 ELSE 0 END) AS count FROM event_log
SELECT COUNT(CASE WHEN activity = 'declaration approved by supervisor' THEN 1 END), COUNT(CASE WHEN activity = 'permit rejected by employee' THEN 1 END) FROM event_log WHERE strftime('%Y', timestamp) = '2017' OR strftime('%Y', timestamp) = '2018'
SELECT SUM(CASE WHEN activity = 'declaration approved by supervisor' AND strftime('%Y', timestamp) = '2017' THEN 1 ELSE 0 END), SUM(CASE WHEN activity = 'permit rejected by employee' AND strftime('%Y', timestamp) = '2018' THEN 1 ELSE 0 END) FROM event_log
SELECT SUM(CASE WHEN activity = 'Declaration approved by supervisor' AND strftime('%Y', timestamp) = '2017' THEN 1 ELSE 0 END), SUM(CASE WHEN activity = 'Permit rejected by employee' AND strftime('%Y', timestamp) = '2018' THEN 1 ELSE 0 END) FROM event_log
SELECT SUM(CASE WHEN activity = 'declaration approved by supervisor' AND strftime('%Y', timestamp) = '2017' THEN 1 ELSE 0 END), SUM(CASE WHEN activity = 'permit rejected by employee' AND strftime('%Y', timestamp) = '2018' THEN 1 ELSE 0 END) FROM event_log
SELECT SUM(CASE WHEN activity = 'Declaration approved by supervisor' THEN 1 ELSE 0 END) AS approvals_2017, SUM(CASE WHEN activity = 'Permit rejected by employee' THEN 1 ELSE 0 END) AS rejections_2018 FROM event_log WHERE strftime('%Y', timestamp) = '2017' OR strftime('%Y', timestamp) = '2018'
SELECT activity, timestamp, id FROM event_log ORDER BY timestamp
SELECT activity, timestamp, id FROM event_log ORDER BY timestamp DESC
SELECT activity, timestamp, id FROM event_log WHERE activity LIKE '%declaration%' ORDER BY timestamp
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN cases AS T2 ON T1.idcase = T2.id WHERE T1.resource = 'Thomas' AND T1.activity = 'declaration submitted by employee' AND T2.status = 'submitted'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN cases AS T2 ON T1.idcase = T2.id WHERE T1.resource = 'Thomas' AND T1.activity = 'declaration submitted by employee' AND T1.timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'declaration submitted by employee' AND T2.resource = 'Thomas' AND T2.timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN resource AS T2 ON T1.resource = T2.id WHERE T1.activity = 'Declaration submitted by employee' AND T2.name = 'Thomas'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN resource AS T2 ON T1.resource = T2.id WHERE T1.activity = 'Declaration submitted by employee' AND T2.name = 'Thomas'
SELECT COUNT(id) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaration request' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.id = T2.id WHERE T2.resource = 'Diana' AND T2.cost IS NOT NULL
SELECT activity, COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.id = T2.id WHERE T1.resource = 'Diana' AND T2.cost IS NOT NULL
SELECT activity FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT activity, COUNT(CASE WHEN cost IS NOT NULL THEN 1 END) AS event_count FROM event_log WHERE resource = 'Diana' GROUP BY activity
SELECT activity, COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity
SELECT activity FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3)
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT DISTINCT resource FROM events_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource
SELECT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND strftime('%Y', timestamp) = '2017' AND CAST(strftime('%w', timestamp) AS INTEGER) BETWEEN 1 AND 5
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31'
SELECT COUNT(DISTINCT T1.idcase) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity LIKE '%approved%' AND T2.activity LIKE '%director%' AND T1.timestamp BETWEEN '2017-01-01' AND '2017-05-31'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01'
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.resource = 'Charles' AND T2.timestamp BETWEEN '2018-01-01' AND '2018-01-31'
SELECT T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.resource = 'Charles' AND T2.timestamp BETWEEN '2018-01-01' AND '2018-01-31' GROUP BY T1.resource
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND timestamp BETWEEN '2017-05-01' AND '2017-06-01' AND timestamp NOT BETWEEN '2018-01-01' AND '2018-01-31'
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT T1.idcase FROM event_log AS T1 GROUP BY T1.idcase HAVING COUNT(DISTINCT T1.activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(DISTINCT activity) AS cnt FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3 ) AS T2 ON T1.idcase = T2.idcase
SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase
SELECT idcase, SUM(strftime('%s', timestamp) - strftime('%s', LAG(timestamp, 1, timestamp) OVER (PARTITION BY idcase ORDER BY timestamp))) AS total_time FROM event_log GROUP BY idcase
SELECT T1.idcase, MAX(T1.timestamp, T2.timestamp, T3.timestamp) - MIN(T1.timestamp) AS duration FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase INNER JOIN event_log AS T3 ON T1.idcase = T3.idcase WHERE T2.activity = 'End trip' AND T3.activity = 'Declaration rejected by employee' GROUP BY T1.idcase
SELECT T1.idcase, MAX(T1.timestamp) - MIN(T1.timestamp) AS duration FROM events_log AS T1 GROUP BY T1.idcase
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase
SELECT T1.idcase, SUM(T2.duration) AS total_duration FROM event_log AS T1 INNER JOIN ( SELECT idcase, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) AS duration FROM ( SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log ) WHERE next_timestamp IS NOT NULL ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase
SELECT T1.idcase, T1.resource FROM event_log AS T1 INNER JOIN ( SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 ) AS T2 ON T1.idcase = T2.idcase AND T1.resource = T2.resource GROUP BY T1.idcase, T1.resource
SELECT T1.idcase, T1.resource FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase HAVING num_resources = 1 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase, T1.resource
SELECT T1.idcase, T1.resource FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase HAVING num_resources = 1 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase, T1.resource
SELECT T1.idcase, T1.resource FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(DISTINCT resource) AS cnt FROM event_log GROUP BY idcase HAVING cnt = 1 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase, T1.resource
SELECT T1.idcase, T1.resource FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(DISTINCT resource) AS cnt FROM event_log GROUP BY idcase HAVING cnt = 1 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase, T1.resource
SELECT T1.idcase, T1.resource FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(DISTINCT resource) AS cnt FROM event_log GROUP BY idcase HAVING cnt = 1 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase, T1.resource
SELECT T1.idcase, T1.resource FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(DISTINCT resource) AS cnt FROM event_log GROUP BY idcase HAVING cnt = 1 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase, T1.resource
SELECT T1.idcase, T1.resource FROM event_log AS T1 INNER JOIN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase, T1.resource
SELECT T1.idcase, T1.resource FROM event_log AS T1 INNER JOIN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase, T1.resource
SELECT T1.idcase, T2.resource FROM event_log AS T1 INNER JOIN ( SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 ) AS T2 ON T1.idcase = T2.idcase
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND strftime('%Y', timestamp) BETWEEN '2016' AND '2017' ORDER BY resource
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND strftime('%Y', timestamp) BETWEEN '2016' AND '2017'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT COUNT(id) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT activity, COUNT(*) FROM event_log WHERE activity LIKE '%rejection%' GROUP BY activity
SELECT MIN(cost), MAX(cost) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) > 0) GROUP BY idcase HAVING MAX(cost) > 0
SELECT idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0
SELECT MIN(cost), MAX(cost) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase
SELECT idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0
SELECT MIN(cost), MAX(cost) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase
SELECT MIN(cost), MAX(cost) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase
SELECT MIN(cost), MAX(cost) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase
SELECT idcase, MIN(cost), MAX(cost) FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost), MAX(cost) FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost), MAX(cost) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase
SELECT MIN(cost), MAX(cost) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase
SELECT idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0
SELECT MIN(cost), MAX(cost) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE cost > 0 GROUP BY idcase HAVING MAX(cost) > 0)
SELECT MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0
SELECT T1.idcase, strftime('%s', T2.timestamp) - strftime('%s', T1.timestamp) AS duration, T2.activity FROM ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ) AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled')
SELECT T1.idcase, strftime('%s', T2.timestamp) - strftime('%s', T1.timestamp) AS duration, T2.activity FROM ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ) AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled')
SELECT T1.idcase, CASE WHEN T1.activity = 'End trip' THEN strftime('%s', T1.timestamp) - strftime('%s', T2.start_time) END AS 'End trip', CASE WHEN T1.activity = 'Declaration rejected by employee' THEN strftime('%s', T1.timestamp) - strftime('%s', T2.start_time) END AS 'Declaration rejected by employee', CASE WHEN T1.activity = 'Payment handled' THEN strftime('%s', T1.timestamp) - strftime('%s', T2.start_time) END AS 'Payment handled' FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS start_time FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase WHERE T1.activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled') GROUP BY T1.idcase, T1.activity
SELECT T1.idcase, strftime('%s', T2.timestamp) - strftime('%s', T1.timestamp) AS 'Time to Finalization' FROM ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ) AS T1 INNER JOIN ( SELECT idcase, MAX(timestamp) AS timestamp FROM event_log WHERE activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled') GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase;
SELECT T1.idcase, strftime('%s', T2.timestamp) - strftime('%s', T1.timestamp) AS 'End trip', strftime('%s', T3.timestamp) - strftime('%s', T1.timestamp) AS 'Declaration rejected by employee', strftime('%s', T4.timestamp) - strftime('%s', T1.timestamp) AS 'Payment handled', T5.activity FROM ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ) AS T1 LEFT JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T2.activity = 'End trip' LEFT JOIN event_log AS T3 ON T1.idcase = T3.idcase AND T3.activity = 'Declaration rejected by employee' LEFT JOIN event_log AS T4 ON T1.idcase = T4.idcase AND T4.activity = 'Payment handled' LEFT JOIN ( SELECT idcase, activity FROM event_log WHERE activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled') GROUP BY idcase ) AS T5 ON T1.idcase = T5.idcase
SELECT T1.idcase, strftime('%s', T2.timestamp) - strftime('%s', T1.timestamp) AS 'End trip', strftime('%s', T3.timestamp) - strftime('%s', T1.timestamp) AS 'Declaration rejected by employee', strftime('%s', T4.timestamp) - strftime('%s', T1.timestamp) AS 'Payment handled', CASE WHEN T2.timestamp IS NOT NULL THEN 'End trip' WHEN T3.timestamp IS NOT NULL THEN 'Declaration rejected by employee' WHEN T4.timestamp IS NOT NULL THEN 'Payment handled' ELSE 'No final activity' END AS 'Final activity' FROM ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ) AS T1 LEFT JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T2.activity = 'End trip' LEFT JOIN event_log AS T3 ON T1.idcase = T3.idcase AND T3.activity = 'Declaration rejected by employee' LEFT JOIN event_log AS T4 ON T1.idcase = T4.idcase AND T4.activity = 'Payment handled';
SELECT T1.idcase, CASE WHEN T2.activity = 'End trip' THEN T2.timestamp - T1.timestamp WHEN T3.activity = 'Declaration rejected by employee' THEN T3.timestamp - T1.timestamp WHEN T4.activity = 'Payment handled' THEN T4.timestamp - T1.timestamp ELSE NULL END AS duration, CASE WHEN T2.activity = 'End trip' THEN 'End trip' WHEN T3.activity = 'Declaration rejected by employee' THEN 'Declaration rejected by employee' WHEN T4.activity = 'Payment handled' THEN 'Payment handled' ELSE NULL END AS activity FROM ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ) AS T1 LEFT JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T2.activity = 'End trip' LEFT JOIN event_log AS T3 ON T1.idcase = T3.idcase AND T3.activity = 'Declaration rejected by employee' LEFT JOIN event_log AS T4 ON T1.idcase = T4.idcase AND T4.activity = 'Payment handled';
SELECT T1.idcase, T1.activity, T1.timestamp - ( SELECT MIN(timestamp) FROM event_log WHERE idcase = T1.idcase ) AS duration FROM event_log AS T1 WHERE T1.activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled') ORDER BY T1.idcase, duration
SELECT T1.idcase, T1.activity, strftime('%s', T1.timestamp) - strftime('%s', T2.timestamp) AS elapsed_time FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase WHERE T1.activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled')
SELECT T1.idcase, strftime('%s', T2.timestamp) - strftime('%s', T1.timestamp) AS 'End trip', strftime('%s', T3.timestamp) - strftime('%s', T1.timestamp) AS 'Declaration rejected by employee', strftime('%s', T4.timestamp) - strftime('%s', T1.timestamp) AS 'Payment handled' FROM ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ) AS T1 LEFT JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T2.activity = 'End trip' LEFT JOIN event_log AS T3 ON T1.idcase = T3.idcase AND T3.activity = 'Declaration rejected by employee' LEFT JOIN event_log AS T4 ON T1.idcase = T4.idcase AND T4.activity = 'Payment handled';
SELECT * FROM event_log WHERE activity = 'Request payment'
SELECT * FROM event_log WHERE activity = 'Request payment'
SELECT DISTINCT idcase FROM events_log WHERE activity = 'Request payment'
SELECT T1.cost, T1.activity FROM event_log AS T1 INNER JOIN cases AS T2 ON T1.idcase = T2.id WHERE T2.type = 'declaration' ORDER BY T1.cost DESC
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(JULIANDAY(timestamp) - JULIANDAY(LAG(timestamp, 1, timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(JULIANDAY(timestamp) - JULIANDAY(LAG(timestamp, 1, timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(JULIANDAY(timestamp) - JULIANDAY(LAG(timestamp, 1, timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(JULIANDAY(timestamp) - JULIANDAY(LAG(timestamp, 1, timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', lag(timestamp, 1, timestamp) OVER (PARTITION BY idcase ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', lag(timestamp, 1, timestamp) OVER (PARTITION BY idcase ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 day')) AS duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp, '-1 second')) AS avg_duration FROM event_log GROUP BY activity
SELECT T1.activity, AVG(strftime('%s', T2.timestamp) - strftime('%s', T1.timestamp)) AS avg_duration FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = T2.activity AND T1.id < T2.id GROUP BY T1.activity
SELECT DISTINCT idcase FROM event_log ORDER BY cost DESC LIMIT 1
SELECT idcase FROM events_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1
SELECT DISTINCT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT T1.* FROM event_log AS T1 INNER JOIN (SELECT MAX(cost) AS max_cost FROM event_log) AS T2 ON T1.cost = T2.max_cost
SELECT * FROM event_log ORDER BY cost DESC LIMIT 1
SELECT idcase FROM events_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT MAX(cost) FROM event_log
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp WHERE T1.activity = 'Start trip' AND strftime('%Y-%m', T1.timestamp) = '2017-03'
SELECT activity, COUNT(*) FROM event_log GROUP BY activity
SELECT activity, COUNT(id) FROM event_log GROUP BY activity
SELECT activity, COUNT(*) FROM event_log GROUP BY activity
SELECT activity, COUNT(id) FROM event_log GROUP BY activity
SELECT COUNT(T1.id), T1.activity FROM event_log AS T1 GROUP BY T1.activity
SELECT COUNT(T1.id), T1.activity FROM event_log AS T1 GROUP BY T1.activity
SELECT COUNT(id) , activity FROM event_log GROUP BY activity
SELECT activity, COUNT(*) FROM event_log GROUP BY activity
SELECT activity, COUNT(id) FROM event_log GROUP BY activity
SELECT activity, COUNT(*) FROM event_log GROUP BY activity
SELECT activity, COUNT(id) FROM event_log GROUP BY activity
SELECT COUNT(id), activity FROM event_log GROUP BY activity
SELECT COUNT(T1.id) , T1.activity FROM event_log AS T1 GROUP BY T1.activity
SELECT COUNT(T1.id) , T1.activity FROM event_log AS T1 GROUP BY T1.activity
SELECT activity, COUNT(*) FROM event_log GROUP BY activity
SELECT COUNT(T1.id), T1.activity FROM event_log AS T1 GROUP BY T1.activity
SELECT COUNT(T1.id), T1.activity FROM event_log AS T1 GROUP BY T1.activity
SELECT COUNT(id), idcase FROM event_log GROUP BY idcase
SELECT activity, COUNT(activity) FROM event_log GROUP BY activity
SELECT activity, COUNT(id) AS intervention_count FROM event_log GROUP BY activity
SELECT COUNT(id), idcase, activity FROM event_log GROUP BY idcase, activity
SELECT activity, COUNT(id) FROM event_log GROUP BY activity
SELECT COUNT(id), idcase, activity FROM event_log GROUP BY idcase, activity
SELECT COUNT(DISTINCT activity) FROM event_log WHERE idcase = 'declaration'
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource ORDER BY SUM(cost)
SELECT cost, activity FROM event_log WHERE cost IS NOT NULL ORDER BY cost
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource ORDER BY SUM(cost)
SELECT cost, activity FROM event_log ORDER BY cost
SELECT cost, activity FROM event_log ORDER BY cost
SELECT cost, activity FROM event_log ORDER BY cost
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity ORDER BY total_cost DESC
SELECT id, activity, resource, cost FROM event_log WHERE activity LIKE 'Declaration Processing' ORDER BY cost DESC
SELECT * FROM event_log WHERE activity LIKE 'Permit%'
SELECT cost, activity FROM event_log WHERE activity = 'permit'
SELECT * FROM event_log WHERE activity = 'permit'
SELECT * FROM event_log WHERE activity LIKE 'Permit%'
SELECT * FROM event_log WHERE activity LIKE 'Permit%'
SELECT activity, cost FROM event_log WHERE activity LIKE 'Permit%'
SELECT T1.activity, T1.timestamp, T1.resource, T1.cost FROM event_log AS T1 INNER JOIN (SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase
SELECT DISTINCT activity FROM event_log WHERE activity LIKE 'Permit%'
SELECT cost FROM event_log WHERE activity = 'permit'
SELECT * FROM event_log WHERE activity LIKE 'Permit%'
SELECT DISTINCT T1.id FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity LIKE 'Permit%' AND T2.activity LIKE 'Declaration%'
SELECT T1.idcase, T1.activity, T1.timestamp, T1.resource, T1.cost FROM event_log AS T1 INNER JOIN ( SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING count(*) > 1 ) AS T2 ON T1.idcase = T2.idcase
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM events_log
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.resource = 'Sara' AND T2.resource = 'Thomas'
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.resource = 'Sara' AND T2.resource = 'Thomas'
SELECT DISTINCT idcase FROM events_log WHERE resource = 'Sara' OR resource = 'Thomas'
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.resource = 'Sara' AND T2.resource = 'Thomas'
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.resource = 'Sara' AND T2.resource = 'Thomas'
SELECT DISTINCT T1.idcase FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase WHERE T1.resource = 'Sara' AND T2.resource = 'Thomas'
SELECT resource, COUNT(activity) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT resource, COUNT(activity) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT resource, COUNT(activity) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT resource, COUNT(activity) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT resource, COUNT(id) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT resource, COUNT(id) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(T1.id), T1.resource, T1.idcase FROM event_log AS T1 WHERE T1.activity = 'Declaration rejected by administration' GROUP BY T1.resource, T1.idcase
SELECT resource, COUNT(id) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT resource, COUNT(id) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT resource, COUNT(id) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Declaration rejected by administration' AND T2.activity = 'Administrator' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource, T1.idcase FROM event_log AS T1 WHERE T1.activity = 'Declaration rejected by administration' GROUP BY T1.resource, T1.idcase
SELECT COUNT(T1.id), T1.resource, T1.idcase FROM event_log AS T1 WHERE T1.activity = 'Declaration rejected by administration' GROUP BY T1.resource, T1.idcase
SELECT COUNT(T1.id), T1.resource, T1.idcase FROM event_log AS T1 WHERE T1.activity = 'Declaration rejected by administration' GROUP BY T1.resource, T1.idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT resource, idcase, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT resource, COUNT(resource), idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT COUNT(T1.id), T1.resource, T1.idcase FROM event_log AS T1 WHERE T1.activity = 'Declaration rejected by administration' GROUP BY T1.resource, T1.idcase
SELECT resource, idcase, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT T1.resource, COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Declaration rejected by administration' AND T2.activity = 'Declaration processed' GROUP BY T1.resource
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip')
SELECT AVG(cost) FROM event_log WHERE activity != 'start trip' AND activity != 'end trip'
SELECT AVG(cost) FROM event_log WHERE activity != 'start trip' AND activity != 'end trip'
SELECT AVG(cost) FROM event_log WHERE activity != 'start trip' AND activity != 'end trip'
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start trip', 'End trip')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start trip', 'End trip')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip')
SELECT AVG(cost) FROM event_log WHERE activity != 'start trip' AND activity != 'end trip'
SELECT AVG(cost) FROM event_log WHERE activity != 'trip_start' AND activity != 'trip_end'
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT T1.cost, T1.activity FROM event_log AS T1 INNER JOIN ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ORDER BY total_cost DESC LIMIT 5 ) AS T2 ON T1.idcase = T2.idcase ORDER BY T1.cost DESC
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT cost FROM events_log ORDER BY cost DESC LIMIT 5
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(activity) > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(activity) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(activity) > 1
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT * FROM event_log WHERE date(timestamp) IN ('2018-10-01', '2018-10-02')
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02' AND activity = 'declaration'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM events_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM events_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT activity, timestamp, cost, idcase FROM event_log WHERE resource LIKE 'M%'
SELECT activity FROM event_log WHERE resource LIKE 'M%' AND idcase IN (SELECT id FROM event_log WHERE activity LIKE '%declaration%')
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5
SELECT activity FROM event_log WHERE idcase LIKE 'declaration%' GROUP BY activity HAVING COUNT(activity) > 5
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(activity) > 3
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp < T2.timestamp WHERE T2.activity = 'Declaration final approved by director' AND T1.idcase = '56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'Declaration final approved by director' AND T1.timestamp < T2.timestamp AND T1.idcase = '56300'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'declaration 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300'
SELECT COUNT(id) FROM event_log WHERE idcase = 'declaration 56300'
SELECT * FROM event_log WHERE idcase = 56300
SELECT activity, COUNT(*) FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(activity) FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(activity) > 1
SELECT activity, COUNT(activity) FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(activity) > 1
SELECT activity, COUNT(id) FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(id) > 1
SELECT activity, COUNT(*) FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(*) FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(*) FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(activity) FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(activity) > 1
SELECT activity, COUNT(activity) FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(activity) > 1
SELECT activity, COUNT(*) FROM event_log WHERE timestamp < '2017-10-01' AND idcase IS NOT NULL GROUP BY activity
SELECT activity, COUNT(activity) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(activity) > 1
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS declaration_count FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(id) FROM event_log GROUP BY resource
SELECT COUNT(resource), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT T1.resource) FROM event_log AS T1 INNER JOIN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3) AS T2 ON T1.idcase = T2.idcase
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT DISTINCT idcase FROM events_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT COUNT(DISTINCT T1.idcase), T1.resource FROM event_log AS T1 WHERE T1.timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY T1.resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT T1.idcase), T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY T1.resource
SELECT COUNT(DISTINCT T1.idcase), T1.resource FROM event_log AS T1 WHERE T1.timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY T1.resource
SELECT COUNT(DISTINCT T1.idcase), T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'intervention' AND T1.timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY T1.resource
SELECT COUNT(DISTINCT T1.idcase), T1.resource FROM event_log AS T1 WHERE T1.timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY T1.resource
SELECT COUNT(DISTINCT T1.idcase), T1.resource FROM event_log AS T1 WHERE T1.timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY T1.resource
SELECT COUNT(DISTINCT T1.idcase), T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.timestamp BETWEEN '2017-05-01' AND '2017-06-01' AND T2.activity = 'intervention' GROUP BY T1.resource
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT T1.activity, T1.resource FROM event_log AS T1 EXCEPT SELECT T2.activity, T2.resource FROM event_log AS T2 WHERE T2.resource IN ('Joshua', 'Teresa')
SELECT DISTINCT T1.activity, T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity LIKE '%supervisor%' AND T1.resource NOT IN ('Joshua', 'Teresa')
SELECT T1.activity, T1.resource FROM event_log AS T1 INNER JOIN users AS T2 ON T1.resource = T2.username WHERE T2.username != 'Joshua' AND T2.username != 'Teresa'
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity IN ('Start trip', 'End trip') AND T2.activity IN ('Request Payment', 'Payment handled')
SELECT DISTINCT idcase FROM events_log WHERE activity IN ('Start trip', 'End trip') EXCEPT SELECT DISTINCT idcase FROM events_log WHERE activity IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM events_log WHERE activity IN ('Start trip', 'End trip') EXCEPT SELECT DISTINCT idcase FROM events_log WHERE activity IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'Trip end') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled')
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity IN ('start trip', 'end trip') AND T2.activity NOT IN ('request payment', 'payment handled')
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Started', 'Completed') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled')
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Begin trip' AND T2.activity = 'End trip' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled'
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Start trip' AND T2.activity = 'End trip' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled'
SELECT DISTINCT T1.idcase FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Start trip' AND T2.activity = 'End trip' EXCEPT SELECT DISTINCT idcase FROM events_log WHERE activity = 'Request Payment' OR activity = 'Payment handled'
SELECT DISTINCT T1.idcase FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Start trip' AND T2.activity = 'End trip' EXCEPT SELECT DISTINCT idcase FROM events_log WHERE activity = 'Request Payment' OR activity = 'Payment handled'
SELECT id FROM event_log WHERE resource IS NULL
SELECT id FROM event_log WHERE resource IS NULL OR resource = ''
SELECT id FROM event_log WHERE resource IS NULL
SELECT activity, resource FROM event_log WHERE resource IS NULL
SELECT id FROM event_log WHERE resource IS NULL
SELECT activity FROM event_log WHERE resource IS NULL
SELECT * FROM event_log WHERE resource IS NULL
SELECT resource, COUNT(id) FROM event_log WHERE resource IS NULL OR cost IS NULL GROUP BY resource
SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) < '2017-03'
SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) < '2017-03'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'performance' AND timestamp < '2017-03-01'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2017-03-01'
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01'
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'process' AND timestamp < '2017-03-01'
SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) < '2017-03'
SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) < '2017-03'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Processing' AND timestamp < '2017-03-01'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' AND id IN (SELECT MIN(id) FROM event_log WHERE idcase = idcase GROUP BY idcase)
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31'
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Start trip' AND T2.activity = 'Start trip' AND T1.timestamp < T2.timestamp AND T1.timestamp LIKE '2017-03%' AND T2.timestamp LIKE '2017-03%' GROUP BY T1.idcase
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31'
SELECT idcase FROM event_log WHERE activity = 'start of the trip' AND timestamp LIKE '2017-03%'
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT resource, COUNT(id) FROM event_log GROUP BY idcase, resource HAVING COUNT(id) > 5
SELECT resource, COUNT(id) FROM event_log GROUP BY idcase, resource HAVING COUNT(id) > 5
SELECT resource, COUNT(*) FROM event_log GROUP BY idcase, resource HAVING COUNT(*) > 5
SELECT resource, COUNT(id) FROM event_log GROUP BY idcase, resource HAVING COUNT(id) > 5
SELECT resource, COUNT(*) FROM event_log GROUP BY idcase, resource HAVING COUNT(*) > 5
SELECT resource, COUNT(idcase) FROM event_log GROUP BY resource, idcase HAVING COUNT(idcase) > 5
SELECT resource, COUNT(resource) FROM event_log GROUP BY resource HAVING COUNT(resource) > 5
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'declaration' GROUP BY resource HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT idcase) > 5
SELECT resource FROM event_log WHERE activity = 'declarations' GROUP BY resource HAVING COUNT(resource) > 5
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(activity) DESC LIMIT 1
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(activity) DESC LIMIT 1
SELECT activity FROM events_log GROUP BY activity ORDER BY COUNT(activity) DESC LIMIT 1
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(activity) DESC LIMIT 1
SELECT activity, COUNT(idcase) AS count FROM event_log GROUP BY activity ORDER BY count DESC LIMIT 10
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 10
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 10
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 10
SELECT resource, COUNT(activity) AS count FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY count DESC
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 10
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(resource) DESC
SELECT resource, COUNT(activity) FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource ORDER BY COUNT(activity) DESC
SELECT resource FROM event_log WHERE activity = 'Declaration approved by supervisor' GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 10
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaration approved by budget owner' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaration approved by budget owner' AND resource IN ('Eugine', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugine', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%budget owner%' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'approved' AND resource IN ('Eugene', 'Marie')
SELECT activity FROM event_log WHERE idcase = 49464 EXCEPT SELECT activity FROM event_log WHERE idcase = 76667
SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaration 49464' EXCEPT SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaration 76667'
SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaration 49464' EXCEPT SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaration 76667'
SELECT T1.activity FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.id = 49464 AND T2.id = 76667 AND T1.activity != T2.activity
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN (SELECT resource FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING COUNT(id) > 2) AS T2 ON T1.resource = T2.resource WHERE T1.activity = 'Declaration submitted by employee' GROUP BY T1.resource
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING COUNT(*) > 2
SELECT resource, COUNT(resource) FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING COUNT(resource) > 2
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING COUNT(*) > 2
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING COUNT(*) > 2
SELECT resource, COUNT(DISTINCT idcase) AS declaration_count FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 2
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01 00:00:00' AND '2017-05-10 23:59:59'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM events_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT T1.idcase, COUNT(T2.resource) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase
SELECT idcase, COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'Processing'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Christopher'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Christopher'
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = COUNT(id)
SELECT T1.idcase FROM event_log AS T1 INNER JOIN (SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = (SELECT COUNT(DISTINCT activity) FROM event_log WHERE resource = 'Christopher')) AS T2 ON T1.idcase = T2.idcase
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = COUNT(id)
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = COUNT(id)
SELECT T1.idcase FROM event_log AS T1 INNER JOIN employee AS T2 ON T1.resource = T2.id WHERE T2.name = 'Christopher' GROUP BY T1.idcase HAVING COUNT(DISTINCT T1.resource) = 1
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 ) AS T2 ON T1.idcase = T2.idcase
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(DISTINCT resource) AS resource_count FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 ) AS T2 ON T1.idcase = T2.idcase
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log GROUP BY resource HAVING COUNT(DISTINCT id) > 1
SELECT T1.resource FROM event_log AS T1 INNER JOIN (SELECT resource, COUNT(DISTINCT id) AS num_cases FROM event_log GROUP BY resource HAVING COUNT(DISTINCT id) = 1) AS T2 ON T1.resource = T2.resource
SELECT idcase FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND DATE(T1.timestamp) = DATE(T2.timestamp) AND T1.id != T2.id GROUP BY T1.idcase
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND DATE(T1.timestamp) = DATE(T2.timestamp) AND T1.id != T2.id GROUP BY T1.idcase
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.id <> T2.id AND DATE(T1.timestamp) = DATE(T2.timestamp) GROUP BY T1.idcase HAVING COUNT(T1.id) > 1
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.timestamp AND T1.activity = 'intervention' AND T2.activity = 'intervention' AND T1.id <> T2.id GROUP BY T1.idcase
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.timestamp AND T1.activity = 'intervention' AND T2.activity = 'intervention' AND T1.id <> T2.id GROUP BY T1.idcase
SELECT resource, idcase, COUNT(CASE WHEN cost = 0 THEN 1 ELSE NULL END) AS zero_cost_events FROM event_log GROUP BY resource, idcase
SELECT T1.resource, COUNT(T1.id) FROM event_log AS T1 INNER JOIN (SELECT idcase FROM event_log WHERE cost = 0) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.resource
SELECT T1.idcase, T1.resource, COUNT(T1.id) FROM event_log AS T1 INNER JOIN (SELECT idcase, resource FROM event_log WHERE cost = 0) AS T2 ON T1.idcase = T2.idcase AND T1.resource = T2.resource GROUP BY T1.idcase, T1.resource
SELECT T1.resource, COUNT(T1.id) FROM event_log AS T1 INNER JOIN (SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp WHERE T1.cost = 0 GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource, T1.idcase FROM event_log AS T1 WHERE T1.cost = 0 GROUP BY T1.resource, T1.idcase
SELECT resource, idcase, COUNT(CASE WHEN cost = 0 THEN 1 END) AS zero_cost_events FROM event_log GROUP BY resource, idcase
SELECT T1.resource, COUNT(T1.id) FROM event_log AS T1 INNER JOIN cases AS T2 ON T1.idcase = T2.id WHERE T2.type = 'declaration' AND T1.cost = 0 GROUP BY T1.resource
SELECT COUNT(T1.resource) FROM event_log AS T1 INNER JOIN (SELECT idcase FROM event_log WHERE cost = 0 GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase
SELECT id FROM event_log WHERE activity = 'permit rejected by director'
SELECT id, timestamp, resource, cost, idcase FROM events_log WHERE activity = 'Permit rejected by director'
SELECT id, activity, timestamp FROM event_log WHERE activity = 'permit rejected by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director'
SELECT * FROM event_log WHERE activity = 'permit rejected by director'
SELECT * FROM events_log WHERE activity = 'Permit rejected by director'
SELECT T1.* FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity LIKE '%Permit%' AND T2.activity LIKE '%rejected%'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by director'
SELECT DATE(timestamp), SUM(cost) FROM event_log GROUP BY DATE(timestamp)
SELECT DATE(timestamp), SUM(cost) FROM event_log GROUP BY DATE(timestamp)
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date
SELECT DATE(timestamp), SUM(cost) FROM event_log GROUP BY DATE(timestamp)
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date
SELECT strftime('%Y-%m-%d', timestamp) AS event_date, COUNT(*) AS event_count FROM event_log GROUP BY event_date
SELECT DATE(timestamp), SUM(cost) FROM event_log GROUP BY DATE(timestamp)
SELECT activity FROM event_log WHERE cost > 1000 AND resource LIKE '%supervisor%' OR resource LIKE '%director%'
SELECT activity FROM event_log WHERE cost > 1000 AND activity LIKE '%supervisor%' OR activity LIKE '%director%' GROUP BY activity
SELECT activity FROM event_log WHERE cost > 1000 AND resource IN ('supervisor', 'director')
SELECT activity FROM event_log WHERE activity LIKE '%supervisor%' OR activity LIKE '%director%' AND cost > 1000
SELECT DISTINCT activity FROM event_log WHERE cost > 1000 AND resource IN ('supervisor', 'director')
SELECT activity FROM event_log WHERE cost > 1000 AND activity LIKE '%supervisor%' OR activity LIKE '%director%' GROUP BY activity
SELECT COUNT(DISTINCT idcase) FROM (SELECT COUNT(*) AS events_count, idcase FROM event_log GROUP BY idcase)
SELECT COUNT(id), idcase FROM event_log GROUP BY idcase
SELECT COUNT(id), idcase FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT idcase) FROM ( SELECT COUNT(*) AS events_count, idcase FROM event_log GROUP BY idcase )
SELECT COUNT(id), idcase FROM event_log GROUP BY idcase
SELECT COUNT(id), idcase FROM event_log GROUP BY idcase
SELECT T1.idcase, COUNT(T1.id) FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log WHERE activity = 'Declaration final approved by director' GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp < T2.timestamp GROUP BY T1.idcase
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 GROUP BY T1.resource
SELECT T1.idcase, COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.resource = 'Alexis' GROUP BY T1.idcase
SELECT T1.idcase, COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.resource = 'Alexis' GROUP BY T1.idcase
SELECT T1.idcase, COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.resource = 'Alexis' GROUP BY T1.idcase
SELECT T1.idcase, COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.resource = 'Alexis' GROUP BY T1.idcase
SELECT T1.idcase, COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.resource = 'Alexis' GROUP BY T1.idcase
SELECT COUNT(activity), idcase FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT T1.idcase, T1.activity FROM event_log AS T1 INNER JOIN ( SELECT idcase FROM event_log WHERE resource = 'Alexis' GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase WHERE T1.resource = 'Alexis'
SELECT T1.idcase, COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.resource = 'Alexis' GROUP BY T1.idcase
SELECT COUNT(DISTINCT T1.idcase) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Permit final approved by supervisor' AND T2.activity = 'Start trip' AND T1.timestamp < T2.timestamp
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'permit final approved by supervisor' AND T2.activity = 'start trip' AND T1.timestamp < T2.timestamp
SELECT COUNT(DISTINCT T1.idcase) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = 'permit final approved by supervisor' AND T2.activity = 'start trip'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'permit final approved by supervisor' AND timestamp < (SELECT timestamp FROM event_log WHERE activity = 'start trip' AND idcase = event_log.idcase)
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'start trip' AND T2.activity = 'permit final approved by supervisor' AND T1.timestamp > T2.timestamp
SELECT COUNT(DISTINCT T1.idcase) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'trip_start' AND T2.activity = 'permit_approved' AND T1.timestamp > T2.timestamp
SELECT COUNT(DISTINCT T1.idcase) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity LIKE 'Permit%' AND T2.activity LIKE 'Trip%' AND T1.timestamp < T2.timestamp AND T1.activity LIKE 'Supervisor Approval'
SELECT COUNT(DISTINCT T1.idcase) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Declaration' AND T2.activity = 'Supervisor approval' AND T1.timestamp < T2.timestamp AND T2.timestamp < ( SELECT MIN(timestamp) FROM event_log WHERE activity = 'Start trip' AND idcase = T1.idcase )
SELECT id FROM event_log WHERE activity = 'End trip' AND timestamp != '2017-12-12'
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp < '2017-12-12' OR timestamp > '2017-12-12'
SELECT id FROM event_log WHERE activity = 'End trip' AND timestamp < '2017-12-12' OR timestamp > '2017-12-12'
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp < '2017-12-12' OR timestamp > '2017-12-12'
SELECT id FROM event_log WHERE activity = 'End trip' AND timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59'
SELECT activity FROM event_log WHERE activity = 'End trip' AND timestamp != '2017-12-12'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'End trip' AND T1.timestamp < T2.timestamp AND T1.timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59'
SELECT resource, COUNT(id) FROM event_log GROUP BY resource
SELECT resource, COUNT(id) FROM event_log GROUP BY resource
SELECT COUNT(T1.resource), T1.resource FROM event_log AS T1 GROUP BY T1.resource
SELECT resource, COUNT(activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(id) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'processing declaration' GROUP BY resource
SELECT COUNT(id), idcase FROM event_log GROUP BY idcase
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(activity) FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, GROUP_CONCAT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT T1.activity FROM event_log AS T1 INNER JOIN (SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia') AS T2 ON T1.activity = T2.activity WHERE T1.resource != 'Virginia'
SELECT DISTINCT T1.activity FROM event_log AS T1 INNER JOIN resource AS T2 ON T1.resource = T2.id WHERE T2.location = 'Virginia' EXCEPT SELECT T1.activity FROM event_log AS T1 INNER JOIN resource AS T2 ON T1.resource = T2.id WHERE T2.location = 'Virginia' GROUP BY T1.activity
SELECT T1.activity FROM event_log AS T1 EXCEPT SELECT T2.activity FROM event_log AS T2 INNER JOIN case AS T3 ON T2.idcase = T3.id WHERE T3.state = 'Virginia'
SELECT DISTINCT activity FROM event_log EXCEPT SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia'
SELECT activity FROM event_log WHERE idcase = 'declaration 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaration 76667'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia' EXCEPT SELECT activity FROM event_log WHERE resource = 'Virginia' AND activity IN (SELECT activity FROM event_log WHERE resource != 'Virginia')
SELECT AVG(cost) FROM events_log WHERE activity = 'rejected'
SELECT AVG(T1.cost) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'rejected'
SELECT AVG(T2.total_cost) FROM event_log AS T1 INNER JOIN (SELECT SUM(cost) AS total_cost, idcase FROM event_log GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'rejected'
SELECT AVG(cost) FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%rejected%')
SELECT AVG(cost) FROM event_log WHERE activity = 'rejected'
SELECT AVG(cost) FROM event_log WHERE activity = 'Reject'
SELECT AVG(T1.cost) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity LIKE '%rejected%'
SELECT T1.idcase, SUM(T2.timestamp - T1.timestamp) AS duration FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = 'Declaration approved by supervisor' AND T2.activity = 'Declaration approved by supervisor' AND T1.timestamp < T2.timestamp GROUP BY T1.idcase
SELECT T1.idcase, SUM(T2.timestamp - T1.timestamp) AS duration FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = 'Declaration approved by supervisor' AND T2.activity = 'Declaration approved by supervisor' AND T1.timestamp < T2.timestamp GROUP BY T1.idcase
SELECT T1.idcase, MAX(T1.timestamp) - MIN(T1.timestamp) AS duration FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = 'Declaration approved by supervisor' AND T2.activity = 'Declaration approved by supervisor' GROUP BY T1.idcase
SELECT T1.idcase, T2.timestamp - T1.timestamp FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = 'Declaration approved by supervisor' AND T2.activity = 'Declaration approved by supervisor' WHERE T1.timestamp < T2.timestamp GROUP BY T1.idcase
SELECT T1.idcase, MAX(T1.timestamp) - MIN(T1.timestamp) AS duration FROM event_log AS T1 WHERE T1.activity = 'Declaration approved by supervisor' GROUP BY T1.idcase
SELECT AVG(cost) FROM event_log WHERE activity = 'Declaration approved by supervisor'
SELECT T2.timestamp - T1.timestamp FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = 'Declaration submitted' AND T2.activity = 'Declaration approved by supervisor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN (SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp WHERE T1.activity = 'Declaration rejected by pre-approver'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN (SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp WHERE T1.activity = 'Declaration rejected by pre-approver'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN (SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp WHERE T1.activity = 'Declaration rejected by pre-approver'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp WHERE T1.activity = 'Declaration rejected by pre-approver'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN case AS T2 ON T1.idcase = T2.id WHERE T1.activity = 'Declaration rejected by director' AND T2.stage = 'Pre-approval'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT T1.idcase, T1.timestamp FROM event_log AS T1 WHERE T1.activity = 'End trip' ORDER BY T1.resource
SELECT idcase, timestamp FROM event_log WHERE activity = 'End trip' ORDER BY resource
SELECT T1.idcase, T1.timestamp, T1.activity, T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'End trip' AND T1.timestamp > T2.timestamp ORDER BY T1.resource
SELECT T1.idcase, T1.timestamp, T1.resource FROM event_log AS T1 INNER JOIN ( SELECT idcase FROM event_log WHERE activity = 'End trip' ) AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'End trip' ORDER BY T1.resource
SELECT T2.idcase, T2.timestamp, T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'End trip' ORDER BY T1.resource
SELECT T1.idcase, T1.timestamp FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'End trip' AND T1.timestamp > T2.timestamp ORDER BY T2.resource
SELECT COUNT(id), idcase FROM event_log GROUP BY idcase
SELECT COUNT(id), idcase FROM event_log GROUP BY idcase
SELECT COUNT(id), idcase FROM event_log GROUP BY idcase
SELECT COUNT(id), idcase FROM event_log GROUP BY idcase
SELECT COUNT(id) FROM event_log GROUP BY idcase
SELECT COUNT(id), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-02-05' AND '2017-12-05'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-02-05' AND '2017-12-05'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-02-05' AND '2017-12-05'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT T1.idcase, T1.resource, T1.id, T1.timestamp FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'Send reminder' AND T1.timestamp < T2.timestamp ORDER BY T1.timestamp
SELECT T1.idcase, T1.resource, T1.id, T1.timestamp FROM event_log AS T1 WHERE T1.activity = 'Send reminder' ORDER BY T1.timestamp
SELECT T1.idcase, T1.resource, T1.id, T1.activity, T1.timestamp FROM event_log AS T1 INNER JOIN ( SELECT idcase FROM event_log WHERE activity = 'Send reminder' ) AS T2 ON T1.idcase = T2.idcase ORDER BY T1.timestamp
SELECT T2.idcase, T2.resource, T2.activity, T2.timestamp FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Send reminder' AND T2.timestamp < T1.timestamp ORDER BY T2.timestamp
SELECT T1.idcase, T1.id, T1.resource, T1.timestamp FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'Send reminder' AND T1.timestamp < T2.timestamp ORDER BY T1.timestamp
SELECT T2.idcase, T2.resource, T2.id, T2.timestamp FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Send reminder' AND T2.timestamp < T1.timestamp ORDER BY T2.timestamp
SELECT T1.idcase, T1.resource, T1.timestamp, T2.activity FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'Send reminder' AND T1.timestamp < T2.timestamp ORDER BY T1.timestamp
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY resource
SELECT resource FROM events_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource FROM events_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource FROM event_log WHERE activity = 'Travel Declaration' GROUP BY resource HAVING COUNT(id) > 200
SELECT T1.resource FROM event_log AS T1 INNER JOIN (SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource HAVING COUNT(*) > 200) AS T2 ON T1.resource = T2.resource GROUP BY T1.resource
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'declaration'
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'declaration'
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity LIKE 'Declaration Management%'
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'declaration'
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity LIKE 'Declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT activity, timestamp, id FROM event_log WHERE activity LIKE '%declaration%' ORDER BY timestamp
SELECT DISTINCT activity FROM event_log WHERE idcase = ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 10 ) AND activity LIKE '%declaration%'
SELECT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT activity, AVG(cost) FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT AVG(cost) FROM event_log
SELECT activity, AVG(cost) FROM event_log GROUP BY activity
SELECT AVG(cost) FROM event_log GROUP BY activity
SELECT activity, AVG(cost) FROM event_log GROUP BY activity
SELECT AVG(cost) FROM event_log GROUP BY activity
SELECT activity, AVG(cost) FROM event_log GROUP BY activity
SELECT T1.activity, AVG(T1.cost) FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity LIKE '%travel declaration%' GROUP BY T1.activity
SELECT COUNT(idcase) FROM event_log WHERE cost = 0
SELECT COUNT(idcase) FROM event_log WHERE cost = 0
SELECT COUNT(idcase) FROM event_log WHERE cost = 0
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost = 0
SELECT COUNT(idcase) FROM event_log WHERE cost = 0
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost = 0 GROUP BY idcase HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log WHERE idcase = idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost = 0
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost = 0
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE 'Permit%' OR activity LIKE 'Declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT * FROM event_log WHERE activity LIKE '%Permit%' OR activity LIKE '%Declare%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity LIKE 'Permit%' AND T2.activity LIKE 'Declaration%'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by director'
SELECT COUNT(T1.id) , T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'Declaration rejected by director' GROUP BY T1.resource
SELECT COUNT(T1.id) , T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.id = T2.id WHERE T2.activity = 'Declaration rejected by director' GROUP BY T1.resource
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by director'
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost), activity FROM event_log GROUP BY activity
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log WHERE timestamp < '2018-01-01' AND activity = 'Payment handled'
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT COUNT(id) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(id) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(id) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(activity) FROM event_log WHERE resource = 'Peter'
SELECT resource FROM event_log WHERE activity = 'declaration' GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT resource FROM (SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource) WHERE count > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT idcase, COUNT(*) FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY COUNT(*)
SELECT idcase, COUNT(*) FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY COUNT(*) ASC
SELECT T1.idcase, COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity LIKE '%request payment%' GROUP BY T1.idcase ORDER BY COUNT(T1.id)
SELECT idcase FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY COUNT(idcase)
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(*) AS cnt FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Request payment' ORDER BY T2.cnt ASC
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(*) AS cnt FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Request payment' ORDER BY T2.cnt ASC
SELECT T1.idcase, COUNT(T1.id) AS activity_count FROM event_log AS T1 INNER JOIN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase ORDER BY activity_count
SELECT T1.idcase FROM event_log AS T1 INNER JOIN (SELECT idcase, COUNT(*) AS count FROM event_log GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Request payment' ORDER BY T2.count ASC
SELECT timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp
SELECT timestamp FROM events_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp
SELECT timestamp FROM events_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp
SELECT DISTINCT timestamp FROM event_log WHERE activity IN ('End trip', 'Declaration rejected by employee') ORDER BY timestamp
SELECT T2.timestamp FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity IN ('end trip', 'closed') ORDER BY T2.timestamp
SELECT DISTINCT strftime('%Y-%m-%d', timestamp) FROM event_log WHERE activity IN ('End trip', 'Declaration rejected by employee') ORDER BY timestamp ASC
SELECT DISTINCT T1.timestamp FROM event_log AS T1 WHERE T1.activity = 'End trip' OR T1.activity = 'Declaration rejected' ORDER BY T1.timestamp
SELECT timestamp FROM event_log WHERE activity IN ('End trip', 'Reject declaration') ORDER BY timestamp
SELECT resource, COUNT(activity) FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(activity) FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(activity) FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(activity) FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(activity) FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(activity) FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(id) FROM event_log WHERE activity = 'Declaration processed by employee' GROUP BY resource ORDER BY resource
SELECT T1.activity, COUNT(T1.id) FROM event_log AS T1 INNER JOIN case_log AS T2 ON T1.idcase = T2.id WHERE T2.type = 'declaration' GROUP BY T1.activity ORDER BY T1.activity
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT id FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE 'E%declaration%'
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost DESC
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration saved by employee'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration saved by employee'
SELECT T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'saved' AND T1.resource != T2.resource GROUP BY T1.idcase HAVING COUNT(T1.resource) = 1
SELECT resource FROM event_log WHERE activity = 'save' GROUP BY resource
SELECT activity FROM event_log WHERE timestamp = '2018-04-12'
SELECT activity FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-04-12'
SELECT activity FROM event_log WHERE timestamp = '2018-04-12'
SELECT activity FROM event_log WHERE timestamp LIKE '2018-04-12%'
SELECT DISTINCT activity FROM event_log WHERE timestamp = '2018-04-12'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-04-12 00:00:00' AND '2018-04-12 23:59:59'
SELECT DISTINCT activity FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-04-12'
SELECT DISTINCT activity FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-04-12'
SELECT T1.activity FROM event_log AS T1 INNER JOIN cases AS T2 ON T1.idcase = T2.id WHERE T1.timestamp = '2018-04-12' AND T2.type = 'declaration'
SELECT id, activity, timestamp FROM event_log WHERE activity LIKE '%permit final approved by supervisor%' OR activity LIKE '%declaration approved by supervisor%' ORDER BY timestamp
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY timestamp
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved by the supervisor', 'Declaration approved by the supervisor') ORDER BY timestamp
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY timestamp
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY timestamp
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('permit final approved by supervisor', 'declaration approved by supervisor') ORDER BY timestamp DESC
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved', 'Declaration final approved by supervisor') ORDER BY timestamp
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved', 'Declaration final approved by supervisor') ORDER BY timestamp DESC
SELECT * FROM event_log WHERE cost != 0
SELECT * FROM event_log WHERE cost != 0
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT activity, cost FROM event_log WHERE cost > 0
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'permit final approved by director' AND T1.timestamp < T2.timestamp AND T2.activity = 'Declaration final approved by director'
SELECT COUNT(id) FROM event_log WHERE activity = 'Permit final approved by director'
SELECT COUNT(id) FROM event_log WHERE activity = 'Permit final approved by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'permit final approved by director'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'permit final approved by director'
SELECT COUNT(id) FROM event_log WHERE activity = 'Permit final approved by director'
SELECT COUNT(id) FROM event_log WHERE activity = 'Permit final approved by director'
SELECT COUNT(id) FROM event_log WHERE activity = 'Permit final approved by director'
SELECT COUNT(id) FROM event_log WHERE activity = 'Permit final approved by a director'
SELECT COUNT(id) FROM event_log WHERE activity LIKE 'Permit%'
SELECT COUNT(id) FROM event_log WHERE activity = 'Final permit approved by director'
SELECT timestamp FROM event_log WHERE activity = 'start trip' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'start trip' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s'
SELECT timestamp FROM events_log WHERE activity = 'Start trip' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s'
SELECT timestamp FROM events_log WHERE activity = 'Start trip' AND resource LIKE '%s'
SELECT timestamp FROM events_log WHERE activity = 'Start trip' AND resource LIKE '%s'
SELECT DISTINCT strftime('%Y-%m-%d', timestamp) FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s'
SELECT DISTINCT DATE(timestamp) FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s'
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource
SELECT SUM(cost) FROM event_log WHERE activity = ? AND resource = ?
SELECT SUM(cost), activity, resource FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource
SELECT SUM(cost), activity, resource FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) FROM event_log WHERE idcase = 'declaration' GROUP BY activity, resource
SELECT COUNT(CASE WHEN activity = 'start trip' THEN 1 END), COUNT(CASE WHEN activity = 'end trip' THEN 1 END) FROM event_log
SELECT SUM(CASE WHEN activity = 'Start trip' THEN 1 ELSE 0 END) AS 'Start trip', SUM(CASE WHEN activity = 'End trip' THEN 1 ELSE 0 END) AS 'End trip' FROM event_log
SELECT COUNT(CASE WHEN T1.activity = 'Start trip' OR T1.activity = 'Trip end' THEN 1 END) AS count FROM event_log AS T1
SELECT COUNT(CASE WHEN activity = 'Start trip' THEN 1 END) AS "Start Trip Count", COUNT(CASE WHEN activity = 'End trip' THEN 1 END) AS "End Trip Count" FROM event_log
SELECT COUNT(CASE WHEN activity = 'Start trip' THEN 1 END) AS "Start trip count", COUNT(CASE WHEN activity = 'End trip' THEN 1 END) AS "End trip count" FROM event_log
SELECT activity, COUNT(*) FROM event_log WHERE activity IN ('start trip', 'end trip') GROUP BY activity
SELECT COUNT(CASE WHEN activity = 'Start trip' THEN 1 END) AS 'Start trip', COUNT(CASE WHEN activity = 'End trip' THEN 1 END) AS 'End trip' FROM event_log
SELECT SUM(CASE WHEN activity = 'start trip' THEN 1 ELSE 0 END) AS 'start trip', SUM(CASE WHEN activity = 'end trip' THEN 1 ELSE 0 END) AS 'end trip' FROM event_log
SELECT COUNT(DISTINCT T1.idcase) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Begin trip' AND T2.activity = 'End trip' AND T1.timestamp < T2.timestamp
SELECT COUNT(DISTINCT T1.idcase) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Begin trip' AND T2.activity = 'End trip'
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 3
SELECT activity FROM event_log WHERE idcase LIKE 'declaration%' GROUP BY activity HAVING COUNT(activity) > 3
SELECT activity FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3) GROUP BY activity
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1
SELECT T1.activity, T1.timestamp, T1.resource FROM event_log AS T1 INNER JOIN ( SELECT activity, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY activity ) AS T2 ON T1.activity = T2.activity AND T1.timestamp = T2.max_timestamp
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1
SELECT T2.resource, T2.activity FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = T1.idcase )
SELECT resource, activity FROM event_log ORDER BY timestamp DESC LIMIT 1
SELECT T1.activity, T1.resource FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp > T2.timestamp WHERE T2.activity = 'End trip'
SELECT T1.idcase, T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'End trip' AND T1.timestamp > T2.timestamp
SELECT T1.idcase, T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'End trip' AND T1.timestamp > T2.timestamp
SELECT T1.activity, T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp > T2.timestamp WHERE T2.activity = 'End trip'
SELECT T1.id, T1.activity, T1.resource, T1.timestamp FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp > T2.timestamp WHERE T2.activity = 'End trip'
SELECT T1.idcase, T1.activity, T1.resource, T1.timestamp FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp > T2.timestamp WHERE T2.activity = 'End trip'
SELECT T1.idcase, T1.timestamp, T1.resource, T2.activity, T2.resource FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'End trip' AND T2.timestamp > T1.timestamp ORDER BY T1.resource
SELECT T1.idcase, T1.timestamp, T1.resource, T2.activity, T2.timestamp, T2.resource FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'End trip' AND T2.timestamp > T1.timestamp ORDER BY T1.resource, T1.timestamp
SELECT T1.activity, T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp > T2.timestamp WHERE T2.activity = 'End trip'
SELECT T2.id, T2.activity, T2.timestamp, T2.resource FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'End trip' AND T2.timestamp > T1.timestamp
SELECT T1.idcase, T1.activity, T1.timestamp, T1.resource, T1.cost, T2.person_responsible FROM events_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'End trip' AND T2.timestamp > T1.timestamp ORDER BY T1.idcase, T2.timestamp
SELECT T1.idcase, T1.activity, T1.resource, T1.timestamp FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp > T2.timestamp WHERE T2.activity = 'End trip' ORDER BY T1.resource
SELECT T1.idcase, T1.activity, T1.timestamp, T1.resource, T1.cost, T2.person_responsible FROM events_log AS T1 INNER JOIN event_person AS T2 ON T1.id = T2.id_event WHERE T1.activity = 'End trip' ORDER BY T1.resource
SELECT T1.idcase, T1.timestamp, T1.activity, T1.resource FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'End trip' AND T1.timestamp > T2.timestamp ORDER BY T1.resource
SELECT T1.idcase, T1.timestamp, T1.activity, T1.resource, T1.cost FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'End trip' AND T1.timestamp > T2.timestamp
SELECT T1.activity, T1.timestamp, T1.resource, T1.cost, T1.idcase, T2.person FROM event_log AS T1 INNER JOIN users AS T2 ON T1.id = T2.id WHERE T1.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'trip_registration' AND idcase = T1.idcase )
SELECT T1.idcase, T1.activity, T1.timestamp, T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'End trip' AND T1.timestamp > T2.timestamp ORDER BY T1.resource
SELECT resource, COUNT(*) FROM event_log WHERE activity != 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity != 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity != 'End trip' GROUP BY resource
SELECT resource, COUNT(id) FROM event_log WHERE activity != 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity != 'End trip' GROUP BY resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity != 'End trip' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity != 'End trip' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity != 'End trip' GROUP BY T1.resource
SELECT resource, COUNT(id) FROM event_log WHERE activity != 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity != 'End trip' GROUP BY resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity != 'End trip' GROUP BY T1.resource
SELECT COUNT(CASE WHEN activity <> 'End trip' THEN 1 END), resource FROM event_log GROUP BY resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity != 'End trip' GROUP BY T1.resource
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'End trip' AND T1.timestamp < T2.timestamp AND T1.activity != 'End trip' GROUP BY T1.resource
SELECT resource, COUNT(*) FROM event_log WHERE activity != 'End trip' GROUP BY resource
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.resource = T2.resource WHERE T1.activity <> 'End trip' AND T2.activity = 'End trip'
SELECT resource, COUNT(*) FROM event_log WHERE activity != 'End trip' GROUP BY resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity != 'End trip' GROUP BY T1.resource
SELECT COUNT(CASE WHEN T1.activity <> 'End trip' THEN T1.id ELSE NULL END) AS events_amount, T1.resource FROM event_log AS T1 GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 EXCEPT SELECT COUNT(T2.id), T2.resource FROM event_log AS T2 WHERE T2.activity = 'End trip' GROUP BY T2.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 EXCEPT SELECT COUNT(T2.id), T2.resource FROM event_log AS T2 WHERE T2.activity = 'End trip' GROUP BY T2.resource
SELECT resource, COUNT(id) FROM event_log WHERE activity != 'End trip' GROUP BY resource
SELECT COUNT(CASE WHEN T1.activity <> 'End trip' THEN T1.id ELSE NULL END) AS events_amount, T1.resource FROM event_log AS T1 GROUP BY T1.resource
SELECT COUNT(id) FROM event_log WHERE activity != 'End trip' GROUP BY resource
SELECT COUNT(CASE WHEN T1.activity <> 'End trip' THEN T1.id ELSE NULL END) AS events_amount, T1.resource FROM event_log AS T1 GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity != 'End trip' GROUP BY T1.resource
SELECT COUNT(CASE WHEN T1.activity <> 'End trip' THEN T1.id ELSE NULL END) AS events_amount, T1.resource FROM event_log AS T1 GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 EXCEPT SELECT COUNT(T2.id), T2.resource FROM event_log AS T2 WHERE T2.activity = 'End trip' GROUP BY T2.resource
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Processing%' AND activity NOT LIKE 'End of trip%'
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 WHERE T1.activity = 'Start trip' GROUP BY T1.resource
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp ORDER BY T2.min_timestamp DESC
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp ORDER BY T2.min_timestamp DESC
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp ORDER BY T2.min_timestamp DESC
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp ORDER BY T2.min_timestamp DESC
SELECT T1.idcase, MIN(T1.timestamp) FROM events_log AS T1 GROUP BY T1.idcase ORDER BY MIN(T1.timestamp)
SELECT idcase, timestamp FROM events_log WHERE activity = 'End trip' ORDER BY resource
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM events_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM events_log WHERE activity = 'Request payment'
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log WHERE activity = 'declaration final approved by director' GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.max_timestamp
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, MAX(timestamp) AS timestamp FROM event_log WHERE activity = 'Declaration final approved by director' GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.timestamp WHERE T1.activity = 'Declaration final approved by director' ORDER BY T1.timestamp DESC LIMIT 1
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, MAX(timestamp) AS timestamp FROM event_log WHERE activity = 'Declaration final approved by director' GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.timestamp ORDER BY T1.timestamp DESC LIMIT 1
SELECT resource FROM events_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 1
SELECT resource FROM events_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 1
SELECT resource FROM events_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 1
SELECT resource FROM events_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 1
SELECT resource FROM events_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 1
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1
SELECT resource FROM event_log WHERE activity = 'approve' AND resource LIKE '%admin%' GROUP BY resource ORDER BY COUNT(id) DESC LIMIT 1
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE activity = (SELECT activity FROM event_log ORDER BY timestamp LIMIT 1) GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE id IN (SELECT MIN(id) FROM event_log GROUP BY idcase) GROUP BY resource
SELECT T1.resource, COUNT(T1.id) FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp GROUP BY T1.resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE id = 1 GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE id = ( SELECT MIN(id) FROM event_log WHERE idcase = event_log.idcase ) GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'first action' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'INIT' GROUP BY resource
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase), DATE(timestamp) FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT COUNT(DISTINCT idcase), DATE(timestamp) FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp)
SELECT COUNT(DISTINCT idcase), DATE(timestamp) FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp)
SELECT COUNT(DISTINCT idcase), DATE(timestamp) FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp)
SELECT DATE(timestamp), COUNT(CASE WHEN activity LIKE '%rejected%' THEN 1 END) AS rejected_declarations FROM event_log GROUP BY DATE(timestamp)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration rejected by director' GROUP BY DATE(timestamp)
SELECT SUM(CASE WHEN T1.idcase = T2.idcase THEN 1 ELSE 0 END), T2.idcase, MAX(T1.timestamp) - MIN(T1.timestamp) FROM event_log AS T1 INNER JOIN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5) AS T2 ON T1.idcase = T2.idcase GROUP BY T2.idcase
SELECT SUM(strftime('%s', T2.timestamp) - strftime('%s', T1.timestamp)), T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.id < T2.id GROUP BY T1.idcase ORDER BY SUM(strftime('%s', T2.timestamp) - strftime('%s', T1.timestamp)) DESC LIMIT 5
SELECT T2.idcase, MAX(T1.timestamp) - MIN(T1.timestamp) AS duration FROM event_log AS T1 INNER JOIN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T2.idcase
SELECT T2.idcase, SUM(T1.cost), MAX(T1.timestamp) - MIN(T1.timestamp) FROM event_log AS T1 INNER JOIN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T2.idcase
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase ORDER BY COUNT(id) DESC LIMIT 5
SELECT T1.idcase, MAX(T1.timestamp) - MIN(T1.timestamp) AS duration FROM event_log AS T1 GROUP BY T1.idcase ORDER BY COUNT(T1.id) DESC LIMIT 5
SELECT T2.idcase, SUM(T1.cost), MAX(T1.timestamp) - MIN(T1.timestamp) FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 5 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T2.idcase
SELECT T1.idcase, COUNT(T1.id) AS action_count, MAX(T1.timestamp) - MIN(T1.timestamp) AS processing_time FROM event_log AS T1 GROUP BY T1.idcase ORDER BY action_count DESC LIMIT 5
SELECT T1.idcase, COUNT(T1.id) AS num_actions, SUM(T1.timestamp - T2.timestamp) AS processing_time FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp > T2.timestamp GROUP BY T1.idcase ORDER BY num_actions DESC LIMIT 5
SELECT T2.idcase, SUM(T1.cost), MAX(T1.timestamp) - MIN(T1.timestamp) FROM event_log AS T1 INNER JOIN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T2.idcase
SELECT SUM(strftime('%s', T2.timestamp) - strftime('%s', T1.timestamp)), T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp < T2.timestamp GROUP BY T1.idcase HAVING COUNT(T1.id) >= 20 ORDER BY SUM(strftime('%s', T2.timestamp) - strftime('%s', T1.timestamp)) DESC LIMIT 5
SELECT T1.idcase, MAX(T1.timestamp) - MIN(T1.timestamp) AS duration FROM event_log AS T1 GROUP BY T1.idcase HAVING COUNT(T1.activity) >= 20 ORDER BY COUNT(T1.activity) DESC LIMIT 5
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM events_log WHERE idcase IN (SELECT idcase FROM events_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5) GROUP BY idcase
SELECT SUM(strftime('%s', T2.timestamp) - strftime('%s', T1.timestamp)), T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp < T2.timestamp GROUP BY T1.idcase HAVING COUNT(T1.idcase) >= 20 ORDER BY COUNT(T1.idcase) DESC LIMIT 5
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM events_log WHERE idcase IN (SELECT idcase FROM events_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5) GROUP BY idcase
SELECT T2.idcase, SUM(T1.cost) AS total_cost, MAX(T1.timestamp) - MIN(T1.timestamp) AS duration FROM event_log AS T1 INNER JOIN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T2.idcase ORDER BY duration DESC LIMIT 5;
SELECT SUM(strftime('%s', T2.timestamp) - strftime('%s', T1.timestamp)), T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.id < T2.id WHERE T1.idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20) GROUP BY T1.idcase ORDER BY SUM(strftime('%s', T2.timestamp) - strftime('%s', T1.timestamp)) DESC LIMIT 5
SELECT T1.idcase FROM event_log AS T1 INNER JOIN (SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.max_timestamp WHERE T1.activity != 'Request payment' ORDER BY T1.timestamp DESC LIMIT 10
SELECT T1.idcase FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'End trip' AND T2.activity = 'Request Payment' GROUP BY T1.idcase HAVING COUNT(T2.activity) = 0 ORDER BY T1.timestamp DESC LIMIT 10
SELECT T1.idcase FROM event_log AS T1 INNER JOIN (SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.max_timestamp WHERE T1.activity != 'Request payment' ORDER BY T2.max_timestamp DESC LIMIT 10
SELECT T1.idcase FROM event_log AS T1 INNER JOIN (SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.max_timestamp WHERE T1.activity != 'Request payment' ORDER BY T2.max_timestamp DESC LIMIT 10
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.latest_timestamp WHERE T1.activity != 'Request payment' ORDER BY T1.timestamp DESC LIMIT 10
SELECT idcase FROM event_log WHERE activity != 'Request payment' ORDER BY timestamp DESC LIMIT 10
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase HAVING COUNT(T1.idcase) = 0 ORDER BY T1.timestamp DESC LIMIT 10
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.max_timestamp WHERE T1.activity != 'Request payment' ORDER BY T2.max_timestamp DESC LIMIT 10
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.max_timestamp WHERE T1.activity != 'Request payment' ORDER BY T1.timestamp DESC LIMIT 10
SELECT T1.idcase FROM event_log AS T1 INNER JOIN (SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.max_timestamp WHERE T1.activity != 'Request payment' ORDER BY T2.max_timestamp DESC LIMIT 10
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.max_timestamp WHERE T1.activity != 'Request payment' ORDER BY T1.timestamp DESC LIMIT 10
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Processing declaration' GROUP BY T1.idcase ORDER BY MAX(T1.timestamp) DESC LIMIT 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM events_log GROUP BY idcase HAVING COUNT(*) >= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND strftime('%Y', timestamp) < '2018'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND strftime('%Y', timestamp) < '2018'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND strftime('%Y', timestamp) < '2018'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND strftime('%Y', timestamp) < '2018'
SELECT AVG(cost) FROM event_log WHERE activity = 'Payment handled' AND strftime('%Y', timestamp) < '2018'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND strftime('%Y', timestamp) < '2018'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND strftime('%Y', timestamp) < '2018'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND strftime('%Y', timestamp) < '2018'
SELECT AVG(cost) FROM event_log WHERE activity LIKE 'Payment%' AND strftime('%Y', timestamp) < '2018'
SELECT idcase, COUNT(activity) FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT COUNT(T1.idcase) FROM event_log AS T1 INNER JOIN (SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp WHERE T1.activity LIKE 'Permit%'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN (SELECT DISTINCT idcase FROM event_log WHERE activity LIKE 'Permit%') AS T2 ON T1.idcase = T2.idcase
SELECT idcase, COUNT(activity) FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT idcase, COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT idcase, COUNT(activity) FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT idcase, COUNT(activity) FROM event_log WHERE activity LIKE '%Permit%' GROUP BY idcase
SELECT idcase, COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Permit registered'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%'
SELECT COUNT(DISTINCT T1.idcase), T1.resource FROM event_log AS T1 INNER JOIN (SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ORDER BY timestamp) AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Declaration rejected by supervisor' GROUP BY T1.resource
SELECT COUNT(DISTINCT idcase), GROUP_CONCAT(resource) FROM event_log WHERE activity = 'Declaration rejected by supervisor'
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Declaration rejected by supervisor' AND T2.activity = 'Declaration submitted' GROUP BY T1.resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Declaration rejected by supervisor' GROUP BY T1.resource
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log GROUP BY activity
SELECT activity, COUNT(*) FROM event_log GROUP BY activity
SELECT activity, COUNT(id) FROM event_log GROUP BY activity
SELECT T1.id FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity LIKE 'R%' AND T2.activity LIKE 'D%' AND T1.timestamp > T2.timestamp GROUP BY T1.idcase ORDER BY T1.timestamp DESC
SELECT T1.id FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity LIKE 'R%' AND T2.activity LIKE 'D%' AND T1.timestamp > T2.timestamp GROUP BY T1.idcase ORDER BY T1.timestamp
SELECT T1.id FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity LIKE 'R%' AND T2.activity LIKE 'D%' AND T1.timestamp > T2.timestamp GROUP BY T1.idcase ORDER BY T1.timestamp DESC
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%')
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%')
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%')
SELECT T1.activity FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp > T2.timestamp WHERE T1.activity LIKE 'R%' AND T2.activity LIKE 'D%'
SELECT T1.activity FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity LIKE 'R%' AND T2.activity LIKE 'D%' AND T1.timestamp > T2.timestamp
SELECT activity, resource, COUNT(*) FROM event_log GROUP BY activity, resource
SELECT activity, resource, COUNT(*) FROM event_log GROUP BY activity, resource
SELECT resource, activity, COUNT(*) FROM event_log GROUP BY resource, activity
SELECT resource, activity, COUNT(*) FROM event_log GROUP BY resource, activity
SELECT activity, COUNT(resource) FROM event_log GROUP BY activity
SELECT T1.resource, COUNT(T1.id) FROM event_log AS T1 INNER JOIN idcase AS T2 ON T1.idcase = T2.id WHERE T1.activity = 'declaration processing' GROUP BY T1.resource
SELECT activity, COUNT(id) FROM event_log GROUP BY activity
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT activity, COUNT(activity) FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30' GROUP BY activity HAVING COUNT(activity) > 1
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-31'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE strftime('%Y', timestamp) = '2018' AND strftime('%m', timestamp) BETWEEN '01' AND '06' GROUP BY activity
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT T2.idcase FROM event_log AS T1 INNER JOIN cases AS T2 ON T1.idcase = T2.id WHERE T1.resource = 'Wayne' ORDER BY T2.idcase
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-12' GROUP BY activity
SELECT COUNT(DISTINCT T1.idcase), T1.activity FROM event_log AS T1 INNER JOIN (SELECT idcase FROM event_log WHERE timestamp LIKE '2018-03-12%' GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2018-03-02 00:00:00' AND '2018-03-02 23:59:59' GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp = '2018-03-02') GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-02' GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-02' GROUP BY activity
SELECT activity, COUNT(id) FROM event_log WHERE timestamp < '2018-03-02' GROUP BY activity
SELECT activity, COUNT(activity) FROM event_log WHERE timestamp BETWEEN '2018-03-02 00:00:00' AND '2018-03-02 23:59:59' GROUP BY activity
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%'
SELECT COUNT(DISTINCT T1.idcase) FROM event_log AS T1 INNER JOIN (SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp WHERE T1.activity LIKE 'Permit%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%' AND id IN (SELECT MIN(id) FROM event_log GROUP BY idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%permit%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'permit' AND timestamp = (SELECT MIN(timestamp) FROM event_log WHERE idcase = event_log.idcase)
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('request payment', 'payment handled')
SELECT idcase FROM events_log WHERE activity = 'Start trip' OR activity = 'End trip' EXCEPT SELECT idcase FROM events_log WHERE activity = 'Request payment' OR activity = 'Payment handled'
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT COUNT(DISTINCT idcase) FROM events_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM events_log WHERE activity IN ('Payment handled', 'Payment request'))
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Request payment' AND T2.activity = 'Payment made'
SELECT T1.timestamp, T1.activity, T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Start trip' AND T2.activity = 'Declaration submitted by employee' ORDER BY T1.timestamp, T1.resource
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource
SELECT * FROM events_log WHERE activity IN ('Start trip', 'Declaration submitted by employee') ORDER BY timestamp ASC, resource ASC
SELECT * FROM event_log WHERE activity = 'start trip' OR activity = 'declaration submitted by employee' ORDER BY timestamp, resource
SELECT timestamp, resource FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource
SELECT timestamp, resource FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp ASC, resource ASC
SELECT timestamp, resource FROM event_log WHERE activity = 'start trip' OR activity = 'declaration submitted by employee' ORDER BY timestamp, resource
SELECT timestamp, resource FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource
SELECT * FROM events_log WHERE activity IN ('Start trip', 'Declaration submitted by employee') ORDER BY timestamp, resource
SELECT T1.timestamp, T1.activity, T1.resource, T1.idcase, T2.resource AS employee FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'Request declaration' ORDER BY T1.timestamp, T1.resource
SELECT T1.id, T1.activity, T1.timestamp, T1.resource FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'Start trip' AND T1.timestamp > T2.timestamp ORDER BY T1.timestamp, T1.resource
SELECT resource, COUNT(activity) FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource
SELECT COUNT(resource), resource FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource
SELECT resource, COUNT(activity) FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource
SELECT resource, COUNT(activity) FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource
SELECT resource, COUNT(activity) FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource
SELECT resource, COUNT(activity) AS performance_count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource
SELECT COUNT(T1.resource), T1.resource FROM event_log AS T1 INNER JOIN (SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp WHERE T1.activity = 'save' GROUP BY T1.resource ORDER BY T1.resource
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'save' GROUP BY resource ORDER BY resource
SELECT activity, COUNT(DISTINCT idcase) FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log GROUP BY activity
SELECT activity, COUNT(idcase) FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-12' GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log GROUP BY activity
SELECT activity, COUNT(idcase) FROM event_log GROUP BY activity
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(CASE WHEN activity IN ('end trip', 'payment handled') THEN 1 ELSE NULL END) AS occurrences FROM event_log GROUP BY resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 INNER JOIN (SELECT id FROM event_log WHERE activity = 'end trip' OR activity = 'payment handled') AS T2 ON T1.id = T2.id GROUP BY T1.resource
SELECT resource, COUNT(CASE WHEN activity IN ('End trip', 'Payment handled') THEN 1 ELSE NULL END) AS occurrences FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT id) FROM event_log WHERE activity IN ('end trip', 'payment handled') GROUP BY resource
SELECT COUNT(T1.resource), T1.resource FROM event_log AS T1 INNER JOIN ( SELECT DISTINCT resource FROM event_log WHERE activity IN ('end trip', 'payment handled') ) AS T2 ON T1.resource = T2.resource GROUP BY T1.resource
SELECT COUNT(CASE WHEN activity IN ('end trip', 'payment handled') THEN 1 END), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(CASE WHEN activity = 'end of trip' OR activity = 'payment' THEN 1 ELSE NULL END) AS count FROM event_log GROUP BY resource
SELECT COUNT(T1.id), T1.resource FROM event_log AS T1 INNER JOIN (SELECT id FROM event_log WHERE activity IN ('End trip', 'Payment')) AS T2 ON T1.id = T2.id GROUP BY T1.resource
SELECT COUNT(DISTINCT T1.resource) FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp WHERE T1.activity = 'Declaration rejected by pre-approver'
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT COUNT(T1.resource), T1.resource FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log WHERE activity = 'declaration rejected by pre-approver' GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp AND T1.activity = 'declaration rejected by pre-approver' GROUP BY T1.resource
SELECT COUNT(T1.resource), T1.resource FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log WHERE activity = 'declaration rejected by pre-approver' GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.min_timestamp AND T1.activity = 'declaration rejected by pre-approver' GROUP BY T1.resource
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'REJECT' AND resource IN (SELECT resource FROM event_log WHERE activity = 'PRE-APPROVE') GROUP BY resource
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log WHERE activity = 'End trip' GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp <= T2.min_timestamp
SELECT T1.idcase, COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp < T2.timestamp WHERE T2.activity = 'End trip' GROUP BY T1.idcase
SELECT idcase, COUNT(CASE WHEN activity <> 'End trip' THEN 1 END) AS instances_before_end_trip FROM event_log GROUP BY idcase HAVING SUM(CASE WHEN activity = 'End trip' THEN 1 ELSE 0 END) > 0;
SELECT COUNT(CASE WHEN activity <> 'End trip' THEN 1 ELSE NULL END) FROM event_log GROUP BY idcase
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp < T2.timestamp WHERE T2.activity = 'End trip'
SELECT COUNT(T1.id) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp < T2.timestamp WHERE T2.activity = 'End trip'
SELECT COUNT(id) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity = 'End trip')
SELECT COUNT(T1.id), T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log WHERE activity = 'End trip' GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp <= T2.min_timestamp GROUP BY T1.idcase
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip'
SELECT COUNT(DISTINCT T1.idcase), T1.activity FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp <= T2.timestamp WHERE T2.activity = 'End of trip' GROUP BY T1.activity
SELECT COUNT(T1.id), T1.idcase FROM event_log AS T1 INNER JOIN (SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY idcase) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp <= T2.max_timestamp GROUP BY T1.idcase
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT T1.activity FROM event_log AS T1 INNER JOIN case_log AS T2 ON T1.idcase = T2.id WHERE T2.name = 'Thomas' AND T1.timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Declaration rejected by supervisor' ORDER BY T2.timestamp
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC
SELECT T2.timestamp FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Declaration rejected by supervisor' ORDER BY T2.timestamp
SELECT idcase FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC
SELECT idcase FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'supervisor_rejection' AND T2.activity = 'start' ORDER BY T2.timestamp
SELECT T1.idcase, T1.timestamp FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Declaration submitted' AND T2.activity = 'Declaration rejected by supervisor' ORDER BY T1.timestamp
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Start trip' AND T2.activity = 'End trip' AND T2.timestamp > '2018-03-01'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-03-01'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-03-01'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2018-03-31' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-03-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2018-03-31' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-03-31')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2018-03-31' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-03-31')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2018-03-31' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-03-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-03-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'start trip' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'end trip' AND timestamp < '2018-03-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2018-03-31' AND idcase NOT IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Finalize declaration' AND timestamp < '2018-03-31')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2018-03-31' AND idcase IN (SELECT idcase FROM event_log WHERE activity = 'Declaration' AND timestamp < '2018-03-31')
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'End trip' AND T2.activity IN ('Request payment', 'Payment handled') GROUP BY T1.idcase HAVING COUNT(DISTINCT T1.resource) > 1
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'End trip' AND T2.activity <> 'Request payment' AND T2.activity <> 'Payment handled' AND T1.resource <> T2.resource GROUP BY T1.idcase HAVING COUNT(DISTINCT T1.resource) > 1
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'End trip' AND T2.activity IN ('Request payment', 'Payment handled') GROUP BY T1.idcase HAVING COUNT(DISTINCT T1.resource) > 1
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'End trip' AND T1.resource != T2.resource AND T1.id != T2.id EXCEPT SELECT idcase FROM event_log WHERE activity = 'Request payment' EXCEPT SELECT idcase FROM event_log WHERE activity = 'Payment handled'
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.resource != T2.resource WHERE T1.activity = 'End trip' AND T1.idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') AND T1.idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Payment handled') GROUP BY T1.idcase
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.resource != T2.resource AND T1.activity = 'End trip' EXCEPT SELECT idcase FROM event_log WHERE activity = 'Request payment' UNION SELECT idcase FROM event_log WHERE activity = 'Payment handled'
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.resource != T2.resource AND T1.activity = 'End trip' AND T1.idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled')
SELECT T1.idcase FROM events_log AS T1 INNER JOIN (SELECT idcase FROM events_log WHERE activity = 'Finalized') AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Payment handled'
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'End trip' AND T2.activity = 'Start trip' EXCEPT SELECT idcase FROM event_log WHERE activity = 'Request payment'
SELECT idcase, COUNT(DISTINCT resource), SUM(cost) FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource), SUM(cost) FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource), SUM(cost) FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource), SUM(cost) FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource), SUM(cost) FROM event_log GROUP BY idcase
SELECT T1.idcase, SUM(T1.cost) AS total_cost, COUNT(DISTINCT T1.resource) AS resources_involved FROM event_log AS T1 GROUP BY T1.idcase
SELECT idcase, SUM(cost), COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT T1.idcase, SUM(T1.cost), COUNT(DISTINCT T1.resource) FROM events_log AS T1 GROUP BY T1.idcase
SELECT SUM(cost), COUNT(DISTINCT resource) FROM events_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource), SUM(cost) FROM event_log GROUP BY idcase
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.id <> T2.id WHERE T1.activity LIKE 'Permit%' AND T2.activity LIKE 'Permit%' GROUP BY T1.idcase
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(idcase) >= 2
SELECT T1.idcase FROM event_log AS T1 INNER JOIN (SELECT idcase, activity FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase, activity HAVING COUNT(activity) > 1) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, activity FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase, activity HAVING COUNT(activity) > 1 ) AS T2 ON T1.idcase = T2.idcase GROUP BY T1.idcase
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, COUNT(*) AS cnt FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1 ) AS T2 ON T1.idcase = T2.idcase
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(idcase) > 1
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(idcase) > 1
SELECT DISTINCT T2.idcase FROM events_log AS T1 INNER JOIN events_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity LIKE '%permit%' AND T2.activity LIKE '%declaration%'
SELECT idcase FROM events_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT id FROM event_log GROUP BY idcase ORDER BY timestamp DESC
SELECT MAX(id) FROM event_log GROUP BY idcase ORDER BY timestamp
SELECT id FROM event_log WHERE timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase ) ORDER BY timestamp
SELECT T1.idcase FROM event_log AS T1 INNER JOIN ( SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.max_timestamp ORDER BY T1.timestamp DESC
SELECT id FROM event_log WHERE id IN (SELECT MAX(id) FROM event_log GROUP BY idcase) ORDER BY timestamp
SELECT MAX(id) FROM event_log GROUP BY idcase
SELECT MAX(id) FROM event_log GROUP BY idcase ORDER BY MAX(timestamp)
SELECT T1.idcase, GROUP_CONCAT(T1.id) FROM event_log AS T1 INNER JOIN ( SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY idcase ) AS T2 ON T1.idcase = T2.idcase AND T1.timestamp = T2.max_timestamp GROUP BY T1.idcase ORDER BY T1.idcase
SELECT MAX(id) FROM event_log GROUP BY idcase
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 100
SELECT activity FROM event_log WHERE idcase LIKE 'declaration%' GROUP BY activity HAVING COUNT(activity) > 100
SELECT COUNT(DISTINCT T1.idcase), T2.grupo FROM event_log AS T1 INNER JOIN ( SELECT 'employee' AS grupo UNION ALL SELECT 'supervisor' UNION ALL SELECT 'administration' UNION ALL SELECT 'pre-approver' UNION ALL SELECT 'budget owner' UNION ALL SELECT 'director' ) AS T2 ON T1.activity LIKE '%' || T2.grupo || '%' GROUP BY T2.grupo ORDER BY COUNT(DISTINCT T1.idcase)
SELECT COUNT(DISTINCT T1.idcase), T2.grupo FROM event_log AS T1 INNER JOIN ( SELECT 'employee' AS grupo UNION ALL SELECT 'supervisor' UNION ALL SELECT 'administration' UNION ALL SELECT 'pre-approver' UNION ALL SELECT 'budget owner' UNION ALL SELECT 'director' ) AS T2 ON T1.activity LIKE '%' || T2.grupo || '%' GROUP BY T2.grupo ORDER BY COUNT(DISTINCT T1.idcase)
SELECT COUNT(DISTINCT T1.idcase), T2.grupo FROM event_log AS T1 INNER JOIN ( SELECT 'employee' AS grupo UNION ALL SELECT 'supervisor' UNION ALL SELECT 'administration' UNION ALL SELECT 'pre-approver' UNION ALL SELECT 'budget owner' UNION ALL SELECT 'director' ) AS T2 ON T1.activity LIKE '%' || T2.grupo || '%' GROUP BY T2.grupo ORDER BY COUNT(DISTINCT T1.idcase)
SELECT COUNT(DISTINCT idcase), CASE WHEN activity LIKE '%employee%' THEN 'employee' WHEN activity LIKE '%supervisor%' THEN 'supervisor' WHEN activity LIKE '%administration%' THEN 'administration' WHEN activity LIKE '%pre-approver%' THEN 'pre-approver' WHEN activity LIKE '%budget owner%' THEN 'budget owner' WHEN activity LIKE '%director%' THEN 'director' ELSE 'other' END AS grupo FROM event_log GROUP BY grupo ORDER BY COUNT(DISTINCT idcase)
SELECT COUNT(T1.id), CASE WHEN T1.activity LIKE '%employee%' THEN 'employee' WHEN T1.activity LIKE '%supervisor%' THEN 'supervisor' WHEN T1.activity LIKE '%administration%' THEN 'administration' WHEN T1.activity LIKE '%pre-approver%' THEN 'pre-approver' WHEN T1.activity LIKE '%budget owner%' THEN 'budget owner' WHEN T1.activity LIKE '%director%' THEN 'director' END AS grupo FROM event_log AS T1 GROUP BY grupo ORDER BY COUNT(T1.id)
SELECT resource, GROUP_CONCAT(activity, ', ') AS activities, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY activity_count DESC
SELECT T2.activity, COUNT(T1.id) AS count FROM event_log AS T1 INNER JOIN ( SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%employee%' OR activity LIKE '%supervisor%' OR activity LIKE '%administration%' OR activity LIKE '%pre-approver%' OR activity LIKE '%budget owner%' OR activity LIKE '%supervisor%' OR activity LIKE '%director%' ) AS T2 ON T1.activity = T2.activity GROUP BY T2.activity ORDER BY COUNT(T1.id) DESC
SELECT COUNT(T1.idcase), T2.role FROM events_log AS T1 INNER JOIN ( SELECT 'employee' AS role UNION ALL SELECT 'supervisor' UNION ALL SELECT 'administration' UNION ALL SELECT 'pre-approver' UNION ALL SELECT 'budget owner' UNION ALL SELECT 'director' ) AS T2 ON T1.activity LIKE '%' || T2.role || '%' GROUP BY T2.role ORDER BY T2.role
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'End trip' AND T1.timestamp > T2.timestamp
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'End trip' AND T1.timestamp > T2.timestamp
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'End trip' AND T1.timestamp > T2.timestamp
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'End trip' AND T1.timestamp > T2.timestamp
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'End trip' AND T2.timestamp > T1.timestamp
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Start trip' AND T2.activity = 'End trip' AND T1.timestamp < T2.timestamp
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder' AND timestamp = (SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder' AND id = (SELECT MAX(id) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder' AND id = (SELECT MAX(id) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder' AND timestamp = (SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(DISTINCT T1.idcase) FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.timestamp < T2.timestamp AND T2.activity = 'Send reminder' AND T2.timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = T1.idcase )
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder'
SELECT resource FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-31' GROUP BY resource HAVING COUNT(DISTINCT activity) = 0
SELECT resource FROM event_log WHERE timestamp != '2018-03-31' EXCEPT SELECT resource FROM event_log WHERE timestamp = '2018-03-31'
SELECT resource FROM event_log WHERE timestamp LIKE '2018-03-31%' GROUP BY resource HAVING COUNT(resource) = 0
SELECT T1.resource FROM event_log AS T1 INNER JOIN idcase AS T2 ON T1.idcase = T2.id WHERE T2.date = '2018-03-31' AND T1.resource IS NULL
SELECT DISTINCT resource FROM event_log WHERE DATE(timestamp) = '2018-03-31' EXCEPT SELECT DISTINCT resource FROM event_log WHERE DATE(timestamp) = '2018-03-31' AND activity != 'idle'
SELECT resource FROM event_log WHERE activity = 'declaration processing' AND timestamp = '2018-03-31' EXCEPT SELECT resource FROM event_log WHERE activity = 'declaration processing' AND timestamp = '2018-03-31'
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE strftime('%Y-%m-%d', timestamp) BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY idcase HAVING COUNT(DISTINCT activity) = (SELECT COUNT(DISTINCT activity) FROM event_log WHERE idcase = T1.idcase)) GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE strftime('%Y-%m-%d', timestamp) BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1) GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE strftime('%Y-%m-%d', timestamp) BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1) GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity
SELECT activity, COUNT(id) FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE strftime('%Y-%m-%d', timestamp) BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1) GROUP BY activity
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Payment handled'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Payment handled'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Payment handled'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Payment handled')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Payment handled'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Payment handled'
SELECT activity, COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity LIKE 'Declaration processing%'
SELECT T1.activity FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp < T2.timestamp WHERE T2.activity = 'Send reminder' GROUP BY T1.activity
SELECT T1.idcase, T1.resource, T1.id, T1.timestamp FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp > T2.timestamp WHERE T1.activity = 'Send reminder' AND T2.activity != 'Send reminder' ORDER BY T1.timestamp
SELECT T1.activity FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp < T2.timestamp WHERE T2.activity = 'Send reminder'
SELECT COUNT(idcase), COUNT(DISTINCT idcase) FROM event_log
SELECT COUNT(idcase), COUNT(DISTINCT idcase) FROM event_log GROUP BY COUNT(idcase)
SELECT COUNT(idcase), COUNT(DISTINCT idcase) FROM event_log GROUP BY COUNT(idcase)
SELECT COUNT(DISTINCT idcase) FROM (SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase)
SELECT COUNT(DISTINCT idcase) FROM ( SELECT idcase, COUNT(activity) AS event_count FROM event_log GROUP BY idcase ) WHERE event_count > 3
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) FROM event_log GROUP BY resource
SELECT AVG(cost) FROM event_log
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 10
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 10
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 10
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 10
SELECT resource, COUNT(id) FROM event_log GROUP BY resource ORDER BY COUNT(id) DESC LIMIT 10
SELECT resource FROM event_log WHERE activity = 'Travel Declaration' GROUP BY resource ORDER BY COUNT(idcase) DESC LIMIT 10
SELECT strftime('%Y-%m-%d', timestamp), COUNT(*) FROM event_log GROUP BY strftime('%Y-%m-%d', timestamp)
SELECT COUNT(id), strftime('%Y-%m-%d', timestamp) FROM event_log GROUP BY strftime('%Y-%m-%d', timestamp)
SELECT COUNT(id), DATE(timestamp) FROM event_log GROUP BY DATE(timestamp)
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = T2.activity AND T1.resource != T2.resource
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = T2.activity AND T1.resource != T2.resource AND T1.id < T2.id GROUP BY T1.idcase
SELECT idcase FROM event_log GROUP BY idcase, activity, timestamp HAVING COUNT(DISTINCT resource) > 1
SELECT COUNT(T1.id) - 1 FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'Declaration final approved by director' AND T1.timestamp < T2.timestamp GROUP BY T1.idcase
SELECT COUNT(T1.id) - 1 FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.timestamp < T2.timestamp WHERE T2.activity = 'Declaration final approved by director' GROUP BY T1.idcase
SELECT COUNT(T1.id) , T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T2.activity = 'Director Approval' AND T1.activity != 'Director Approval' GROUP BY T1.idcase
SELECT T1.idcase, T2.timestamp - T1.timestamp FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = 'Permit submitted by employee' AND T2.activity = 'Permit approved by administration'
SELECT T1.idcase, T2.timestamp - T1.timestamp FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = 'Permit submitted by employee' AND T2.activity = 'Permit approved by administration'
SELECT STRFTIME('%s', T2.timestamp) - STRFTIME('%s', T1.timestamp) AS "Time difference" FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase WHERE T1.activity = 'Request permit' AND T2.activity = 'Permit approved by administration'
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = T2.activity AND T1.timestamp < T2.timestamp
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = T2.activity AND T1.timestamp < T2.timestamp
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = T2.activity AND T1.id != T2.id
SELECT idcase FROM event_log WHERE activity = 'Rework'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Rework'
SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(DISTINCT activity) > 1
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = T2.activity AND T1.timestamp < T2.timestamp AND T1.id != T2.id GROUP BY T1.idcase
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = T2.activity AND T1.id < T2.id AND T1.timestamp < T2.timestamp
SELECT DISTINCT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = T2.activity AND T1.id != T2.id
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = T2.activity AND T1.id < T2.id AND T1.timestamp < T2.timestamp GROUP BY T1.idcase, T1.activity HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE activity = 'intervention' GROUP BY idcase HAVING COUNT(DISTINCT timestamp) > 1 AND COUNT(DISTINCT resource) = 1
SELECT T1.idcase FROM event_log AS T1 INNER JOIN event_log AS T2 ON T1.idcase = T2.idcase AND T1.activity = T2.activity AND T1.timestamp < T2.timestamp WHERE T1.id + 1 = T2.id GROUP BY T1.idcase HAVING COUNT(T1.idcase) > 1
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor'
SELECT DISTINCT resource FROM event_log WHERE activity LIKE '%supervisor%'
SELECT resource FROM event_log WHERE activity LIKE 'Budget%' GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 1
SELECT DISTINCT resource FROM event_log WHERE activity LIKE '%budget owner%'
