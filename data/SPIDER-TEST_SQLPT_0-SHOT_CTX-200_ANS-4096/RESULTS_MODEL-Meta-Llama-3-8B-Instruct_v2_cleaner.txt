SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) AS "Quantidade de vezes" FROM "event_log" WHERE "activity" LIKE '%end%';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%atualizado%' AND resource = 'James' AND idcase = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%update%' AND resource = 'James' AND idcase = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'FINALIZAÃÃO DE VIAGEM' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%atualizado%' AND resource LIKE '%final de viagem%' AND activity LIKE '%James%';
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY resource ORDER BY quantidade_eventos DESC;
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY resource ORDER BY quantidade_eventos DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC;
SELECT resource, COUNT(*) AS frequency FROM event_log GROUP BY resource ORDER BY frequency DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS num_execucoes FROM event_log GROUP BY resource ORDER BY num_execucoes DESC;
SELECT resource, COUNT(*) AS quantidade_execucoes FROM event_log GROUP BY resource ORDER BY quantidade_execucoes DESC;
SELECT e.idcase, e.activity, COUNT(e.activity) AS total_actions, e.resource AS employee FROM event_log e WHERE e.activity LIKE '%declaraÃ§Ã£o de viagem%' GROUP BY e.idcase, e.activity, e.resource ORDER BY total_actions DESC;
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) AS quantidade FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%Peter%';
SELECT COUNT(*) FROM "event_funcionarios" WHERE "id_funcionario" IN (SELECT "id" FROM "funcionarios" WHERE "name" = 'Peter')
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM "event_log" WHERE "resource" IN (SELECT "resource" FROM "employees" WHERE "name" = 'Peter')
SELECT COUNT(*) AS quantidade_acoes FROM event_log WHERE activity LIKE '%Peter%' AND activity LIKE '%declaraÃ§Ã£o de viagem%';
SELECT * FROM event_log WHERE EXTRACT(MONTH FROM timestamp) = 3 AND EXTRACT(YEAR FROM timestamp) = 2018;
SELECT * FROM "event_log" WHERE EXTRACT(MONTH FROM "timestamp") = 3 AND EXTRACT(YEAR FROM "timestamp") = 2018 AND "idcase" IS NOT NULL;
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01 00:00:00' AND '2018-03-31 23:59:59';
SELECT idcase FROM event_log WHERE timestamp LIKE '%-03-2018%' AND activity = 'FINALIZADO';
SELECT idcase FROM event_log WHERE timestamp LIKE '%2018-03-%' ORDER BY idcase;
SELECT * FROM event_log WHERE MONTH(timestamp) = 3 AND YEAR(timestamp) = 2018;
SELECT * FROM event_log WHERE MONTH(timestamp) = 3 AND YEAR(timestamp) = 2018;
SELECT * FROM event_log WHERE EXTRACT(MONTH FROM timestamp) = 3 AND EXTRACT(YEAR FROM timestamp) = 2018;
SELECT * FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' AND resource!= 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' AND resource!= 'Douglas';
SELECT * FROM "event_log" WHERE "activity" = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' AND "resource" <> 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' AND resource!= 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' AND resource!= 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' AND resource!= 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' AND resource!= 'Douglas';
SELECT * FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' AND resource!= 'Douglas';
SELECT * FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' AND resource!= 'Douglas';
SELECT * FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' AND resource!= 'Douglas';
SELECT * FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' AND resource <> 'Douglas';
SELECT activity FROM event_log WHERE activity LIKE '%rejeitado%' AND idcase NOT LIKE '%Douglas%' AND resource LIKE '%John%';
SELECT el.* FROM event_log el JOIN pre_approvers pa ON el.idcase = pa.declared WHERE el.activity = 'REJECTED' AND pa.name!= 'Douglas'
SELECT COUNT(DISTINCT "resource") AS "Number of different resources" FROM "event_log";
SELECT DISTINCT resource FROM event_log
SELECT COUNT(DISTINCT "resource") AS "Number of resources" FROM "event_log";
SELECT COUNT(DISTINCT user_id) AS num_users FROM event_log;
SELECT DISTINCT resource FROM event_log;
SELECT COUNT(DISTINCT resource) AS num_pessoas FROM event_log;
SELECT COUNT(DISTINCT "resource") AS "Number of different resources" FROM "event_log";
SELECT DISTINCT resource FROM event_log
SELECT COUNT(DISTINCT "resource") AS "Number of different resources" FROM "event_log";
SELECT DISTINCT resource FROM event_log
SELECT COUNT(DISTINCT "resource") AS "number_of_resources" FROM "event_log";
SELECT COUNT(DISTINCT resource) AS num_funcionarios FROM event_log;
SELECT COUNT(DISTINCT resource) AS num_funcionarios FROM event_log;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource ORDER BY total_events DESC;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource
SELECT f.nome, COUNT(el.id) AS total_actions FROM event_log el JOIN case c ON el.idcase = c.id JOIN funcionarios f ON c.funcionario_id = f.id GROUP BY f.nome ORDER BY total_actions DESC;
SELECT * FROM "event_log" WHERE "cost" > 2.225;
SELECT DISTINCT "idcase" FROM "event_log" WHERE "cost" > 2.225;
SELECT DISTINCT idcase FROM event_log WHERE cost > 2.225;
SELECT * FROM event_log WHERE cost > 2.225;
SELECT id FROM event_log WHERE cost > 2.225;
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) as quantidade_eventos FROM event_log GROUP BY resource ORDER BY quantidade_eventos DESC;
SELECT resource, COUNT(*) as quantidade_eventos FROM event_log GROUP BY resource ORDER BY quantidade_eventos DESC LIMIT 1;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT f.nome, SUM(el.cost) AS total_cost FROM event_log el JOIN funcionarios f ON el.idcase = f.idcase GROUP BY f.nome ORDER BY total_cost DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT f.name, COUNT(el.id) AS quantidade_atuacoes FROM funcionarios f JOIN event_log el ON f.idcase = el.idcase GROUP BY f.name ORDER BY quantidade_atuacoes DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY resource ORDER BY quantidade_eventos DESC;
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY resource ORDER BY quantidade_eventos DESC;
SELECT resource, COUNT(*) as quantidade_execucoes FROM event_log GROUP BY resource ORDER BY quantidade_execucoes DESC;
WITH funcionarios AS ( SELECT "resource" AS funcionario, SUM("cost") AS custo_total FROM "event_log" GROUP BY "resource" ) SELECT funcionario, custo_total, COUNT(*) AS quantidade_de_eventos FROM funcionarios ORDER BY custo_total DESC;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT activity FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT activity FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o%' AND cost > 0;
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE activity IN ('inÃ­cio da viagem','requisiÃ§Ã£o de pagamento');
SELECT * FROM "event_log" WHERE "activity" = 'inÃ­cio da viagem' OR "activity" ='requisiÃ§Ã£o de pagamento';
SELECT * FROM "event_log" WHERE "activity" = 'inÃ­cio da viagem' OR "activity" ='requisiÃ§Ã£o de pagamento';
SELECT * FROM event_log WHERE activity IN ('inÃ­cio da viagem','requisiÃ§Ã£o de pagamento');
SELECT * FROM event_log WHERE activity IN ('iniciar_viagem','realizar_pagamento')
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC LIMIT 10;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o%' OR activity LIKE '%processamento%' GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as ocorrencias FROM event_log GROUP BY activity ORDER BY ocorrencias DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT * FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017;
SELECT * FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017;
SELECT * FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017;
SELECT * FROM "event_log" WHERE EXTRACT(YEAR FROM "timestamp") = 2017;
SELECT * FROM event_log WHERE timestamp >= '2017-01-01' AND timestamp < '2018-01-01';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01 00:00:00' AND '2017-12-31 23:59:59';
SELECT * FROM "event_log" WHERE strftime('%Y', "timestamp") = '2017';
SELECT * FROM "event_log" WHERE DATE_TRUNC('year', "timestamp") = '2017-01-01';
SELECT * FROM "event_log" WHERE DATE(timestamp) BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp >= '2017-01-01' AND timestamp < '2018-01-01';
SELECT * FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017 AND activity LIKE '%processamento das declaraÃ§Ãµes%';
SELECT activity, timestamp, resource, cost, idcase FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017 AND activity LIKE '%declaraÃ§Ã£o%' ORDER BY timestamp;
SELECT * FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017 AND activity LIKE '%declaraÃ§Ã£o%' OR activity LIKE '%declaracao%';
SELECT * FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017 AND activity LIKE '%declaraÃ§Ãµes%';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' AND activity LIKE '%processamento%' OR activity LIKE '%declaraÃ§Ãµes%';
SELECT COUNT(*) AS num_events, activity FROM event_log GROUP BY activity HAVING COUNT(*) <= 20;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT DISTINCT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity HAVING COUNT(*) <= 20;
SELECT activity, COUNT(*) AS occurrences FROM event_log GROUP BY activity HAVING COUNT(*) <= 20;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT "idcase" AS "DeclaraÃ§Ã£o", COUNT(*) AS "NÃºmero de eventos" FROM "event_log" GROUP BY "idcase" HAVING COUNT(*) <= 20 ORDER BY "NÃºmero de eventos" DESC;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT resource, COUNT(*) as total_cases FROM event_log GROUP BY resource ORDER BY total_cases DESC LIMIT 5;
SELECT resource, COUNT(*) as total_cases FROM event_log GROUP BY resource ORDER BY total_cases DESC LIMIT 5;
SELECT resource, COUNT(*) as quantidade FROM event_log GROUP BY resource ORDER BY quantidade DESC LIMIT 5;
SELECT resource, COUNT(*) as quantidade_de_casos FROM event_log GROUP BY resource ORDER BY quantidade_de_casos DESC LIMIT 5;
CREATE TABLE "funcionarios" ( "id" int, "nome" TEXT COLLATE NOCASE, "idcase" TEXT COLLATE NOCASE, PRIMARY KEY("id") )
SELECT resource, COUNT(*) as quantidade_eventos FROM event_log GROUP BY resource ORDER BY quantidade_eventos DESC LIMIT 5;
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource ORDER BY count DESC LIMIT 5;
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource ORDER BY count DESC LIMIT 5;
SELECT resource, COUNT(*) as quantidade_eventos FROM event_log GROUP BY resource ORDER BY quantidade_eventos DESC LIMIT 5;
SELECT resource, COUNT(*) as num_atuacoes FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o%' -- ajuste essa condiÃ§Ã£o para incluir apenas as atividades relacionadas Ã s declaraÃ§Ãµes GROUP BY resource ORDER BY num_atuacoes DESC LIMIT 5;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'inÃ­cio da viagem' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'inÃ­cio da viagem' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource
SELECT resource, COUNT(*) AS num_executions FROM event_log WHERE activity = 'inÃ­cio da viagem' AND timestamp >= '2016-01-01' AND timestamp < '2017-01-01' GROUP BY resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'inÃ­cio da viagem' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource
SELECT resource, COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'inÃ­cio da viagem' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'inÃ­cio da viagem' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource ORDER BY num_occurrences DESC;
SELECT resource, COUNT(*) AS total_ocorrencias FROM event_log WHERE activity = 'inÃ­cio da viagem' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource ORDER BY total_ocorrencias DESC;
SELECT e.id, COUNT(*) AS num_actions FROM event_log e WHERE e.activity = 'iniciar viagem' AND e.timestamp >= '2016-01-01' AND e.timestamp < '2017-01-01' GROUP BY e.id;
SELECT resource, COUNT(*) AS quantidade_atividades FROM event_log WHERE activity LIKE 'INÃCIO DA VIAGEM%' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_execucoes FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' GROUP BY resource;
SELECT resource, COUNT(*) AS ocorrencias FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' GROUP BY resource;
SELECT resource, COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' GROUP BY resource;
SELECT resource, COUNT(*) AS ocorrencias FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' GROUP BY resource;
SELECT resource, COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' GROUP BY resource;
SELECT resource, COUNT(*) AS ocorrencias FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' GROUP BY resource;
SELECT resource, COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' GROUP BY resource;
SELECT resource, COUNT(*) AS quantidade_ocorrencias FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' GROUP BY resource;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' GROUP BY resource;
SELECT resource, COUNT(*) AS total_ocorrencias FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' GROUP BY resource;
CREATE TABLE "funcionarios" ( "id" int, "nome" TEXT COLLATE NOCASE, "supervisor" TEXT COLLATE NOCASE )
SELECT idcase, COUNT(*) as ocorrencias FROM event_log GROUP BY idcase HAVING COUNT(*) > 20 ORDER BY ocorrencias DESC;
SELECT idcase, COUNT(*) as ocorrencias FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase, COUNT(*) AS num_occurrences FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase, COUNT(*) AS num_occurrences FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase, COUNT(*) as num_occurrences FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT "resource" AS "Processo", COUNT(*) AS "OcorrÃªncias" FROM "event_log" GROUP BY "resource" HAVING COUNT(*) > 20 ORDER BY "OcorrÃªncias" DESC;
SELECT resource, COUNT(*) as num_occurrences FROM event_log GROUP BY resource HAVING COUNT(*) > 20
SELECT resource, COUNT(*) as num_occurrences FROM event_log GROUP BY resource HAVING COUNT(*) > 20
SELECT activity, COUNT(*) AS num_interventions FROM event_log GROUP BY activity HAVING COUNT(*) > 20;
SELECT idcase, COUNT(*) as quantidade_eventos FROM event_log GROUP BY idcase ORDER BY quantidade_eventos DESC LIMIT 1;
SELECT idcase, COUNT(*) as total_executions FROM event_log GROUP BY idcase ORDER BY total_executions DESC;
SELECT idcase, COUNT(*) as quantidade_eventos FROM event_log GROUP BY idcase ORDER BY quantidade_eventos DESC LIMIT 1;
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC;
SELECT LENGTH(idcase) AS length, COUNT(*) AS num_events FROM event_log GROUP BY LENGTH(idcase) ORDER BY num_events DESC;
SELECT idcase, LENGTH(idcase) AS length FROM event_log ORDER BY length DESC;
SELECT idcase, COUNT(*) as num_actions FROM event_log GROUP BY idcase ORDER BY num_actions DESC;
SELECT * FROM "event_log" WHERE "resource" = 'Sara' AND NOT EXISTS ( SELECT 1 FROM "event_log" WHERE "activity" ='requisiÃ§Ã£o de pagamento' AND "resource" = 'Sara' )
SELECT * FROM event_log WHERE resource = 'Sara' AND activity!='requisiÃ§Ã£o de pagamento';
SELECT idcase FROM event_log WHERE resource = 'Sara' AND activity!='requisiÃ§Ã£o de pagamento'
SELECT * FROM event_log WHERE resource = 'Sara' AND activity!='requisiÃ§Ã£o de pagamento';
SELECT * FROM "event_log" WHERE "idcase" NOT IN ( SELECT "idcase" FROM "event_log" WHERE "activity" ='requisiÃ§Ã£o de pagamento' ) AND "resource" = 'Sara';
CREATE TABLE "payment_requests" ( "id" int, "event_log_id" int, "status" TEXT COLLATE NOCASE, PRIMARY KEY("id") )
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaraÃ§Ã£o 143598';
SELECT * FROM event_log WHERE idcase = 'declaraÃ§Ã£o 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT * FROM event_log WHERE idcase = 'declaraÃ§Ã£o 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaraÃ§Ã£o 143598';
SELECT * FROM event_log WHERE timestamp BETWEEN strftime('%Y-%m-%d 00:00:00', '2017-01-10') AND strftime('%Y-%m-%d 23:59:59', '2017-02-01') AND idcase = '143598';
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource ORDER BY num_cases DESC;
SELECT e.name, COUNT(*) AS num_declaracoes FROM event_log el JOIN employees e ON el.idcase = e.idcase WHERE el.timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY e.name
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) AS quantidade_atividades FROM event_log GROUP BY idcase ORDER BY quantidade_atividades DESC LIMIT 10;
SELECT idcase, COUNT(*) as quantidade_atividades FROM event_log GROUP BY idcase ORDER BY quantidade_atividades DESC LIMIT 10;
SELECT idcase, COUNT(*) as total_executions FROM event_log GROUP BY idcase ORDER BY total_executions DESC LIMIT 10;
SELECT idcase, COUNT(*) as total_executions FROM event_log GROUP BY idcase ORDER BY total_executions DESC LIMIT 10;
SELECT idcase, COUNT(*) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT resource, COUNT(*) as num_executions FROM event_log GROUP BY resource ORDER BY num_executions DESC LIMIT 10;
SELECT resource, COUNT(*) as num_executions FROM event_log GROUP BY resource ORDER BY num_executions DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT e1.activity AS "DeclaraÃ§Ã£o 1", e2.activity AS "DeclaraÃ§Ã£o 2", COUNT(*) AS "NÃºmero de aÃ§Ãµes" FROM event_log e1 JOIN event_log e2 ON e1.id < e2.id WHERE e1.activity!= e2.activity GROUP BY e1.activity, e2.activity ORDER BY COUNT(*) DESC;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 10;
SELECT idcase, COUNT(*) as quantidade FROM event_log GROUP BY idcase ORDER BY quantidade DESC LIMIT 10;
SELECT idcase, COUNT(*) as quantidade_eventos FROM event_log GROUP BY idcase ORDER BY quantidade_eventos DESC LIMIT 10;
SELECT idcase, COUNT(*) as total_events FROM event_log GROUP BY idcase ORDER BY total_events DESC LIMIT 10;
SELECT idcase, COUNT(*) as total_events FROM event_log GROUP BY idcase ORDER BY total_events DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 10;
SELECT idcase, COUNT(*) as total_actions FROM event_log GROUP BY idcase ORDER BY total_actions DESC LIMIT 10;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY quantidade_eventos DESC;
SELECT "resource" AS funcionario, COUNT(*) AS quantidade_acoes FROM "event_log" GROUP BY "resource" HAVING COUNT(*) >= 100 ORDER BY quantidade_acoes DESC;
SELECT idcase AS "Case ID", activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT idcase AS "Case", activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT DISTINCT idcase, MIN(timestamp) AS start_timestamp FROM event_log GROUP BY idcase ORDER BY idcase, start_timestamp;
SELECT idcase, MIN(timestamp) AS start_time, id FROM event_log GROUP BY idcase ORDER BY idcase, start_time;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log ORDER BY id, timestamp;
SELECT resource, COUNT(*) AS quantidade_de_vezes FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pela administraÃ§Ã£o' GROUP BY resource;
SELECT resource, COUNT(*) AS total_de_vezes FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pela administraÃ§Ã£o' GROUP BY resource;
SELECT resource, COUNT(*) AS total_executions FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pela administraÃ§Ã£o' GROUP BY resource;
SELECT resource, COUNT(*) AS quantidade_ocorrencias FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pela administraÃ§Ã£o' GROUP BY resource;
SELECT idcase, COUNT(*) AS num_aprovacoes FROM event_log WHERE activity = 'APROVAR_DECLARACAO' AND resource LIKE '%administrador%' -- suposiÃ§Ã£o: o campo "resource" contÃ©m a descriÃ§Ã£o do papel do funcionÃ¡rio GROUP BY idcase;
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pela administraÃ§Ã£o' GROUP BY resource;
SELECT resource, COUNT(*) AS quantidade FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pela administraÃ§Ã£o' GROUP BY resource;
SELECT resource, COUNT(*) AS num_aps FROM event_log WHERE activity LIKE '%aprove%' AND activity LIKE '%admin%' GROUP BY resource
SELECT activity, COUNT(*) AS num_occurrences FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017 AND resource = 'Thomas' GROUP BY activity
SELECT activity, COUNT(*) AS quantidade_execucoes FROM event_log WHERE resource = 'Thomas' AND EXTRACT(YEAR FROM timestamp) = 2017 GROUP BY activity ORDER BY quantidade_execucoes DESC;
SELECT activity, COUNT(*) as quantidade FROM event_log WHERE resource = 'Thomas' AND timestamp >= '2017-01-01' AND timestamp < '2018-01-01' GROUP BY activity ORDER BY quantidade DESC;
SELECT activity, COUNT(*) AS "quantidade" FROM event_log WHERE activity LIKE '%processamento de declaraÃ§Ãµes%' AND EXTRACT(YEAR FROM timestamp) = 2017 AND resource LIKE '%Thomas%' GROUP BY activity ORDER BY quantidade DESC;
SELECT COUNT(*) FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017 AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017 AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND EXTRACT(YEAR FROM timestamp) = 2017;
SELECT COUNT(*) FROM "event_log" WHERE "resource" = 'Thomas' AND EXTRACT(YEAR FROM "timestamp") = 2017;
SELECT COUNT(*) FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017 AND resource = 'Thomas';
SELECT SUM(cost) AS carga_trabalho FROM event_log WHERE activity LIKE '%processamento de declaraÃ§Ãµes%' AND resource LIKE '%Thomas%' AND timestamp >= '2017-01-01' AND timestamp < '2018-01-01';
SELECT activity, MAX(timestamp) AS mais_recente FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS mais_recente FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS mais_recente FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS last_execution_time FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS last_execution FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS last_occurrence FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS last_occurrence FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS frequency, EXTRACT(YEAR FROM timestamp) AS year FROM event_log WHERE (activity = 'declaraÃ§Ã£o aprovada pelo supervisor' AND EXTRACT(YEAR FROM timestamp) = 2017) OR (activity = 'permissÃ£o rejeitada pelo funcionÃ¡rio' AND EXTRACT(YEAR FROM timestamp) = 2018) GROUP BY activity, year ORDER BY activity, year;
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pelo supervisor' AND EXTRACT(YEAR FROM timestamp) = 2017;
SELECT COUNT(*) FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017 AND activity = 'declaraÃ§Ã£o aprovada pelo supervisor' UNION ALL SELECT COUNT(*) FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2018 AND activity = 'permissÃ£o rejeitada pelo funcionÃ¡rio';
SELECT COUNT(*) AS count_declared, COUNT(*) AS count_rejected FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pelo supervisor' AND EXTRACT(YEAR FROM timestamp) = 2017 UNION ALL SELECT COUNT(*) AS count_declared, COUNT(*) AS count_rejected FROM event_log WHERE activity = 'permissÃ£o rejeitada pelo funcionÃ¡rio' AND EXTRACT(YEAR FROM timestamp) = 2018;
SELECT COUNT(*) AS quantidade FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pelo supervisor' AND timestamp LIKE '2017-%' UNION ALL SELECT COUNT(*) AS quantidade FROM event_log WHERE activity = 'permissÃ£o rejeitada pelo funcionÃ¡rio' AND timestamp LIKE '2018-%';
SELECT COUNT(*) FROM event_log WHERE activity = 'APROVAÃÃO' AND resource = 'SUPERVISOR' AND EXTRACT(YEAR FROM timestamp) = 2017;
SELECT activity, timestamp, id FROM event_log ORDER BY timestamp DESC;
SELECT activity, timestamp, id FROM event_log ORDER BY timestamp DESC;
SELECT activity, timestamp, id FROM event_log WHERE activity LIKE '%processamento das declaraÃ§Ãµes%' ORDER BY timestamp;
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE UPPER(activity) LIKE '%DECLARAÃÃO REQUISITADA PELOR FUNCIONÃRIO%';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio';
SELECT COUNT(*) AS total_requisicoes FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o%' AND resource LIKE '%Thomas%';
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT * FROM event_log WHERE activity LIKE '%Diana%' AND idcase LIKE '%declaraÃ§Ã£o%' AND cost IS NOT NULL;
SELECT DISTINCT activity, COUNT(*) AS num_events FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity;
SELECT activity, COUNT(*) AS quantidade_eventos FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity;
SELECT activity FROM event_log WHERE activity LIKE '%Diana%' AND cost IS NOT NULL AND resource LIKE '%declaraÃ§Ãµes%'
SELECT COUNT(DISTINCT resource) AS quantidade_recursos FROM event_log WHERE id IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT resource, COUNT(*) as num_events FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 ) GROUP BY resource ORDER BY num_events DESC;
SELECT COUNT(DISTINCT "resource") AS "quantity_of_resources" FROM "event_log" WHERE "idcase" IN ( SELECT "idcase" FROM "event_log" GROUP BY "idcase" HAVING COUNT(*) > 3 )
SELECT COUNT(DISTINCT "resource") AS "resource_count", "idcase" FROM "event_log" GROUP BY "idcase" HAVING COUNT(*) > 3
SELECT COUNT(DISTINCT "idcase") AS num_cases FROM "event_log" WHERE "activity" LIKE 'processamento de declaraÃ§Ã£o%' -- ajuste essa condiÃ§Ã£o para incluir apenas as atividades de processamento de declaraÃ§Ã£o GROUP BY "idcase" HAVING COUNT(*) > 3;
SELECT resource FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador';
SELECT resource FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador';
SELECT resource FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'REJEITAR DECLARAÃÃO' AND activity LIKE '%PRÃ-APROVAÃÃO%';
SELECT COUNT(*) FROM "event_log" WHERE "activity" = 'declaraÃ§Ã£o final aprovada pelo diretor' AND MONTH("timestamp") BETWEEN 1 AND 5 AND YEAR("timestamp") = 2017;
SELECT COUNT(*) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' AND activity = 'declaraÃ§Ã£o final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o final aprovada pelo diretor' AND EXTRACT(MONTH FROM timestamp) BETWEEN 1 AND 5 AND EXTRACT(YEAR FROM timestamp) = 2017;
SELECT COUNT(*) FROM event_log WHERE activity = 'DECLARAÃÃO FINAL APROVADA POR DIRETOR' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT * FROM "event_log" WHERE "resource" = 'Charles' AND NOT EXISTS ( SELECT 1 FROM "event_log" WHERE "idcase" = "event_log"."idcase" AND "timestamp" BETWEEN '2018-01-01' AND '2018-01-31' )
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND timestamp < '2018-01-01 00:00:00' OR timestamp > '2018-01-31 23:59:59';
SELECT * FROM "event_log" WHERE "idcase" NOT IN ( SELECT "idcase" FROM "event_log" WHERE strftime('%Y-%m', "timestamp") = '2018-01' ) AND "resource" = 'Charles';
SELECT * FROM event_log WHERE timestamp >= '2018-02-01' AND timestamp < '2019-01-01' AND resource = 'Charles';
SELECT * FROM event_log WHERE activity LIKE '%Charles%' AND timestamp >= '2018-02-01' AND timestamp < '2019-01-01';
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3 ORDER BY num_activities DESC;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(DISTINCT resource) > 3;
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) > 3;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 ORDER BY num_events DESC;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) > 3;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT Para responder Ã  sua pergunta, precisamos analisar as declaraÃ§Ãµes que foram realizadas no banco de dados e contar o nÃºmero de intervenÃ§Ãµes (ou alteraÃ§Ãµes) feitas em cada uma delas. No entanto, como o esquema de banco de dados nÃ£o contÃ©m informaÃ§Ãµes sobre as declaraÃ§Ãµes que foram realizadas, nÃ£o Ã© possÃ­vel responder Ã  sua pergunta com base nos dados fornecidos. Se vocÃª tiver informaÃ§Ãµes sobre as declaraÃ§Ãµes que foram realizadas no banco de dados, como logs de alteraÃ§Ãµes ou histÃ³rico de alteraÃ§Ãµes, poderÃ­amos ajudÃ¡-lo a contar o nÃºmero de intervenÃ§Ãµes feitas em cada declaraÃ§Ã£o. AlÃ©m disso, se vocÃª quiser saber quais sÃ£o as colunas que sofreram mais de trÃªs intervenÃ§Ãµes (ou alteraÃ§Ãµes) em um determinado perÃ­odo de tempo, poderÃ­amos ajudÃ¡-lo a criar uma query que contabilize as alteraÃ§Ãµes feitas em cada coluna e ordenÃ¡-las por nÃºmero de intervenÃ§Ãµes.
SELECT idcase, MIN(timestamp) AS start_time, MAX(timestamp) AS end_time, TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY idcase;
SELECT idcase, SUM(TIMESTAMPDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) + 1) AS tempo_total FROM event_log GROUP BY idcase ORDER BY tempo_total DESC;
SELECT idcase, TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp)) AS duration FROM event_log GROUP BY idcase
SELECT idcase, TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp)) AS duration FROM event_log GROUP BY idcase
SELECT ALTER TABLE "event_log" ADD COLUMN "end_timestamp" DATETIME; UPDATE "event_log" SET "end_timestamp" = (SELECT MAX("timestamp") FROM "event_log" WHERE "idcase" = "event_log"."idcase" AND "activity" ='start') WHERE "activity" ='start';
SELECT activity, timestamp, resource, cost, idcase, TIMESTAMPDIFF(SECOND, LAG(timestamp) OVER (ORDER BY timestamp), timestamp) AS duration FROM event_log ORDER BY timestamp;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase IS NOT NULL)
SELECT resource, idcase FROM event_log GROUP BY resource, idcase HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT resource, idcase FROM event_log GROUP BY resource, idcase HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE resource = (SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log)))
SELECT idcase, resource, COUNT(*) AS num_activities FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE id IN (SELECT id FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1));
SELECT Para responder essa pergunta, precisamos analisar o esquema de banco de dados e identificar quais declaraÃ§Ãµes foram realizadas por um Ãºnico funcionÃ¡rio. No entanto, o esquema de banco de dados nÃ£o contÃ©m informaÃ§Ãµes sobre funcionÃ¡rios, apenas sobre eventos e recursos. Portanto, nÃ£o Ã© possÃ­vel responder essa pergunta com base no esquema fornecido. Se vocÃª tiver mais informaÃ§Ãµes sobre o banco de dados, como uma tabela de funcionÃ¡rios com um campo "nome" e uma tabela de relaÃ§Ãµes entre eventos e funcionÃ¡rios, poderÃ­amos ajudar a responder essa pergunta.
SELECT * FROM "event_log" WHERE "activity" = 'fim da viagem' AND "timestamp" BETWEEN '2016-01-01 00:00:00' AND '2017-12-31 23:59:59' AND "idcase" IS NOT NULL;
SELECT * FROM "event_log" WHERE "activity" = 'fim da viagem' AND "timestamp" BETWEEN '2016-01-01 00:00:00' AND '2017-12-31 23:59:59' AND "idcase" IS NOT NULL;
SELECT * FROM "event_log" WHERE "activity" = 'fim da viagem' AND "timestamp" BETWEEN '2016-01-01 00:00:00' AND '2017-12-31 23:59:59';
SELECT DISTINCT resource FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2016-01-01 00:00:00' AND '2017-12-31 23:59:59' AND resource LIKE 'processo%';
SELECT * FROM "event_log" WHERE "activity" = 'fim da viagem' AND "timestamp" BETWEEN '2016-01-01 00:00:00' AND '2017-12-31 23:59:59';
SELECT * FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2016-01-01 00:00:00' AND '2017-12-31 23:59:59';
SELECT * FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2016-01-01 00:00:00' AND '2017-12-31 23:59:59';
SELECT * FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2016-01-01 00:00:00' AND '2017-12-31 23:59:59';
SELECT * FROM "event_log" WHERE "activity" = 'fim da viagem' AND "timestamp" BETWEEN '2016-01-01 00:00:00' AND '2017-12-31 23:59:59';
SELECT * FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2016-01-01 00:00:00' AND '2017-12-31 23:59:59';
SELECT * FROM event_log WHERE activity = 'END_VIAGE' AND timestamp BETWEEN '2016-01-01 00:00:00' AND '2017-12-31 23:59:59';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeiÃ§Ã£o%' OR activity LIKE '%negado%' OR activity LIKE '%denegado%';
SELECT activity, COUNT(*) AS num_rejeicoes, SUM(cost) AS custo_total FROM event_log WHERE activity LIKE '%rejeiÃ§Ã£o%' AND idcase LIKE '%declaraÃ§Ã£o%' GROUP BY activity ORDER BY num_rejeicoes DESC;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT MIN(COUNT(*)) AS min_interventions, MAX(COUNT(*)) AS max_interventions FROM event_log WHERE cost > 0 GROUP BY activity
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(timestamp) AS inicio, MAX(CASE WHEN activity = 'fim da viagem' THEN timestamp WHEN activity LIKE '%declaraÃ§Ã£o rejeitada%' THEN timestamp WHEN activity LIKE '%pagamento efetuado%' THEN timestamp END) AS fim FROM event_log GROUP BY idcase
SELECT idcase, TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(CASE WHEN activity IN ('fim da viagem', 'declaraÃ§Ã£o rejeitada pelo funcionÃ¡rio', 'pagamento efetuado') THEN timestamp ELSE NULL END)) AS tempo_levar FROM event_log GROUP BY idcase
SELECT idcase, TIMESTAMPDIFF(SECOND, (SELECT MIN(timestamp) FROM event_log WHERE activity IN ('fim da viagem', 'declaraÃ§Ã£o rejeitada pelo funcionÃ¡rio', 'pagamento efetuado')), timestamp) AS tempo_decorrido FROM event_log ORDER BY tempo_decorrido;
WITH -- Identificamos as aÃ§Ãµes que indicam a finalizaÃ§Ã£o da declaraÃ§Ã£o, rejeiÃ§Ã£o da declaraÃ§Ã£o ou pagamento efetuado final_actions AS ( SELECT "id", "timestamp" FROM "event_log" WHERE "activity" IN ('FINALIZADA', 'REJEITADA', 'PAGO') ), -- Calculamos o tempo entre a primeira aÃ§Ã£o e as aÃ§Ãµes de finalizaÃ§Ã£o time_diff AS ( SELECT final_actions.id, final_actions.timestamp - (SELECT MIN("timestamp") FROM "event_log") AS time_diff FROM final_actions ) -- Mostramos o resultado SELECT * FROM time_diff;
SELECT idcase, MIN(timestamp) AS inicio, MAX(CASE WHEN activity IN ('fim da viagem','rejeitada', 'pagamento efetuado') THEN timestamp ELSE NULL END) AS fim FROM event_log GROUP BY idcase ORDER BY inicio;
SELECT idcase, MAX(CASE WHEN activity = 'fim da viagem' THEN timestamp END) AS fim_viagem, MAX(CASE WHEN activity IN ('declaraÃ§Ã£o rejeitada pelo funcionÃ¡rio', 'pagamento efetuado') THEN timestamp END) AS atividade_final, TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(CASE WHEN activity = 'fim da viagem' THEN timestamp END)) AS tempo_viagem FROM event_log GROUP BY idcase
SELECT el1.idcase AS caso, el1.activity AS atividade_final, TIMESTAMPDIFF(SECOND, el1.timestamp, el2.timestamp) AS tempo_levar FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase WHERE el1.activity IN ('fim da viagem', 'declaraÃ§Ã£o rejeitada pelo funcionÃ¡rio', 'pagamento efetuado') AND el2.activity IN ('fim da viagem', 'declaraÃ§Ã£o rejeitada pelo funcionÃ¡rio', 'pagamento efetuado') AND el1.timestamp < el2.timestamp ORDER BY tempo_levar;
SELECT el1.idcase, el1.activity AS final_activity, TIMESTAMPDIFF(SECOND, el1.timestamp, el2.timestamp) AS time_taken FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase WHERE el1.activity IN ('fim da viagem', 'declaraÃ§Ã£o rejeitada pelo funcionÃ¡rio', 'pagamento efetuado') AND el2.activity = 'fim da viagem' OR el2.activity = 'declaraÃ§Ã£o rejeitada pelo funcionÃ¡rio' OR el2.activity = 'pagamento efetuado' AND el1.timestamp < el2.timestamp ORDER BY el1.idcase;
WITH event_log AS ( SELECT idcase, activity, timestamp, LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS prev_timestamp FROM event_log ) SELECT el.idcase, el.activity, TIMESTAMPDIFF(SECOND, el.prev_timestamp, el.timestamp) AS time_diff FROM event_log el WHERE el.activity IN ('fim da viagem', 'declaraÃ§Ã£o rejeitada pelo funcionÃ¡rio', 'pagamento efetuado') ORDER BY el.idcase, el.activity;
SELECT TIMESTAMPDIFF(SECOND, (SELECT MIN(timestamp) FROM event_log WHERE activity = 'INICIADO_PROCESSAMENTO' AND idcase = 'declaracao_x'), (SELECT MAX(timestamp) FROM event_log WHERE activity IN ('VIAGEM_REGISTRADA', 'REJEITADA', 'PAGAMENTO_EFETUADO') AND idcase = 'declaracao_x')) AS tempo_processamento FROM event_log WHERE idcase = 'declaracao_x';
SELECT * FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento';
SELECT * FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento';
SELECT * FROM event_log WHERE activity = 'payment_request';
SELECT * FROM event_log WHERE activity LIKE '%requisiÃ§Ã£o de pagamento para declaraÃ§Ãµes%';
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (ORDER BY timestamp))) AS avg_duration FROM event_log;
SELECT activity, AVG(DATEDIFF(SECOND, '1970-01-01 00:00:00', timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(SECOND, '1970-01-01 00:00:00', timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(SECOND, '1970-01-01 00:00:00', timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity ORDER BY avg_duration;
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity ORDER BY avg_duration;
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(SECOND, '1970-01-01 00:00:00', timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(SECOND, '1970-01-01 00:00:00', timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(SECOND, '1970-01-01 00:00:00', timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(SECOND, '1970-01-01 00:00:00', timestamp)) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity ORDER BY avg_duration;
SELECT activity, AVG(TIMESTAMPDIFF(SECOND, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp), timestamp)) AS avg_duration FROM event_log GROUP BY activity;
SELECT idcase, MAX(cost) AS max_cost FROM event_log GROUP BY idcase;
SELECT idcase, MAX(cost) AS max_cost FROM event_log GROUP BY idcase ORDER BY max_cost DESC;
SELECT idcase, MAX(cost) AS max_cost FROM event_log GROUP BY idcase;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ORDER BY total_cost DESC LIMIT 10;
SELECT activity, MAX(cost) AS max_cost FROM event_log GROUP BY activity ORDER BY max_cost DESC;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 1;
SELECT activity, MAX(cost) AS max_cost FROM event_log GROUP BY activity ORDER BY max_cost DESC;
SELECT activity, MAX(cost) AS max_cost FROM event_log GROUP BY activity;
SELECT activity, MAX(cost) AS max_cost FROM event_log GROUP BY activity;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log ORDER BY cost DESC LIMIT 1;
SELECT * FROM event_log ORDER BY cost DESC;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 1;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log ORDER BY cost DESC;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 1;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log ORDER BY cost DESC LIMIT 10;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 1;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log ORDER BY cost DESC LIMIT 10;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem';
SELECT * FROM event_log WHERE activity = 'INICIO_VIAGEM';
SELECT * FROM event_log WHERE activity LIKE '%inÃ­cio de viagem%' OR activity LIKE '%inicio de viagem%' OR activity LIKE '%start of trip%' OR activity LIKE '%start trip%';
SELECT activity, COUNT(*) as total_registers FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) as total_executions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) as num_executions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY activity ORDER BY activity;
SELECT activity, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as quantidade_execucoes FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS quantidade_intervencoes FROM event_log GROUP BY activity ORDER BY quantidade_intervencoes DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as quantidade_intervencoes FROM event_log GROUP BY activity ORDER BY quantidade_intervencoes DESC;
SELECT activity, COUNT(*) AS quantidade_intervencoes FROM event_log GROUP BY activity ORDER BY quantidade_intervencoes DESC;
SELECT activity, COUNT(*) AS quantidade_intervencoes FROM event_log WHERE idcase = 'declaraÃ§Ã£o' -- ajuste o valor para o tipo de aÃ§Ã£o desejado GROUP BY activity;
SELECT activity, COUNT(*) as quantidade_intervencoes FROM event_log WHERE resource LIKE '%declaraÃ§Ã£o%' -- ajuste para incluir apenas as declaraÃ§Ãµes GROUP BY activity ORDER BY quantidade_intervencoes DESC;
SELECT activity, COUNT(*) AS num_intervencoes FROM event_log GROUP BY activity ORDER BY num_intervencoes DESC;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT activity, cost, resource, idcase FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o%' -- ajuste para incluir apenas as intervenÃ§Ãµes relacionadas a declaraÃ§Ãµes ORDER BY cost DESC;
SELECT idcase, activity, cost, timestamp FROM event_log WHERE activity LIKE '%processamento de declaraÃ§Ãµes%' ORDER BY cost DESC;
SELECT * FROM event_log WHERE activity = 'permissÃ£o';
SELECT * FROM event_log WHERE activity = 'permissÃ£o';
SELECT * FROM event_log WHERE activity = 'permissÃ£o';
SELECT * FROM event_log WHERE activity = 'permissÃ£o';
SELECT * FROM event_log WHERE activity = 'permissÃ£o';
SELECT * FROM event_log WHERE activity = 'permissÃ£o';
SELECT el.activity, el.resource, el.idcase FROM event_log el WHERE el.activity = 'permissÃ£o';
SELECT * FROM event_log WHERE activity = 'permissÃ£o';
SELECT * FROM event_log WHERE activity = 'permissÃ£o';
SELECT * FROM event_log WHERE activity = 'permissÃ£o';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permission%' OR activity LIKE '%grant%';
SELECT activity, resource, idcase FROM event_log WHERE activity LIKE '%permission%' OR activity LIKE '%access%';
SELECT MAX("cost") AS "Maior valor de custo" FROM "event_log";
SELECT MAX("cost") AS "Maior Valor de Custo" FROM "event_log";
SELECT MAX("cost") AS "Maior Custo" FROM "event_log";
SELECT MAX("cost") AS "maior_custo" FROM "event_log";
SELECT MAX("cost") AS "Maior Custo" FROM "event_log";
SELECT MAX(cost) AS max_cost FROM event_log;
SELECT * FROM event_log WHERE resource LIKE '%Sara%' AND resource LIKE '%Thomas%';
SELECT * FROM event_log WHERE "resource" = 'Sara' OR "resource" = 'Thomas' GROUP BY "idcase" HAVING COUNT(DISTINCT "resource") = 2;
SELECT DISTINCT "idcase" FROM "event_log" WHERE "resource" IN ('Sara', 'Thomas');
SELECT DISTINCT idcase FROM event_log WHERE resource LIKE '%Sara%' AND resource LIKE '%Thomas%';
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas') GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2;
SELECT * FROM event_log WHERE activity LIKE '%Sara%' AND activity LIKE '%Thomas%';
SELECT resource, COUNT(*) AS quantidade_declaracoes_rejeitadas FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o' GROUP BY resource;
SELECT resource, COUNT(*) AS num_activities FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o%' GROUP BY resource;
SELECT resource, COUNT(*) AS quantidade_declaracoes_rejeitadas FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o' GROUP BY resource;
SELECT resource, COUNT(*) AS quantidade_atividades FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o%' GROUP BY resource;
SELECT resource, COUNT(*) AS num_executions FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o' GROUP BY resource;
SELECT resource, COUNT(*) AS quantidade_execucoes FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o' GROUP BY resource;
SELECT resource, COUNT(*) AS quantidade_de_vezes FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o' GROUP BY resource;
SELECT resource, COUNT(*) AS quantidade_execucoes FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o' GROUP BY resource;
SELECT resource, COUNT(*) AS quantidade_execucoes FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o%' GROUP BY resource
SELECT idcase, COUNT(*) AS rejeicoes FROM event_log WHERE activity = 'REJEITAR' AND resource LIKE '%ADMINISTRADOR%' GROUP BY idcase ORDER BY rejeicoes DESC;
SELECT resource, idcase, COUNT(*) AS num_activities FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o' GROUP BY resource, idcase;
SELECT resource, idcase, COUNT(*) AS num_activities FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o%' GROUP BY resource, idcase;
SELECT resource, idcase, COUNT(*) AS num_activities FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o%' GROUP BY resource, idcase;
SELECT "resource", "idcase", COUNT(*) AS "quantidade_execucoes" FROM "event_log" WHERE "activity" = 'declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o' GROUP BY "resource", "idcase";
SELECT resource, idcase, COUNT(*) AS quantidade_execucoes FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o' GROUP BY resource, idcase;
SELECT resource, COUNT(*) AS quantidade_execucoes FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o' GROUP BY resource;
SELECT "resource", "idcase", COUNT(*) AS "nÃºmero de instÃ¢ncias" FROM "event_log" WHERE "activity" = 'declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o' GROUP BY "resource", "idcase" ORDER BY "resource", "idcase";
SELECT "resource", "idcase", COUNT(*) AS "quantidade_execucoes" FROM "event_log" WHERE "activity" = 'declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o' GROUP BY "resource", "idcase"
SELECT "resource", "idcase", COUNT(*) AS "quantidade_de_eventos" FROM "event_log" WHERE "activity" LIKE '%declaraÃ§Ã£o rejeitada pela administraÃ§Ã£o%' AND "idcase" IS NOT NULL GROUP BY "resource", "idcase"
SELECT e.idcase, e.activity, e.resource, COUNT(*) AS num_rejeicoes FROM event_log e WHERE e.activity = 'REJEITAR DECLARAÃÃO' AND e.resource LIKE '%ADMINISTRADOR%' GROUP BY e.idcase, e.activity, e.resource ORDER BY num_rejeicoes DESC;
SELECT AVG("cost") AS media_custo FROM "event_log" WHERE "activity" NOT IN ('inÃ­cio da viagem', 'fim da viagem');
SELECT AVG("cost") AS media_custo FROM "event_log" WHERE "activity" NOT IN ('inÃ­cio da viagem', 'fim da viagem');
SELECT AVG("cost") AS "custo_medio" FROM "event_log" WHERE "activity" NOT IN ('inÃ­cio da viagem', 'fim da viagem');
SELECT AVG("cost") AS media_custo FROM "event_log" WHERE "activity" NOT IN ('inÃ­cio da viagem', 'fim da viagem');
SELECT AVG("cost") AS "custo_medio" FROM "event_log" WHERE "activity" NOT IN ('inÃ­cio da viagem', 'fim da viagem');
SELECT AVG("cost") AS media_custo FROM "event_log" WHERE "activity" NOT IN ('inÃ­cio da viagem', 'fim da viagem');
SELECT AVG("cost") AS "custo_medio" FROM "event_log" WHERE "activity" NOT IN ('inÃ­cio da viagem', 'fim da viagem');
SELECT AVG("cost") AS media_custo FROM "event_log" WHERE "activity" NOT IN ('inÃ­cio da viagem', 'fim da viagem');
SELECT AVG("cost") AS media_custo FROM "event_log" WHERE "activity" NOT IN ('inÃ­cio da viagem', 'fim da viagem');
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity NOT IN ('viagem_inicio', 'viagem_fim')
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity ORDER BY total_cost DESC LIMIT 5;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase, COUNT(*) as quantidade_eventos FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(DISTINCT activity) > 1;
SELECT COUNT(*) AS "count", "idcase" FROM "event_log" GROUP BY "idcase" HAVING COUNT(*) > 1;
SELECT idcase, COUNT(*) AS ocorrencias FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT DISTINCT "idcase", COUNT(*) AS "ocorrÃªncias" FROM "event_log" GROUP BY "idcase" HAVING COUNT(*) > 1;
SELECT idcase, COUNT(*) AS num_occurrences FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 1;
SELECT activity, resource, cost, timestamp FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT activity, timestamp, resource, cost, idcase FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM "event_log" WHERE "timestamp" BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM "event_log" WHERE "timestamp" BETWEEN '2018-09-30 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59' ORDER BY timestamp;
SELECT * FROM "event_log" WHERE "timestamp" BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE resource COLLATE NOCASE LIKE 'M%';
SELECT * FROM event_log WHERE resource COLLATE NOCASE LIKE 'M%';
SELECT * FROM event_log WHERE resource LIKE 'M%';
SELECT * FROM event_log WHERE resource COLLATE NOCASE LIKE 'M%';
SELECT * FROM event_log WHERE resource COLLATE NOCASE LIKE 'M%';
SELECT activity, timestamp, resource, cost, idcase FROM event_log WHERE resource COLLATE NOCASE LIKE 'M%';
SELECT activity FROM event_log WHERE activity LIKE 'M%' AND idcase LIKE 'M%';
SELECT el.* FROM event_log el JOIN employees e ON el.idcase = e.id WHERE e.name LIKE 'M%';
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 5 ORDER BY count DESC;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 5 ORDER BY count DESC;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5 ORDER BY COUNT(*) DESC;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 5 ORDER BY count DESC;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT idcase, activity, COUNT(*) as count FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT idcase, activity, COUNT(*) as ocorrencias FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3 ORDER BY idcase, ocorrencias DESC;
SELECT idcase, activity, COUNT(*) AS num_events FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 ) ORDER BY activity;
SELECT DISTINCT el.activity FROM event_log el JOIN ( SELECT idcase, COUNT(*) as count FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 ) as cases ON el.idcase = cases.idcase ORDER BY count DESC;
SELECT el.idcase, el.activity, COUNT(*) as count FROM event_log el GROUP BY el.idcase, el.activity HAVING COUNT(*) > 3 ORDER BY el.idcase, count DESC;
SELECT idcase, activity, COUNT(*) as ocorrencias FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3 ORDER BY idcase, ocorrencias DESC;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase, activity, COUNT(*) as count FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3 ORDER BY count DESC;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaraÃ§Ã£o 56300';
SELECT SUM(cost) AS total_cost FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o%' AND idcase = '56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaraÃ§Ã£o 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaraÃ§Ã£o 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaraÃ§Ã£o 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaraÃ§Ã£o 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = '56300';
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' AND activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' AND activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as quantidade_execucoes FROM event_log WHERE timestamp < '2017-01-10' AND activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) GROUP BY activity;
SELECT activity, COUNT(*) as quantidade_execucoes FROM event_log WHERE timestamp < '2017-01-10' AND activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) GROUP BY activity;
SELECT activity, COUNT(*) as quantidade_execucoes FROM event_log WHERE timestamp < '2017-01-10' AND activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) GROUP BY activity;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY frequency DESC;
SELECT activity, COUNT(*) as quantidade_execucoes FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY quantidade_execucoes DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) AS quantidade_execucoes FROM event_log WHERE timestamp < '2017-01-10' AND id IN ( SELECT id FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) GROUP BY activity
SELECT resource, COUNT(*) AS num_cases FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_instances FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(*) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(*) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(*) AS "Quantidade de casos" FROM event_log GROUP BY resource ORDER BY "Quantidade de casos" DESC;
SELECT resource, COUNT(id) AS num_cases FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_instances FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_instances FROM event_log GROUP BY resource
SELECT c.name, COUNT(d.id) AS num_declarations FROM "collaborators" c JOIN "declarations" d ON c.id = d.collaborator_id GROUP BY c.name
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_allocations FROM event_log WHERE activity = 'alocar' -- substitua por 'alocar' ou o valor correto da atividade que vocÃª deseja contar GROUP BY resource
SELECT resource, COUNT(*) AS "quantidade_vezes" FROM event_log GROUP BY resource ORDER BY quantidade_vezes DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as num_occurrences FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_times FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as num_occurrences FROM event_log GROUP BY resource;
SELECT f.nome, COUNT(el.id) AS num_intervencoes FROM event_log el JOIN funcionarios f ON el.idcase = f.id GROUP BY f.nome
SELECT DISTINCT "idcase" FROM "event_log" WHERE "resource" IN ('Thomas', 'Diana', 'Sara');
SELECT * FROM "event_log" WHERE "resource" IN ('Thomas', 'Diana', 'Sara');
SELECT DISTINCT "idcase" FROM "event_log" WHERE "resource" IN ('Thomas', 'Diana', 'Sara');
SELECT * FROM event_log WHERE resource = 'Thomas' OR resource = 'Diana' OR resource = 'Sara';
SELECT * FROM event_log WHERE activity LIKE '%Thomas%' OR activity LIKE '%Diana%' OR activity LIKE '%Sara%';
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_casos FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_casos FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(*) AS num_instances FROM event_log WHERE timestamp BETWEEN '2017-05-01 00:00:00' AND '2017-06-01 00:00:00' GROUP BY resource
SELECT resource, COUNT(*) AS num_instances FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
CREATE TEMP TABLE temp_activities AS SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY idcase;
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource HAVING COUNT(*) > 0;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource ORDER BY num_cases DESC;
SELECT f.name, COUNT(*) AS "quantidade_declaracoes" FROM event_log el JOIN funcionarios f ON el.idcase = f.idcase WHERE el.timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY f.name
SELECT DISTINCT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa') ORDER BY activity, resource;
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT DISTINCT activity, resource FROM event_log WHERE resource NOT LIKE '%Joshua%' AND resource NOT LIKE '%Teresa%' ORDER BY activity, resource;
SELECT DISTINCT e.activity, f.name FROM event_log e JOIN funcionario f ON e.idcase = f.id WHERE e.activity LIKE '%intervenÃ§Ã£o%' AND e.idcase NOT IN ( SELECT idcase FROM event_log WHERE activity LIKE '%Joshua%' OR activity LIKE '%Teresa%' ) ORDER BY e.activity, f.name;
SELECT activity FROM event_log WHERE resource NOT LIKE '%joshua%' AND resource NOT LIKE '%teresa%' AND activity LIKE '%declaraÃ§Ãµes%';
SELECT * FROM "event_log" WHERE activity IN ('inÃ­cio da viagem', 'fim da viagem') AND NOT EXISTS ( SELECT 1 FROM "event_log" AS log2 WHERE log2.idcase = "event_log".idcase AND log2.activity IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') )
SELECT * FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'fim da viagem') AND NOT EXISTS ( SELECT 1 FROM event_log WHERE activity IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') AND idcase = event_log.idcase )
SELECT idcase FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'fim da viagem') AND activity NOT IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado')
SELECT * FROM "event_log" WHERE activity IN ('inÃ­cio da viagem', 'fim da viagem') AND NOT EXISTS ( SELECT 1 FROM "event_log" WHERE activity IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') AND "idcase" = "event_log"."idcase" )
SELECT * FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'fim da viagem') AND NOT (activity ='requisiÃ§Ã£o de pagamento' OR activity = 'pagamento efetuado');
SELECT * FROM event_log WHERE activity IN ('iniciada', 'finalizada') AND cost IS NULL;
SELECT idcase FROM event_log WHERE activity IN ('start_trip', 'end_trip') AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity IN ('payment_request', 'payment_effectuation') ) GROUP BY idcase HAVING COUNT(CASE WHEN activity IN ('start_trip', 'end_trip') THEN 1 ELSE NULL END) > 1 AND COUNT(CASE WHEN activity IN ('payment_request', 'payment_effectuation') THEN 1 ELSE NULL END) = 0;
SELECT * FROM "event_log" WHERE "activity" IN ('start', 'end') -- verifica se Ã© inÃ­cio ou fim da viagem AND "cost" IS NULL -- verifica se nÃ£o hÃ¡ registro de pagamento AND NOT EXISTS ( SELECT 1 FROM "event_log" WHERE "idcase" = "event_log"."idcase" -- verifica se hÃ¡ outro registro com o mesmo idcase AND "activity" = 'payment' -- verifica se Ã© um registro de pagamento )
SELECT * FROM "event_log" WHERE "activity" NOT IN ('viagem_inicio', 'viagem_fim') OR "cost" IS NULL;
SELECT * FROM "event_log" WHERE "activity" IN ('start', 'end') AND ("activity" NOT IN ('payment_request', 'payment') OR "cost" IS NULL)
SELECT * FROM event_log WHERE resource IS NULL OR resource = '';
SELECT * FROM event_log WHERE resource = '' OR resource IS NULL;
SELECT activity FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL OR resource = '';
SELECT * FROM event_log WHERE resource IS NULL;
SELECT activity FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE activity LIKE '%funcionario%' AND idcase IS NULL OR idcase = '';
SELECT DISTINCT idcase FROM event_log WHERE timestamp >= '2017-03-01' AND timestamp <= '2017-03-31' ORDER BY idcase;
SELECT * FROM event_log WHERE DATE(timestamp) < '2017-03-01';
SELECT * FROM event_log WHERE activity = 'first' AND timestamp < '2017-03-01 00:00:00'
SELECT * FROM event_log WHERE DATE(timestamp) < '2017-03-01';
SELECT idcase, MIN(timestamp) AS first_log_date FROM event_log WHERE timestamp < '2017-03-01 00:00:00' GROUP BY idcase
SELECT DISTINCT "resource" FROM "event_log" WHERE "activity" = 'first_execution' -- suponha que "first_execution" seja o valor que indica a primeira execuÃ§Ã£o de atividade AND "timestamp" < '2017-03-01' -- marÃ§o de 2017 ORDER BY "resource";
SELECT * FROM event_log WHERE timestamp < '2017-03-01 00:00:00';
SELECT activity FROM event_log WHERE timestamp < '2017-03-01' AND id = (SELECT MIN(id) FROM event_log);
SELECT * FROM event_log WHERE timestamp < '2017-03-01' AND activity LIKE '%intervenÃ§Ã£o%';
SELECT * FROM event_log WHERE DATE(timestamp) < '2017-03-01';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'inicio da viagem' AND EXTRACT(MONTH FROM timestamp) = 3 AND EXTRACT(YEAR FROM timestamp) = 2017 AND idcase IS NOT NULL;
SELECT idcase, timestamp FROM event_log WHERE activity = 'inicio da viagem' AND timestamp BETWEEN '2017-03-01 00:00:00' AND '2017-03-31 23:59:59' GROUP BY idcase ORDER BY timestamp ASC LIMIT 1;
SELECT * FROM event_log WHERE activity = 'inicio da viagem' AND timestamp >= '2017-03-01 00:00:00' AND timestamp < '2017-04-01 00:00:00' AND idcase IS NOT NULL;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'inicio da viagem' AND SUBSTRING(timestamp, 1, 7) = '2017-03-01' ORDER BY id LIMIT 1;
WITH ranked_events AS ( SELECT id, activity, timestamp, resource, cost, idcase, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp) AS row_num FROM event_log WHERE activity = 'inicio da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' ) SELECT id FROM ranked_events WHERE row_num = 1;
SELECT DISTINCT id FROM event_log WHERE activity = 'inicio da viagem' AND timestamp BETWEEN '2017-03-01 00:00:00' AND '2017-03-31 23:59:59' AND id NOT IN ( SELECT id FROM event_log WHERE activity!= 'inicio da viagem' GROUP BY id HAVING MIN(timestamp) > '2017-03-01 00:00:00' )
SELECT * FROM "event_log" WHERE "activity" LIKE '%inÃ­cio da viagem%' AND "timestamp" >= '2017-03-01 00:00:00' AND "timestamp" < '2017-04-01 00:00:00';
SELECT resource, COUNT(*) AS frequency FROM event_log WHERE idcase IS NOT NULL GROUP BY resource HAVING COUNT(*) > 5;
SELECT resource, idcase, COUNT(*) AS frequency FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT resource, COUNT(*) AS frequency FROM event_log WHERE idcase IS NOT NULL GROUP BY resource HAVING COUNT(*) > 5;
SELECT DISTINCT resource FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase, resource HAVING COUNT(*) > 5 ) ORDER BY resource;
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT DISTINCT resource FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 5 )
SELECT DISTINCT resource FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 5 )
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource HAVING COUNT(*) > 5;
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource HAVING COUNT(*) > 5;
SELECT idcase, COUNT(*) AS num_intervencoes FROM event_log GROUP BY idcase HAVING COUNT(*) > 5
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource HAVING COUNT(*) > 5 ORDER BY count DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'declaraÃ§Ã£o final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'declaraÃ§Ã£o final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT f.nome, SUM(el.cost) AS total_cost FROM event_log el JOIN funcionarios f ON el.idcase = f.idcase WHERE el.activity = 'aprovacao' AND el.resource ='supervisor' GROUP BY f.nome ORDER BY total_cost DESC LIMIT 10;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'declaraÃ§Ã£o final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) as frequency FROM event_log WHERE activity = 'declaraÃ§Ã£o final aprovada pelo supervisor' GROUP BY resource ORDER BY frequency DESC;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'declaraÃ§Ã£o final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'declaraÃ§Ã£o final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC;
SELECT f.nome, SUM(el.cost) AS total_cost FROM event_log el JOIN funcionarios f ON el.idcase = f.id WHERE el.activity LIKE '%aprovacao%' AND el.resource LIKE '%supervisor%' GROUP BY f.nome ORDER BY total_cost DESC;
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pelo responsÃ¡vel pelo orÃ§amento' AND (resource = 'Eugene' OR resource = 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pelo responsÃ¡vel pelo orÃ§amento' AND (resource = 'Eugene' OR resource = 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pelo responsÃ¡vel pelo orÃ§amento' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pelo responsÃ¡vel pelo orÃ§amento' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pelo responsÃ¡vel pelo orÃ§amento' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pelo responsÃ¡vel pelo orÃ§amento' AND (resource = 'Eugine' OR resource = 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pelo responsÃ¡vel pelo orÃ§amento' AND resource IN ('Eugine', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%aprovou%' AND resource LIKE '%Eugene%' OR resource LIKE '%Marie%';
SELECT COUNT(*) FROM event_log WHERE activity = 'APROVADO' AND (resource LIKE '%Eugene%' OR resource LIKE '%Marie%');
SELECT DISTINCT el1.activity FROM event_log el1 WHERE el1.idcase = 'declaraÃ§Ã£o 49464' AND NOT EXISTS ( SELECT 1 FROM event_log el2 WHERE el2.idcase = 'declaraÃ§Ã£o 76667' AND el1.activity = el2.activity )
SELECT activity FROM event_log WHERE idcase = 'declaraÃ§Ã£o 49464' AND activity NOT IN ( SELECT activity FROM event_log WHERE idcase = 'declaraÃ§Ã£o 76667' )
SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaraÃ§Ã£o 49464' AND activity NOT IN ( SELECT activity FROM event_log WHERE idcase = 'declaraÃ§Ã£o 76667' )
SELECT Um desafio! Infelizmente, nÃ£o hÃ¡ informaÃ§Ãµes suficientes para responder essa pergunta, pois nÃ£o hÃ¡ nenhuma declaraÃ§Ã£o 49464 ou 76667 mencionada no esquema de banco de dados fornecido. O esquema de banco de dados apenas define a estrutura da tabela "event_log", mas nÃ£o hÃ¡ nenhuma informaÃ§Ã£o sobre as declaraÃ§Ãµes 49464 e 76667. Se vocÃª puder fornecer mais contexto ou informaÃ§Ãµes sobre essas declaraÃ§Ãµes, posso tentar ajudar a responder sua pergunta.
SELECT resource, COUNT(*) AS num_vezes FROM event_log WHERE activity = 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio' GROUP BY resource HAVING COUNT(*) > 2;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio' GROUP BY resource HAVING COUNT(*) > 2;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio' GROUP BY resource HAVING COUNT(*) > 2;
SELECT resource, COUNT(*) as quantidade FROM event_log WHERE activity = 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio' GROUP BY resource HAVING COUNT(*) > 2;
SELECT resource, COUNT(*) AS "NÃºmero de vezes" FROM event_log WHERE activity = 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio' GROUP BY resource HAVING COUNT(*) > 2;
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity = 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio' GROUP BY resource HAVING COUNT(*) > 2;
SELECT f.name, COUNT(*) AS "quantidade_de_requisicoes" FROM event_log el JOIN funcionarios f ON el.idcase = f.idcase WHERE el.activity ='requisitar declaraÃ§Ã£o' GROUP BY f.name HAVING COUNT(*) > 2;
SELECT * FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento' AND timestamp >= '2017-05-01 00:00:00' AND timestamp < '2017-05-11 00:00:00';
SELECT DISTINCT "resource" FROM "event_log" WHERE "activity" ='requisiÃ§Ã£o de pagamento' AND EXTRACT(MONTH FROM "timestamp") = 5 AND EXTRACT(DAY FROM "timestamp") <= 10 AND EXTRACT(YEAR FROM "timestamp") = 2017;
SELECT DISTINCT idcase FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT idcase FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento' AND timestamp BETWEEN '2017-05-01 00:00:00' AND '2017-05-10 23:59:59' AND idcase IS NOT NULL;
SELECT DISTINCT idcase FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento' AND timestamp BETWEEN '2017-05-01 00:00:00' AND '2017-05-10 23:59:59';
SELECT * FROM "event_log" WHERE "timestamp" BETWEEN '2017-05-01' AND '2017-05-10' AND "activity" LIKE '%payment%' AND "idcase" LIKE '%case%';
SELECT * FROM "event_log" WHERE "activity" LIKE '%requisiÃ§Ã£o de pagamento%' AND "timestamp" BETWEEN '2017-05-01 00:00:00' AND '2017-05-10 23:59:59';
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT idcase, COUNT(resource) AS quantidade_recursos FROM event_log GROUP BY idcase;
SELECT idcase, resource, COUNT(*) AS num_resources FROM event_log GROUP BY idcase, resource
SELECT idcase, COUNT(DISTINCT resource) AS quantidade_recursos FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, SUM(CASE WHEN resource IS NOT NULL THEN cost ELSE 0 END) AS total_resource_cost FROM event_log GROUP BY idcase
SELECT activity, COUNT(*) AS num_funcionarios FROM event_log GROUP BY activity
SELECT * FROM event_log WHERE activity = 'Tratado' AND idcase IN ( SELECT idcase FROM event_log WHERE username = 'Christopher' )
SELECT idcase FROM event_log WHERE activity = 'CASE_CLOSED' AND username = 'Christopher';
SELECT * FROM event_log WHERE idcase = 'Christopher';
SELECT * FROM event_log WHERE resource = 'Christopher' GROUP BY activity HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log);
SELECT * FROM event_log WHERE resource = 'Christopher' AND idcase IS NULL;
SELECT * FROM event_log WHERE activity LIKE '%Christopher%';
SELECT el.* FROM event_log el JOIN cases c ON el.idcase = c.idcase WHERE el.activity ='Christopher' AND c.status = 'fechado'
SELECT * FROM "event_log" WHERE "activity" IN ( SELECT "activity" FROM "employee" WHERE "name" = 'Christopher' );
SELECT resource, SUM(cost) AS total_cost FROM event_log GROUP BY resource HAVING SUM(cost) = 0;
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) = COUNT(*)
SELECT resource, idcase FROM event_log GROUP BY resource, idcase HAVING COUNT(DISTINCT id) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log)
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT c.name, e.activity, e.timestamp, e.resource, e.cost, e.idcase FROM event_log e JOIN collaborators c ON e.idcase = c.id GROUP BY c.name, e.activity, e.timestamp, e.resource, e.cost, e.idcase HAVING COUNT(DISTINCT e.id) = 1;
SELECT DISTINCT "resource" AS "Processo", "idcase" AS "FuncionÃ¡rio" FROM "event_log" WHERE "activity" LIKE '%processo%' -- ajuste para o tipo de atividade que vocÃª estÃ¡ procurando ORDER BY "FuncionÃ¡rio", "Processo";
SELECT "idcase" AS funcionario, COUNT(*) AS num_decl FROM "event_log" GROUP BY "idcase" HAVING COUNT(*) = 1;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE timestamp >= DATE_TRUNC('day', timestamp) GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT DISTINCT idcase FROM event_log WHERE timestamp >= DATE('now') - INTERVAL 1 DAY GROUP BY idcase HAVING COUNT(*) > 1;
SELECT DISTINCT idcase FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) as num_interventions FROM event_log WHERE timestamp >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 DAY) GROUP BY activity HAVING COUNT(*) > 1;
SELECT COUNT(*) AS num_interventions, DATE(timestamp) AS date FROM event_log GROUP BY DATE(timestamp) HAVING COUNT(*) > 1;
SELECT resource, idcase, COUNT(*) AS num_events FROM event_log WHERE cost IS NULL GROUP BY resource, idcase;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE cost IS NULL GROUP BY resource
SELECT "idcase", "resource", COUNT(*) AS "quantidade_eventos" FROM "event_log" WHERE "cost" IS NULL GROUP BY "idcase", "resource"
SELECT resource, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY resource
SELECT resource, COUNT(*) AS num_events, SUM(CASE WHEN cost IS NULL THEN 1 ELSE 0 END) AS num_null_cost_events FROM event_log GROUP BY resource
SELECT el.idcase AS "Processo", el.resource AS "Colaborador", COUNT(*) AS "Quantidade de eventos de custo nulo" FROM event_log el WHERE el.cost IS NULL GROUP BY el.idcase, el.resource
SELECT el.idcase, COUNT(*) AS num_intervencoes_sem_custo FROM event_log el WHERE el.cost IS NULL GROUP BY el.idcase ORDER BY num_intervencoes_sem_custo DESC;
SELECT idcase, COUNT(*) AS num_intervencoes_sem_custo FROM event_log WHERE cost IS NULL OR cost = 0 GROUP BY idcase;
SELECT * FROM event_log WHERE activity = 'permissÃ£o rejeitada pelo diretor';
SELECT * FROM "event_log" WHERE "activity" = 'permissÃ£o rejeitada pelo diretor';
SELECT * FROM event_log WHERE activity = 'permissÃ£o rejeitada pelo diretor';
SELECT * FROM event_log WHERE activity = 'permissÃ£o rejeitada pelo diretor';
SELECT * FROM event_log WHERE activity = 'permissao rejeitada pelo diretor';
SELECT * FROM event_log WHERE activity = 'permissÃ£o rejeitada pelo diretor';
SELECT * FROM event_log WHERE activity LIKE '%permissao rejeitada%' AND resource LIKE '%diretor%';
SELECT * FROM event_log WHERE activity LIKE '%permission rejection%' AND idcase = '<director_case_id>';
SELECT DATE(timestamp) AS data, SUM(cost) AS custo_total FROM event_log GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, SUM(cost) AS custo_total FROM event_log GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, SUM(cost) AS custo_total FROM event_log GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS dia, SUM(cost) AS custo_total FROM event_log GROUP BY DATE(timestamp) ORDER BY dia;
SELECT DATE(timestamp) AS data, SUM(cost) AS custo_total FROM event_log GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, SUM(cost) AS soma_custo FROM event_log GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, SUM(cost) AS soma_eventos FROM event_log GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, SUM(cost) AS custo_total FROM event_log GROUP BY DATE(timestamp) ORDER BY data;
SELECT * FROM "event_log" WHERE "cost" > 1000 AND "resource" LIKE '%supervisor%' OR "resource" LIKE '%diretor%';
SELECT * FROM event_log WHERE activity IN ('execuÃ§Ã£o', 'alteraÃ§Ã£o') AND cost > 1000;
SELECT el.activity, el.timestamp, el.resource, el.cost FROM event_log el JOIN users u ON el.idcase = u.idcase WHERE el.cost > 1000 AND u.role IN ('supervisor', 'diretor') ORDER BY el.cost DESC;
SELECT activity FROM event_log WHERE activity LIKE '%supervisor%' OR activity LIKE '%director%' AND cost > 1000;
SELECT * FROM "event_log" WHERE "cost" > 1000 AND ("resource" LIKE '%supervisor%' OR "resource" LIKE '%diretor%');
SELECT * FROM event_log WHERE activity IN ('supervisor', 'diretor') AND cost > 1000;
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY idcase;
SELECT "resource", COUNT(*) AS "quantidade_eventos" FROM "event_log" GROUP BY "resource"
SELECT idcase, COUNT(*) AS num_intervencoes FROM event_log GROUP BY idcase;
SELECT resource, COUNT(*) AS num_tasks FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS quantidade_atividades FROM event_log GROUP BY resource ORDER BY quantidade_atividades DESC;
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT resource, COUNT(*) AS quantidade_tarefas FROM event_log GROUP BY resource ORDER BY quantidade_tarefas DESC;
SELECT "idcase", COUNT(*) AS "number_of_actions" FROM "event_log" GROUP BY "idcase";
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity LIKE '%Alexis%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE idcase LIKE '%Alexis%' GROUP BY idcase ORDER BY num_activities DESC;
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity LIKE '%Alexis%' -- Filtra apenas as atividades que envolvem a Alexis GROUP BY idcase;
SELECT idcase, COUNT(*) AS quantidade_atividades FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT el.idcase AS caso, COUNT(*) AS quantidade_atividades FROM event_log el WHERE el.activity LIKE '%Alexis%' -- Filtra apenas as atividades de Alexis GROUP BY el.idcase -- Agrupa por caso ORDER BY caso;
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE idcase = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_actions, GROUP_CONCAT(DISTINCT activity) AS activities FROM event_log WHERE idcase LIKE '%Alexis%' GROUP BY idcase ORDER BY num_actions DESC;
SELECT COUNT(*) FROM event_log WHERE activity = 'permissÃ£o final aprovada pelo supervisor' AND EXISTS ( SELECT 1 FROM event_log AS prev_event WHERE prev_event.id < event_log.id AND prev_event.activity = 'inÃ­cio da viagem' );
SELECT COUNT(*) FROM event_log WHERE activity = 'permissÃ£o final aprovada pelo supervisor' AND EXISTS ( SELECT 1 FROM event_log AS prev_event WHERE prev_event.activity = 'inÃ­cio da viagem' AND prev_event.timestamp < event_log.timestamp )
SELECT COUNT(*) FROM "event_log" WHERE "activity" = 'permissÃ£o final aprovada pelo supervisor' AND EXISTS ( SELECT 1 FROM "event_log" WHERE "activity" = 'inÃ­cio da viagem' AND "timestamp" > (SELECT "timestamp" FROM "event_log" WHERE "activity" = 'permissÃ£o final aprovada pelo supervisor' AND "id" = (SELECT MAX("id") FROM "event_log" WHERE "activity" = 'permissÃ£o final aprovada pelo supervisor')) )
SELECT COUNT(DISTINCT idcase) AS num_instances FROM event_log WHERE activity = 'permissÃ£o final aprovada pelo supervisor' AND EXISTS ( SELECT 1 FROM event_log AS prev_event WHERE prev_event.activity = 'inÃ­cio da viagem' AND prev_event.timestamp < event_log.timestamp )
SELECT COUNT(*) FROM "event_log" WHERE "activity" = 'inÃ­cio da viagem' AND "id" IN ( SELECT "idcase" FROM "event_log" WHERE "activity" = 'permissÃ£o final aprovada pelo supervisor' ORDER BY "timestamp" )
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%inÃ­cio da viagem%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE '%permissÃ£o com aprovaÃ§Ã£o final do supervisor%');
SELECT COUNT(*) FROM event_log WHERE activity = 'APROVADO' AND EXISTS ( SELECT 1 FROM event_log AS log2 WHERE log2.activity = 'INICIO_VIAGEM' AND log2.timestamp > event_log.timestamp )
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%permissao%' AND idcase LIKE '%viagem%' AND cost > 0 AND timestamp < (SELECT MIN(timestamp) FROM event_log WHERE activity LIKE '%inicio_viagem%');
SELECT * FROM event_log WHERE activity = 'fim da viagem' AND timestamp < '2017-12-12 00:00:00' OR timestamp > '2017-12-12 23:59:59';
SELECT * FROM event_log WHERE activity = 'fim da viagem' AND timestamp < '2017-12-12' OR timestamp > '2017-12-12';
SELECT * FROM event_log WHERE activity = 'fim da viagem' AND timestamp < '2017-12-12' OR timestamp > '2017-12-12';
SELECT * FROM event_log WHERE activity = 'fim da viagem' AND timestamp < '2017-12-13' OR timestamp > '2017-12-11';
SELECT * FROM event_log WHERE timestamp NOT LIKE '%2017-12-12%' AND activity = 'fim da viagem';
SELECT * FROM event_log WHERE activity = 'fim da viagem' AND timestamp < '2017-12-12 00:00:00' OR timestamp > '2017-12-12 23:59:59';
SELECT * FROM event_log WHERE activity LIKE '%end%' AND timestamp >= '2017-12-12' AND timestamp < '2017-12-13';
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource
SELECT "resource", COUNT(*) AS "number_of_executions" FROM "event_log" GROUP BY "resource"
SELECT r.nome, COUNT(el.id) AS quantidade_eventos FROM "event_log_responsaveis" er JOIN "responsaveis" r ON er.id_responsavel = r.id GROUP BY r.nome ORDER BY quantidade_eventos DESC;
SELECT c.responsible, COUNT(el.id) AS num_activities FROM event_log el JOIN case c ON el.idcase = c.idcase GROUP BY c.responsible ORDER BY num_activities DESC;
SELECT u.name AS "User", COUNT(e.id) AS "Number of activities" FROM "case_activities" ca JOIN "cases" c ON ca.case_id = c.id JOIN "users" u ON c.user_id = u.id JOIN "event_log" e ON ca.activity_id = e.id GROUP BY u.name ORDER BY "Number of activities" DESC;
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT resource, COUNT(*) AS quantidade_atividades FROM event_log GROUP BY resource ORDER BY quantidade_atividades DESC;
SELECT resource, COUNT(*) AS quantidade_atividades FROM event_log GROUP BY resource;
CREATE TABLE "collaborators" ( "id" int, "name" TEXT COLLATE NOCASE, PRIMARY KEY("id") )
SELECT DISTINCT activity FROM event_log WHERE resource!= 'Virginia' ORDER BY activity;
SELECT DISTINCT activity FROM event_log WHERE activity NOT IN ( SELECT resource FROM event_log WHERE resource = 'Virginia' ) ORDER BY activity;
SELECT activity FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE idcase LIKE '%Virginia%');
SELECT DISTINCT activity FROM event_log WHERE idcase NOT LIKE '%Virginia%' AND activity NOT IN ( SELECT activity FROM event_log WHERE idcase LIKE '%Virginia%' ) ORDER BY activity;
SELECT DISTINCT el.activity FROM event_log el WHERE el.idcase NOT IN ( SELECT ec.idcase FROM event_log ec JOIN employees e ON ec.idcase = e.id WHERE e.name = 'Virginia' ) ORDER BY el.activity;
SELECT activity FROM event_log WHERE idcase!= 'VirgÃ­nia' GROUP BY activity HAVING COUNT(DISTINCT idcase) = 0
SELECT AVG("cost") AS media_custo FROM "event_log" WHERE "activity" ='rejeitada';
SELECT AVG("cost") AS media_custo FROM "event_log" WHERE "activity" ='rejeitada';
SELECT AVG(cost) AS media_custo FROM event_log WHERE activity ='rejeitada' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT AVG("cost") AS "custo_medio" FROM "event_log" WHERE "activity" ='rejeitada'
SELECT AVG("cost") AS media_custo FROM "event_log" WHERE "activity" ='rejeitada';
SELECT AVG("cost") AS "custo_medio" FROM "event_log" WHERE "activity" = 'DECLARACAO_VIAGEM' AND "idcase" LIKE '%REJEICAO%'
SELECT AVG(e.cost) AS media_custo FROM event_log e WHERE e.idcase LIKE '%rejeitada%'
SELECT idcase, TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp)) AS duration FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pelo supervisor' GROUP BY idcase
SELECT idcase, TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp)) AS duration FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pelo supervisor' GROUP BY idcase
SELECT idcase, activity, TIMESTAMPDIFF(SECOND, LAG(timestamp) OVER (PARTITION BY idcase, activity ORDER BY timestamp), timestamp) AS duration FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pelo supervisor' ORDER BY idcase, timestamp;
SELECT idcase, TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp)) AS duration FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pelo supervisor' GROUP BY idcase
SELECT idcase, TIMESTAMPDIFF(SECOND, LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp), timestamp) AS duration FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pelo supervisor' ORDER BY idcase, timestamp;
SELECT * FROM "event_log" WHERE "activity" = 'DeclaraÃ§Ã£o aprovada pelo supervisor';
SELECT (SELECT timestamp FROM event_log WHERE activity = 'APROVADO_SUPERVISOR' AND idcase = 'DECLARACAO') - (SELECT timestamp FROM event_log WHERE activity = 'DECLARACAO_SUBMIT' AND idcase = 'DECLARACAO') AS tempo_gasto
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador';
SELECT COUNT(*) FROM "event_log" WHERE "activity" = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador';
SELECT COUNT(*) AS "NÃºmero de rejeiÃ§Ãµes" FROM "event_log" WHERE "activity" = 'REJEITADA' AND "idcase" LIKE '%PRÃ-APROVAÃÃO%';
SELECT COUNT(*) FROM event_log WHERE activity = 'REJECT_CASE';
SELECT "idcase", "resource", MAX("timestamp") AS "data_ocorrencia" FROM "event_log" WHERE "activity" = 'fim da viagem' GROUP BY "idcase", "resource" ORDER BY "resource";
SELECT idcase, timestamp FROM event_log WHERE activity = 'fim da viagem' ORDER BY resource;
SELECT resource, timestamp FROM event_log WHERE activity = 'fim da viagem' ORDER BY resource;
SELECT resource, timestamp FROM event_log WHERE activity = 'fim da viagem' ORDER BY resource;
SELECT e.activity, e.timestamp, r.name AS responsible_name FROM event_log e JOIN ( SELECT idcase, (SELECT name FROM users WHERE id = (SELECT user_id FROM cases WHERE idcase = e.idcase)) AS name FROM event_log WHERE activity = 'Fim da viagem' ) r ON e.idcase = r.idcase ORDER BY r.name;
SELECT "idcase" AS "CÃ³digo da declaraÃ§Ã£o processada", MAX("timestamp") AS "Data da finalizaÃ§Ã£o da viagem", "resource" AS "Nome do funcionÃ¡rio" FROM "event_log" WHERE "activity" = 'FINALIZOU_VIAGEM' GROUP BY "resource" ORDER BY "resource";
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY idcase;
SELECT "idcase", COUNT(*) AS "number_of_events" FROM "event_log" GROUP BY "idcase";
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase;
SELECT "idcase", COUNT(*) AS "number_of_events" FROM "event_log" GROUP BY "idcase";
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_actions FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_intervencoes FROM event_log GROUP BY idcase
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2017-05-02 00:00:00' AND '2017-05-12 23:59:59';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2017-05-02 00:00:00' AND '2017-05-12 23:59:59';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2017-05-02 00:00:00' AND '2017-05-12 23:59:59';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2017-05-02 00:00:00' AND '2017-05-12 23:59:59';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2017-05-02 00:00:00' AND '2017-05-12 23:59:59';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2017-05-02 00:00:00' AND '2017-05-12 23:59:59';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%viagem%' AND timestamp BETWEEN '2017-05-02 00:00:00' AND '2017-05-12 23:59:59';
SELECT COUNT(*) FROM event_log WHERE activity = 'final da viagem' AND timestamp BETWEEN '2017-05-02 00:00:00' AND '2017-05-12 23:59:59';
SELECT "idcase", "resource", "id", "timestamp" FROM "event_log" WHERE "activity" = 'envio de lembrete' ORDER BY "timestamp" DESC;
SELECT "idcase" AS "Identificador do Caso", "resource" AS "Recurso", "id" AS "Identificador do Evento", "timestamp" AS "Data de FinalizaÃ§Ã£o" FROM "event_log" WHERE "activity" = 'envio de lembrete' ORDER BY "timestamp" ASC;
SELECT el.id, el.resource, el.timestamp FROM event_log el WHERE el.activity = 'envio de lembrete' ORDER BY el.timestamp DESC;
SELECT el.id, el.activity, el.resource, el.timestamp, el.cost, el.idcase FROM event_log el WHERE el.activity = 'envio de lembrete' ORDER BY el.timestamp DESC;
SELECT idcase, id, resource, timestamp FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp DESC;
SELECT el.id, el.resource, el.timestamp FROM event_log el WHERE el.activity = 'envio de lembrete' ORDER BY el.timestamp DESC;
SELECT idcase, resource, id, timestamp AS "data_finalizacao" FROM event_log WHERE activity LIKE '%envio de lembrete%' ORDER BY timestamp DESC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT Para responder Ã  sua pergunta, precisamos analisar o esquema de banco de dados fornecido e identificar as informaÃ§Ãµes relevantes. No entanto, noto que o esquema nÃ£o inclui informaÃ§Ãµes sobre funcionÃ¡rios ou processos de declaraÃ§Ã£o. O esquema apenas define uma tabela chamada "event_log" que registra atividades em um sistema, com campos como "activity", "resource", "cost", etc. Portanto, nÃ£o Ã© possÃ­vel responder Ã  sua pergunta com base no esquema fornecido, pois nÃ£o hÃ¡ informaÃ§Ãµes sobre funcionÃ¡rios ou processos de declaraÃ§Ã£o. Se vocÃª fornecer mais informaÃ§Ãµes sobre o banco de dados, como tabelas adicionais ou relaÃ§Ãµes entre as tabelas, posso ajudar a responder Ã  sua pergunta.
SELECT DISTINCT resource FROM event_log GROUP BY resource HAVING COUNT(idcase) > 200;
SELECT DISTINCT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 200;
SELECT DISTINCT resource FROM event_log WHERE activity = 'viagem' AND id IN ( SELECT id FROM event_log GROUP BY resource HAVING COUNT(*) > 200 ) ORDER BY COUNT(*) DESC;
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaraÃ§Ã£o de viagem' GROUP BY resource HAVING COUNT(*) > 200;
SELECT DISTINCT person_name FROM travel_declaration JOIN event_log ON travel_declaration.event_log_id = event_log.id GROUP BY person_name HAVING COUNT(*) > 200;
SELECT e.name FROM employees e JOIN ( SELECT idcase, COUNT(*) as num_requests FROM event_log WHERE activity = 'travel_request' GROUP BY idcase HAVING COUNT(*) > 200 ) t ON e.id = t.idcase
SELECT DISTINCT resource, COUNT(*) as count FROM event_log WHERE activity = 'viagem' GROUP BY resource HAVING COUNT(*) > 200 ORDER BY count DESC;
SELECT COUNT(DISTINCT "resource") AS "Number of resources" FROM "event_log";
SELECT COUNT(DISTINCT "resource") AS "Number of resources" FROM "event_log";
SELECT COUNT(DISTINCT "idcase") AS "quantidade_funcionarios" FROM "event_log" WHERE "activity" LIKE '%tratamento%declaraÃ§Ã£o%' OR "activity" LIKE '%declaraÃ§Ã£o%tratamento%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%declaraÃ§Ãµes%';
SELECT Uma pergunta interessante! No entanto, Ã© importante notar que o esquema de banco de dados fornecido nÃ£o contÃ©m informaÃ§Ãµes sobre pessoas. O campo "resource" parece ser um campo que pode conter nomes de recursos, como arquivos, pÃ¡ginas web, etc., mas nÃ£o hÃ¡ um campo que indique a associaÃ§Ã£o com pessoas. Portanto, nÃ£o Ã© possÃ­vel responder a essa pergunta com base nos dados fornecidos. Se vocÃª tiver mais informaÃ§Ãµes sobre o banco de dados ou os dados que estÃ£o sendo armazenados, posso ajudar a fornecer uma resposta mais precisa.
SELECT Uma pergunta interessante! No entanto, ao analisar o esquema de banco de dados fornecido, nÃ£o hÃ¡ uma coluna que indique a quantidade de pessoas associadas Ã  execuÃ§Ã£o de atividades no log de eventos. A coluna "idcase" pode ser uma referÃªncia a um caso ou um identificador Ãºnico, mas nÃ£o hÃ¡ informaÃ§Ãµes sobre as pessoas envolvidas. Portanto, nÃ£o Ã© possÃ­vel responder essa pergunta com base no esquema de banco de dados fornecido. Seria necessÃ¡rio adicionar mais informaÃ§Ãµes ou alterar o esquema para incluir essa informaÃ§Ã£o. Se vocÃª tiver mais informaÃ§Ãµes sobre o banco de dados ou puder fornecer mais contexto, posso ajudar a responder essa pergunta.
SELECT COUNT(DISTINCT responsÃ¡vel) AS "NÃºmero de pessoas responsÃ¡veis" FROM event_log;
SELECT Para responder Ã  sua pergunta, precisamos analisar o esquema de banco de dados e identificar a coluna que representa a responsabilidade por tratamento de declaraÃ§Ãµes. No entanto, nÃ£o hÃ¡ nenhuma coluna no esquema que indique a responsabilidade por tratamento de declaraÃ§Ãµes. Portanto, nÃ£o Ã© possÃ­vel responder Ã  sua pergunta com base no esquema fornecido. Se vocÃª tiver mais informaÃ§Ãµes sobre o banco de dados, como uma tabela de usuÃ¡rios ou uma tabela de casos, poderÃ­amos ajudar a responder Ã  sua pergunta.
SELECT COUNT(DISTINCT resource) AS num_funcionarios FROM event_log WHERE activity LIKE '%processamento de declaraÃ§Ãµes%';
SELECT activity FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o%';
SELECT * FROM event_log WHERE activity COLLATE NOCASE LIKE '%declaraÃ§Ã£o%';
SELECT * FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o%';
SELECT * FROM "event_log" WHERE "activity" LIKE '%declaraÃ§Ã£o%';
SELECT activity FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o%';
SELECT * FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o%';
SELECT * FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o%';
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS media_custo FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o de viagem%' -- ajuste essa condiÃ§Ã£o para incluir apenas as aÃ§Ãµes relacionadas Ã s declaraÃ§Ãµes de viagem GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost IS NULL;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost IS NULL OR cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT * FROM event_log WHERE activity LIKE '%permissÃ£o%' OR activity LIKE '%declaraÃ§Ã£o%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permission%' OR activity LIKE '%declare%';
SELECT activity FROM event_log WHERE activity LIKE '%permissÃ£o%' OR activity LIKE '%declaraÃ§Ã£o%';
SELECT activity FROM event_log WHERE activity LIKE '%permissao%' OR activity LIKE '%declaracao%';
SELECT activity FROM event_log WHERE activity LIKE '%permissao%' OR activity LIKE '%declaracao%';
SELECT * FROM event_log WHERE activity LIKE '%permissao%' OR activity LIKE '%declaracao%';
SELECT activity FROM event_log WHERE activity LIKE '%permissÃ£o%' OR activity LIKE '%declaraÃ§Ã£o%';
SELECT * FROM "event_log" WHERE "activity" LIKE '%permissÃ£o%' OR "activity" LIKE '%declaraÃ§Ã£o%';
SELECT Based on the provided database schema, here are the actions related to permissions and explicit declarations in the process of managing declarations: **Permissions:** 1. **SELECT**: The SELECT statement is used to retrieve data from the event_log table.
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo diretor';
SELECT COUNT(*) FROM "event_log" WHERE "activity" = 'declaraÃ§Ã£o rejeitada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o rejeitada pelo diretor%';
SELECT COUNT(*) FROM event_log WHERE activity = 'DeclaraÃ§Ã£o de rejeiÃ§Ã£o de responsabilidade da direÃ§Ã£o';
SELECT AVG("cost") AS "custo_medio" FROM "event_log";
SELECT AVG("cost") AS "average_cost" FROM "event_log";
SELECT AVG("cost") AS "average_cost" FROM "event_log";
SELECT AVG("cost") AS "custo_medio" FROM "event_log" GROUP BY "activity"
SELECT AVG("cost") AS media_custo FROM "event_log";
SELECT AVG("cost") AS "custo_medio" FROM "event_log";
SELECT AVG("cost") AS "custo_medio" FROM "event_log" GROUP BY "activity"
SELECT AVG("cost") AS "average_cost" FROM "event_log";
SELECT AVG("cost") AS "average_cost" FROM "event_log";
SELECT AVG("cost") AS "custo_medio" FROM "event_log" WHERE "idcase" IS NOT NULL GROUP BY "idcase";
SELECT resource, COUNT(*) as num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(idcase) AS quantidade_casos FROM event_log GROUP BY resource ORDER BY quantidade_casos DESC;
SELECT resource, COUNT(idcase) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(idcase) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(idcase) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC;
SELECT f.name, COUNT(el.id) AS num_declaracoes FROM funcionarios f JOIN funcionario_event_log fel ON f.id = fel.funcionario_id GROUP BY f.name
SELECT COUNT(*) FROM event_log WHERE idcase = 'Peter';
SELECT COUNT(*) FROM "event_user" WHERE "id_user" IN (SELECT "id" FROM "users" WHERE "name" = 'Peter') No entanto, se vocÃª nÃ£o tiver essa estrutura, vocÃª nÃ£o poderia fazer essa consulta direta, pois nÃ£o hÃ¡ uma coluna que relacione os eventos com os usuÃ¡rios.
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) AS "rendimento" FROM "event_log" WHERE "resource" = 'Peter';
WITH activity_counts AS ( SELECT idcase, COUNT(*) AS num_activities FROM event_log GROUP BY idcase ) SELECT idcase FROM activity_counts WHERE num_activities > 3;
SELECT idcase, COUNT(*) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT u.iduser, COUNT(*) AS num_cases FROM event_log el JOIN case_users cu ON el.idcase = cu.idcase JOIN users u ON cu.iduser = u.iduser GROUP BY u.iduser HAVING COUNT(*) > 3;
SELECT f.nome FROM funcionarios f JOIN ( SELECT idcase, COUNT(*) AS num_cases FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 ) c ON f.id = (SELECT idcase FROM event_log WHERE idcase = c.idcase)
CREATE TABLE "pessoa" ( "id" int, "nome" TEXT COLLATE NOCASE, PRIMARY KEY("id") )
SELECT f.nome FROM funcionarios f JOIN event_log el ON f.idcase = el.idcase GROUP BY f.nome HAVING COUNT(el.id) > 3
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as quantidade_eventos FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento' GROUP BY idcase ORDER BY quantidade_eventos ASC;
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity LIKE '%requisiÃ§Ã£o de pagamento%' GROUP BY idcase ORDER BY quantidade_eventos ASC;
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento' GROUP BY idcase ORDER BY quantidade_eventos ASC;
SELECT idcase, COUNT(*) AS num_events, activity FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) AS num_activities, SUM(cost) AS total_cost FROM event_log WHERE activity LIKE '%payment%' GROUP BY idcase ORDER BY num_activities ASC;
SELECT idcase, COUNT(*) AS num_actions FROM event_log GROUP BY idcase ORDER BY num_actions;
SELECT timestamp FROM event_log WHERE activity IN ('fim da viagem', 'declaraÃ§Ã£o rejeitada pelo funcionÃ¡rio') ORDER BY timestamp ASC;
SELECT timestamp FROM event_log WHERE activity IN ('fim da viagem', 'declaraÃ§Ã£o rejeitada pelo funcionÃ¡rio') ORDER BY timestamp ASC;
SELECT timestamp FROM event_log WHERE activity IN ('fim da viagem', 'declaraÃ§Ã£o rejeitada pelo funcionÃ¡rio') ORDER BY timestamp ASC;
SELECT timestamp FROM event_log WHERE activity IN ('fim da viagem', 'declaraÃ§Ã£o rejeitada pelo funcionÃ¡rio') ORDER BY timestamp ASC;
SELECT timestamp FROM event_log WHERE activity IN ('fim da viagem', 'closed') ORDER BY timestamp ASC;
SELECT DISTINCT timestamp FROM event_log WHERE activity IN ('fim da viagem', 'declaraÃ§Ã£o rejeitada pelo funcionÃ¡rio') ORDER BY timestamp ASC;
SELECT DISTINCT timestamp FROM event_log WHERE activity LIKE '%fim de viagem%' OR activity LIKE '%declaraÃ§Ã£o rejeitada por funcionÃ¡rio%' ORDER BY timestamp ASC;
SELECT timestamp, activity, resource, idcase FROM event_log WHERE activity IN ('Fim de viagem', 'RejeiÃ§Ã£o de declaraÃ§Ã£o') ORDER BY timestamp ASC;
SELECT resource, COUNT(*) AS "OcorrÃªncias" FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS num_execucoes FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS num_execucoes FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS num_execucoes FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS quantidade_execucoes FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS num_executions FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS ocorrÃªncias FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) as ocorrencias FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT f.nome, COUNT(el.id) AS quantidade_atuacoes FROM funcionarios f JOIN event_log el ON f.nome = el.idcase GROUP BY f.nome ORDER BY f.nome;
SELECT e.idcase, f.nome, COUNT(*) AS quantidade_acoes FROM event_log e JOIN funcionarios f ON e.idcase = f.id GROUP BY e.idcase, f.nome ORDER BY f.nome;
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT * FROM event_log WHERE activity COLLATE NOCASE LIKE 'E%';
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT * FROM event_log WHERE activity COLLATE NOCASE LIKE 'E%';
SELECT * FROM event_log WHERE activity COLLATE NOCASE LIKE 'E%';
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT 'E-Submission' AS label, activity FROM event_log WHERE activity LIKE 'SUBMIT%' OR activity LIKE 'UPDATE%' OR activity LIKE 'DELETE%' OR activity LIKE 'CREATE%';
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT el.id, el.activity, f.nome, el.cost FROM event_log el JOIN funcionarios f ON el.id = f.id WHERE el.activity LIKE '%processamento de declaraÃ§Ã£o%' AND el.cost BETWEEN 50 AND 400;
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaraÃ§Ã£o salva pelo funcionÃ¡rio';
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaraÃ§Ã£o salva pelo funcionÃ¡rio';
SELECT DISTINCT "idcase" AS funcionario FROM "event_log" WHERE "activity" = 'declaraÃ§Ã£o salva';
SELECT DISTINCT resource FROM event_log WHERE activity LIKE '%salvar declaraÃ§Ã£o%';
SELECT activity FROM event_log WHERE timestamp = '2018-04-12';
SELECT activity FROM event_log WHERE timestamp >= '2018-04-12 00:00:00' AND timestamp < '2018-04-13 00:00:00';
SELECT * FROM event_log WHERE timestamp = '2018-04-12';
SELECT activity FROM event_log WHERE timestamp = '2018-04-12 23:59:59';
SELECT DISTINCT activity FROM event_log WHERE timestamp LIKE '%2018-04-12%'
SELECT activity FROM event_log WHERE timestamp = '2018-04-12 23:59:59';
SELECT activity FROM event_log WHERE timestamp = '2018-04-12 23:59:59';
SELECT activity FROM event_log WHERE timestamp = '2018-04-12 23:59:59';
SELECT "resource" FROM "event_log" WHERE "timestamp" = '2018-04-12' AND "activity" LIKE '%processamento de declaraÃ§Ã£o%';
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('permissÃ£o final aprovada pelo supervisor', 'declaraÃ§Ã£o aprovada pelo supervisor') ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('permissÃ£o final aprovada pelo supervisor', 'declaraÃ§Ã£o aprovada pelo supervisor') ORDER BY timestamp DESC;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('permissÃ£o final aprovada pelo supervisor', 'declaraÃ§Ã£o aprovada pelo supervisor') ORDER BY timestamp DESC;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('permissÃ£o final aprovada pelo supervisor', 'declaraÃ§Ã£o aprovada pelo supervisor') ORDER BY timestamp DESC;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('permissÃ£o final aprovada pelo supervisor', 'declaraÃ§Ã£o aprovada pelo supervisor') ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('permissÃ£o final aprovada pelo supervisor', 'declaraÃ§Ã£o aprovada pelo supervisor') ORDER BY timestamp DESC;
SELECT * FROM event_log WHERE activity LIKE 'APROVAÃÃO%' OR activity LIKE 'APROVOU%' ORDER BY timestamp DESC;
SELECT id, activity, timestamp FROM event_log WHERE activity LIKE '%aprovar%' OR activity LIKE '%aprovaÃ§Ã£o%' OR activity LIKE '%permissÃ£o%' OR activity LIKE '%declaraÃ§Ã£o%' ORDER BY timestamp;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT activity, timestamp, resource, cost, idcase FROM event_log WHERE cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE activity = 'permissÃ£o final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissÃ£o final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissÃ£o final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissÃ£o final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissÃ£o final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissÃ£o final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissÃ£o final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissÃ£o final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissÃ£o final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissÃ£o final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log JOIN permission_grants ON event_log.id = permission_grants.id WHERE event_log.activity = 'processamento de declaraÃ§Ãµes' AND permission_grants.director_id = <id_do_diretor>;
SELECT COUNT(*) FROM event_log WHERE activity = 'permissao_final' AND resource LIKE '%diretor%';
SELECT timestamp FROM event_log WHERE activity = 'inicio da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'inicio da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'inicio da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'inicio da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'inicio da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'inicio da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'inicio da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'inicio da viagem' AND resource LIKE '%s';
SELECT DISTINCT timestamp FROM event_log WHERE activity ='start of journey' AND resource LIKE '%s';
SELECT DISTINCT timestamp FROM event_log WHERE activity = 'inÃ­cio de viagem' AND resource LIKE '%s';
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT "activity", "resource", SUM("cost") AS "total_cost" FROM "event_log" GROUP BY "activity", "resource";
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT COUNT(*) FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'fim da viagem');
SELECT activity, COUNT(*) as quantidade FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'fim da viagem') GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'fim da viagem');
SELECT COUNT(*) FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'fim da viagem');
SELECT COUNT(*) FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'fim da viagem');
SELECT COUNT(*) FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'fim da viagem');
SELECT activity, COUNT(*) as ocorrencias FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'fim da viagem') GROUP BY activity;
SELECT activity, COUNT(*) as quantidade FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'fim da viagem') GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'START_%' OR activity LIKE 'END_%';
SELECT COUNT(*) AS quantidade FROM event_log WHERE activity LIKE 'INICIO_VIAGEM' OR activity LIKE 'FIM_VIAGEM';
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 3 ORDER BY count DESC;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 3 ORDER BY count DESC;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 3 ORDER BY count DESC;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 3 ORDER BY count DESC;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 3 ORDER BY count DESC;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY id DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY id DESC LIMIT 1;
SELECT "activity", "resource", "idcase" FROM "event_log" ORDER BY "timestamp" DESC LIMIT 1;
SELECT "activity", "resource" FROM "event_log" WHERE "idcase" LIKE '%declaraÃ§Ãµes de viagem%' ORDER BY "timestamp" DESC LIMIT 1;
SELECT el1.activity, el1.resource, el1.timestamp, el1.cost, el1.idcase FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp > el2.timestamp WHERE el1.activity!= 'fim da viagem' AND el2.activity = 'fim da viagem';
SELECT el1.activity, el1.timestamp, el1.resource, el1.cost, el1.idcase, u.username FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el2.activity = 'fim da viagem' JOIN users u ON el1.id = u.id WHERE el1.timestamp > el2.timestamp ORDER BY el1.timestamp;
SELECT id FROM event_log WHERE activity = 'fim da viagem' ORDER BY timestamp ASC;
SELECT el1.* FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.activity = 'fim da viagem' AND el1.id < el2.id ORDER BY el1.timestamp;
SELECT el1.* FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.activity = 'fim da viagem' AND el1.id < el2.id ORDER BY el1.timestamp;
SELECT el.id, el.activity, el.timestamp, el.resource, el.cost, el.idcase, u.name AS responsible_name FROM event_log el JOIN cases c ON el.idcase = c.id JOIN users u ON c.responsable_id = u.id WHERE el.activity = 'fim da viagem' AND el.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'fim da viagem' ) ORDER BY el.timestamp;
SELECT el1.activity, el1.timestamp, el1.resource, el1.cost, el1.idcase, u.username FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el2.activity = 'fim da viagem' JOIN users u ON el1.id = u.id WHERE el1.timestamp > el2.timestamp ORDER BY el1.timestamp;
SELECT id FROM event_log WHERE activity = 'fim da viagem' ORDER BY timestamp DESC LIMIT 1;
SELECT el1.* FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp > el2.timestamp WHERE el2.activity = 'fim da viagem' ORDER BY el1.timestamp;
SELECT el1.activity, el1.resource, el1.timestamp, el1.cost, el1.idcase, u.username FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp < el2.timestamp JOIN users u ON el1.id = u.id WHERE el2.activity = 'fim da viagem' ORDER BY el1.timestamp;
SELECT el1.activity, el1.resource, el1.idcase, el2.activity AS responsavel FROM event_log el1 JOIN event_log el2 ON el1.id < el2.id AND el1.activity = 'fim da viagem' WHERE el2.timestamp > el1.timestamp ORDER BY el1.timestamp;
SELECT el2.activity, el2.resource, el2.idcase, el2.timestamp FROM event_log el2 WHERE el2.id > ( SELECT MAX(id) FROM event_log el1 WHERE el1.activity = 'fim da viagem' ) ORDER BY el2.timestamp;
SELECT el.activity, el.resource, el.timestamp, el.cost, el.idcase FROM event_log el WHERE el.id > 123 ORDER BY el.timestamp;
SELECT el2.* FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.activity = 'fim da viagem' WHERE el1.timestamp < el2.timestamp ORDER BY el2.timestamp;
SELECT el2.* FROM event_log el2 JOIN event_log el1 ON el2.idcase = el1.idcase WHERE el1.activity = 'fim da viagem' AND el2.timestamp > el1.timestamp ORDER BY el2.timestamp;
SELECT el.activity, el.timestamp, el.resource, el.cost, c.case_name, c.case_responsible FROM event_log el JOIN case c ON el.idcase = c.case_id WHERE el.activity!= 'Fim de Viagem' AND el.id IN ( SELECT id FROM event_log WHERE activity = 'Fim de Viagem' ) ORDER BY el.timestamp;
SELECT el1.activity AS "AÃ§Ã£o", el1.timestamp AS "Data e hora da aÃ§Ã£o", el1.resource AS "Recursos afetados", el1.cost AS "Custo da aÃ§Ã£o", el1.idcase AS "Caso", el1.id AS "ID da aÃ§Ã£o", el2.username AS "FuncionÃ¡rio que executou a aÃ§Ã£o" FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp < el2.timestamp WHERE el1.activity = 'FINALIZAÃÃO DA VIAGEM' AND el2.activity NOT IN ('FINALIZAÃÃO DA VIAGEM') ORDER BY el1.idcase, el1.timestamp;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY resource
SELECT COUNT(*) AS quantidade_processamentos FROM event_log WHERE activity = 'processar_viagem' AND idcase IN ( SELECT idcase FROM event_log WHERE activity ='registrar_fim_viagem' )
SELECT "resource" AS funcionario, COUNT(*) AS num_aÃ§Ãµes FROM "event_log" WHERE "activity" NOT LIKE '%checkout%' GROUP BY "resource"
SELECT DISTINCT idcase, MIN(timestamp) AS first_event_timestamp FROM event_log GROUP BY idcase ORDER BY first_event_timestamp DESC;
SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ORDER BY start_date DESC;
SELECT DISTINCT idcase FROM event_log ORDER BY timestamp DESC;
SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ORDER BY start_date DESC;
SELECT DISTINCT idcase AS "DeclaraÃ§Ã£o de Viagem", (SELECT timestamp FROM event_log WHERE idcase = e.idcase ORDER BY timestamp LIMIT 1) AS "Data da Primeira AÃ§Ã£o" FROM event_log e WHERE activity LIKE '%declaraÃ§Ã£o de viagem%' ORDER BY "Data da Primeira AÃ§Ã£o";
SELECT id FROM event_log WHERE activity = 'declaraÃ§Ã£o de viagem' ORDER BY timestamp ASC;
SELECT COUNT(*) FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento';
SELECT COUNT(*) FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento';
SELECT COUNT(*) FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento';
SELECT COUNT(*) FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento';
SELECT COUNT(*) FROM event_log WHERE activity ='requisiÃ§Ã£o de pagamento';
SELECT COUNT(*) FROM "event_log" WHERE "activity" LIKE '%payment%';
SELECT COUNT(*) FROM event_log WHERE activity = 'payment_request';
SELECT idcase FROM event_log WHERE activity = 'declaraÃ§Ã£o final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT * FROM event_log WHERE activity = 'declaraÃ§Ã£o final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'declaraÃ§Ã£o final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'declaraÃ§Ã£o final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT * FROM event_log WHERE activity = 'declaraÃ§Ã£o final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT resource FROM event_log WHERE activity = 'aprovacao final' AND idcase LIKE '%diretor%' ORDER BY timestamp DESC LIMIT 1;
SELECT el.* FROM event_log el JOIN aprovacoes a ON el.id = a.id_event_log WHERE a.id_diretor = (SELECT id FROM diretores ORDER BY id DESC LIMIT 1) ORDER BY el.timestamp DESC LIMIT 1;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pela administraÃ§Ã£o' GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pela administraÃ§Ã£o' GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) as quantidade FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pela administraÃ§Ã£o' GROUP BY resource ORDER BY quantidade DESC LIMIT 1;
SELECT resource, COUNT(*) as quantidade FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pela administraÃ§Ã£o' GROUP BY resource ORDER BY quantidade DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'declaraÃ§Ã£o aprovada pela administraÃ§Ã£o' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT "resource" AS "Administrador", COUNT(*) AS "NÃºmero de aprovaÃ§Ãµes" FROM "event_log" WHERE "activity" = 'APROVAÃÃO' AND "idcase" LIKE '%DECLARAÃÃO%' GROUP BY "resource" ORDER BY "NÃºmero de aprovaÃ§Ãµes" DESC;
SELECT resource, COUNT(*) as num_approvals FROM event_log WHERE activity = 'aprova' GROUP BY resource ORDER BY num_approvals DESC;
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE activity = (SELECT MIN(activity) FROM event_log) GROUP BY resource
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE id = (SELECT MIN(id) FROM event_log) GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_execucoes FROM event_log WHERE activity = (SELECT MIN(activity) FROM event_log WHERE idcase = event_log.idcase) GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE id = (SELECT MIN(id) FROM event_log) GROUP BY resource
SELECT resource, COUNT(*) AS first_occurrence FROM event_log WHERE id = (SELECT MIN(id) FROM event_log WHERE idcase = event_log.idcase) GROUP BY resource
SELECT funcionario, COUNT(*) as num_declaracoes FROM event_log WHERE activity = 'primeira aÃ§Ã£o' GROUP BY funcionario
SELECT resource, COUNT(*) AS num_processamentos FROM event_log WHERE activity = 'processamento de declaraÃ§Ã£o' GROUP BY resource
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%aprovada%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%aprovada%';
SELECT COUNT(*) FROM event_log WHERE activity COLLATE NOCASE LIKE '%aprovada%';
SELECT COUNT(*) FROM event_log WHERE activity COLLATE NOCASE LIKE '%aprovada%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%aprovada%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%aprovada%';
SELECT Para responder essa pergunta, precisamos analisar as informaÃ§Ãµes presentes na tabela "event_log". No entanto, nÃ£o hÃ¡ nenhuma coluna que indique se uma declaraÃ§Ã£o foi aprovada ou nÃ£o. Portanto, nÃ£o Ã© possÃ­vel responder essa pergunta com base nos dados fornecidos. Se vocÃª tiver mais informaÃ§Ãµes sobre a tabela "event_log" ou se puder fornecer mais contexto sobre o que Ã© uma "declaraÃ§Ã£o" e como Ã© relacionada Ã s atividades registradas no log, posso ajudar a criar uma consulta para responder essa pergunta.
SELECT Para responder Ã  pergunta, precisamos analisar o esquema de banco de dados e identificar as colunas que podem estar relacionadas Ã  aprovaÃ§Ã£o. A coluna "activity" parece ser a mais provÃ¡vel candidata para conter informaÃ§Ãµes sobre as aÃ§Ãµes de aprovaÃ§Ã£o. No entanto, nÃ£o hÃ¡ informaÃ§Ãµes suficientes para determinar exatamente quantas declaraÃ§Ãµes (ou "idcase") as aÃ§Ãµes de aprovaÃ§Ã£o aparecem. Para obter a resposta, precisarÃ­amos de mais informaÃ§Ãµes sobre o conteÃºdo da coluna "activity" e como as aÃ§Ãµes de aprovaÃ§Ã£o sÃ£o registradas no banco de dados. Se a coluna "activity" contiver strings como "aprovar", "reprovar", "aprovado", "reprovado", etc., podemos supor que as aÃ§Ãµes de aprovaÃ§Ã£o aparecem em uma declaraÃ§Ã£o Ãºnica (ou seja, um valor Ãºnico na coluna "idcase"). No entanto, se a coluna "activity" contiver strings mais complexas, como "aprovar solicitaÃ§Ã£o de emprÃ©stimo", "reprovar solicitaÃ§Ã£o de emprÃ©stimo", etc., pode ser que as aÃ§Ãµes de aprovaÃ§Ã£o apareÃ§am em vÃ¡rias declaraÃ§Ãµes diferentes. Sem mais informaÃ§Ãµes, nÃ£o podemos fornecer uma resposta mais especÃ­fica.
SELECT DATE(timestamp) AS data, COUNT(*) AS quantidade_rejeitadas FROM event_log WHERE activity ='rejeitada' GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, COUNT(*) AS quantidade_casos FROM event_log WHERE activity ='rejeitada' GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, COUNT(*) AS quantidade_instancias FROM event_log WHERE activity ='rejeitada' GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, COUNT(*) AS quantidade_de_casos FROM event_log WHERE activity ='rejeitada' GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS dia, COUNT(*) AS quantidade_rejeitadas FROM event_log WHERE activity ='rejeitada' GROUP BY DATE(timestamp)
SELECT DATE(timestamp) AS dia, COUNT(*) AS quantidade_rejeitadas FROM event_log WHERE activity ='rejeitada' GROUP BY DATE(timestamp)
SELECT DATE(timestamp) AS data, COUNT(*) AS num_rejeitadas FROM event_log WHERE activity LIKE '%rejeitada%' -- ajuste essa condiÃ§Ã£o para incluir apenas as declaraÃ§Ãµes rejeitadas GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, COUNT(*) AS quantidade_de_rejeicoes FROM event_log WHERE activity LIKE '%rejeiÃ§Ã£o%' -- ajuste para a sua linguagem de rejeiÃ§Ã£o GROUP BY DATE(timestamp) ORDER BY data;
SELECT idcase, COUNT(*) as num_events, MAX(timestamp) as max_timestamp, MIN(timestamp) as min_timestamp FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS total_time FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, SUM(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp))) AS total_duration FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 5;
SELECT idcase, COUNT(*) AS total_executions, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS total_duration FROM event_log GROUP BY idcase ORDER BY total_executions DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, SUM(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp))) AS total_duration FROM event_log GROUP BY idcase ORDER BY num_events DESC;
SELECT activity, COUNT(*) AS num_actions, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS total_processing_time FROM event_log GROUP BY activity ORDER BY num_actions DESC LIMIT 5;
WITH processed_time AS ( SELECT activity, timestamp, EXTRACT(EPOCH FROM timestamp - LAG(timestamp) OVER (ORDER BY timestamp)) AS processing_time FROM event_log ) SELECT activity, AVG(processing_time) AS average_processing_time FROM processed_time GROUP BY activity ORDER BY average_processing_time DESC LIMIT 5;
SELECT idcase, COUNT(*) AS quantidade_eventos, MAX(timestamp) - MIN(timestamp) AS duracao FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY quantidade_eventos DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, SUM(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp))) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY num_events DESC LIMIT 5;
SELECT el.idcase AS "Instance", COUNT(*) AS "Number of executions", SUM(el.cost) AS "Total cost", MAX(el.timestamp) AS "Last execution time", MIN(el.timestamp) AS "First execution time" FROM event_log el GROUP BY el.idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY num_events DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY num_events DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS total_time FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY num_events DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log WHERE activity LIKE '%declaraÃ§Ã£o%' AND COUNT(*) >= 20 GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT activity, idcase, COUNT(*) AS num_actions, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS total_processing_time FROM event_log GROUP BY activity, idcase HAVING COUNT(*) >= 20 ORDER BY total_processing_time DESC LIMIT 5;
SELECT * FROM event_log WHERE activity!='requisiÃ§Ã£o de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!='requisiÃ§Ã£o de pagamento' AND idcase IN ( SELECT idcase FROM event_log ORDER BY timestamp DESC LIMIT 10 ) ORDER BY timestamp DESC;
SELECT * FROM event_log WHERE activity!='requisiÃ§Ã£o de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!='requisiÃ§Ã£o de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!='requisiÃ§Ã£o de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!='requisiÃ§Ã£o de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!='requisiÃ§Ã£o de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!='requisiÃ§Ã£o de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM "event_log" WHERE "idcase" NOT IN ( SELECT "idcase" FROM "event_log" WHERE "activity" ='requisiÃ§Ã£o de pagamento' ) ORDER BY "id" DESC LIMIT 10;
SELECT e1.idcase FROM event_log e1 WHERE NOT EXISTS ( SELECT 1 FROM event_log e2 WHERE e2.idcase = e1.idcase AND e2.activity ='requisiÃ§Ã£o de pagamento' ) ORDER BY e1.timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!='requisiÃ§Ã£o de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity LIKE '%processamento%' AND id NOT IN ( SELECT id FROM event_log WHERE activity LIKE '%pagamento%' ) ORDER BY timestamp DESC LIMIT 10;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10 ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS occurrences FROM event_log GROUP BY resource HAVING COUNT(*) <= 10
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT DISTINCT "idcase" FROM "event_log" GROUP BY "idcase" HAVING COUNT("id") <= 10;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity HAVING COUNT(*) <= 10;
SELECT AVG("cost") AS media_custo FROM "event_log" WHERE "activity" = 'pagamento efetuado' AND "timestamp" < '2018-01-01 00:00:00';
SELECT AVG("cost") AS media_custo FROM "event_log" WHERE "activity" = 'pagamento efetuado' AND "timestamp" < '2018-01-01 00:00:00';
SELECT AVG("cost") AS "custo_medio" FROM "event_log" WHERE "activity" = 'pagamento efetuado' AND "timestamp" < '2018-01-01 00:00:00';
SELECT AVG("cost") AS "custo_medio" FROM "event_log" WHERE "activity" = 'pagamento efetuado' AND "timestamp" < '2018-01-01 00:00:00';
SELECT AVG("cost") AS media_custo FROM "event_log" WHERE "activity" = 'pagamento efetuado' AND "timestamp" < '2018-01-01 00:00:00';
SELECT AVG("cost") AS "custo_medio" FROM "event_log" WHERE "timestamp" < '2018-01-01' AND "activity" = 'pagamento efetuado';
SELECT AVG("cost") AS "custo_medio" FROM "event_log" WHERE "activity" = 'pagamento efetuado' AND "timestamp" < '2018-01-01 00:00:00';
SELECT AVG("cost") AS "custo_medio" FROM "event_log" WHERE "activity" = 'pagamento efetuado' AND "timestamp" < '2018-01-01 00:00:00';
SELECT AVG("cost") AS "custo_medio" FROM "event_log" WHERE "activity" LIKE '%pagamento%' AND "timestamp" < '2018-01-01 00:00:00';
SELECT idcase, COUNT(*) AS quantidade_atividades FROM event_log WHERE activity = 'permissÃ£o' GROUP BY idcase;
SELECT idcase, COUNT(*) AS quantidade_atividades FROM event_log WHERE activity = 'permissÃ£o' GROUP BY idcase;
SELECT COUNT(*) as quantidade_execucoes FROM event_log WHERE activity = 'permissÃ£o';
SELECT idcase, COUNT(*) AS quantidade_ocorrencias FROM event_log WHERE activity = 'permissÃ£o' GROUP BY idcase;
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity = 'permissÃ£o' GROUP BY idcase;
SELECT COUNT(*) AS quantidade_registro FROM event_log WHERE activity = 'permissÃ£o';
SELECT idcase, COUNT(*) AS quantidade_ocorrencias FROM event_log WHERE activity = 'permissÃ£o' GROUP BY idcase;
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity = 'permissÃ£o' GROUP BY idcase;
SELECT d.declaration, COUNT(el.id) AS permission_count FROM event_log el JOIN declarations d ON el.idcase = d.id WHERE el.activity = 'permission' GROUP BY d.declaration
SELECT idcase, COUNT(*) AS permissao_count FROM event_log WHERE activity LIKE '%permissÃ£o%' GROUP BY idcase;
SELECT COUNT(*) AS quantidade_casos, resource FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(*) AS quantidade_casos, resource FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' GROUP BY resource;
SELECT resource, COUNT(*) AS quantidade_casos FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT "resource") AS "quantidade_de_casos" FROM "event_log" WHERE "activity" = 'declaraÃ§Ã£o rejeitada pelo supervisor';
SELECT resource, COUNT(*) as quantidade_casos FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' GROUP BY resource;
SELECT supervisor, COUNT(*) AS num_rejeicoes FROM event_log WHERE activity ='rejeicao' AND "resource" LIKE '%supervisor%' GROUP BY supervisor
SELECT supervisor, COUNT(*) as num_rejected FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada' GROUP BY supervisor;
SELECT activity, COUNT(idcase) AS num_cases FROM event_log GROUP BY activity ORDER BY num_cases DESC;
SELECT activity, COUNT(*) AS quantidade_casos FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS num_cases FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) as quantidade_casos FROM event_log GROUP BY activity ORDER BY quantidade_casos DESC;
SELECT activity, COUNT(*) as quantidade FROM event_log GROUP BY activity ORDER BY quantidade DESC;
SELECT activity, COUNT(*) as num_cases FROM event_log GROUP BY activity ORDER BY num_cases DESC;
SELECT activity, COUNT(*) AS quantidade_declaracoes FROM event_log GROUP BY activity ORDER BY quantidade_declaracoes DESC;
SELECT activity, COUNT(*) AS num_declarations FROM event_log GROUP BY activity
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' ) ORDER BY timestamp LIMIT 1;
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' ) ORDER BY timestamp
SELECT * FROM event_log WHERE activity LIKE 'R%' AND id > ( SELECT MAX(id) FROM event_log WHERE activity LIKE 'D%' ) ORDER BY timestamp LIMIT 1;
SELECT * FROM event_log WHERE activity LIKE 'R%' AND id NOT IN ( SELECT id FROM event_log WHERE activity LIKE 'D%' ) ORDER BY timestamp;
SELECT * FROM event_log WHERE activity LIKE 'R%' AND id IN ( SELECT id FROM event_log WHERE activity LIKE 'D%' ORDER BY timestamp DESC LIMIT 1 ) ORDER BY timestamp;
SELECT * FROM event_log WHERE timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' ) AND activity LIKE 'R%';
SELECT activity FROM event_log WHERE activity LIKE 'R%' AND id IN ( SELECT id FROM event_log WHERE activity LIKE 'D%' ORDER BY timestamp LIMIT 1 ) ORDER BY timestamp;
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT "resource", "activity", COUNT(*) AS "quantidade_execucoes" FROM "event_log" GROUP BY "resource", "activity" ORDER BY "resource", "activity";
SELECT "resource", "activity", COUNT(*) AS "quantidade_execucoes" FROM "event_log" GROUP BY "resource", "activity" ORDER BY "resource", "activity";
SELECT "resource", "activity", COUNT(*) AS "count" FROM "event_log" GROUP BY "resource", "activity" ORDER BY "resource", "activity";
SELECT "resource", "activity", COUNT(*) AS "quantidade_execucoes" FROM "event_log" GROUP BY "resource", "activity" ORDER BY "resource", "activity";
SELECT activity, resource, COUNT(*) AS frequency FROM event_log GROUP BY activity, resource ORDER BY activity, resource;
SELECT el.idcase, el.activity, COUNT(*) AS "quantidade_execucoes" FROM event_log el WHERE el.activity LIKE '%processamento de declaraÃ§Ã£o%' GROUP BY el.idcase, el.activity ORDER BY el.idcase, el.activity;
SELECT "resource", "activity", COUNT(*) AS "quantidade_execucoes" FROM "event_log" GROUP BY "resource", "activity" ORDER BY "resource", "activity";
SELECT DISTINCT activity FROM event_log WHERE timestamp >= '2018-01-01' AND timestamp < '2018-06-30';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-06-30 23:59:59';
SELECT * FROM "event_log" WHERE timestamp >= '2018-01-01' AND timestamp < '2018-06-30';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT activity FROM event_log WHERE strftime('%Y-%m', timestamp) BETWEEN '2018-01-01' AND '2018-06-30';
SELECT activity FROM event_log WHERE timestamp >= DATE_TRUNC('quarter', '2018-01-01') AND timestamp < DATE_TRUNC('quarter', '2018-07-01');
SELECT * FROM "event_log" WHERE timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-06-30 23:59:59' ORDER BY timestamp;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT activity, timestamp, resource, cost, idcase FROM event_log WHERE resource = 'Wayne' ORDER BY timestamp;
SELECT DISTINCT id FROM event_log WHERE resource = 'Wayne' ORDER BY id;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT * FROM event_log WHERE resource = 'Wayne' ORDER BY timestamp;
SELECT Para responder essa pergunta, precisamos analisar o esquema de banco de dados e verificar se hÃ¡ alguma coluna que indique o funcionÃ¡rio que trabalhou em uma determinada declaraÃ§Ã£o. No entanto, nÃ£o hÃ¡ nenhuma coluna que indique isso no esquema fornecido. Portanto, nÃ£o Ã© possÃ­vel responder essa pergunta com base no esquema fornecido. Seria necessÃ¡rio adicionar mais informaÃ§Ãµes ao esquema, como uma coluna que indique o funcionÃ¡rio responsÃ¡vel por uma determinada atividade. Se vocÃª tiver mais informaÃ§Ãµes sobre o esquema, como uma tabela de funcionÃ¡rios com um ID e um nome, por exemplo, poderÃ­amos criar uma consulta para relacionar as atividades com os funcionÃ¡rios.
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%Wayne%';
SELECT activity, COUNT(*) AS quantidade_casos FROM event_log WHERE timestamp >= '2018-03-12 00:00:00' AND timestamp < '2018-03-13 00:00:00' AND idcase IS NOT NULL GROUP BY activity
SELECT activity, COUNT(*) AS num_instances FROM event_log WHERE DATE(timestamp) = '2018-03-12' AND activity IS NOT NULL GROUP BY activity ORDER BY num_instances DESC;
SELECT activity, COUNT(*) AS quantidade FROM event_log WHERE idcase IS NOT NULL AND timestamp BETWEEN '2018-03-02 00:00:00' AND '2018-03-02 23:59:59' GROUP BY activity ORDER BY quantidade DESC;
SELECT activity, COUNT(*) AS quantidade_casos FROM event_log WHERE timestamp <= '2018-03-02 23:59:59' AND idcase IS NOT NULL AND activity IS NOT NULL GROUP BY activity ORDER BY quantidade_casos DESC;
SELECT activity, COUNT(*) AS quantidade_casos FROM event_log WHERE timestamp <= '2018-03-02 23:59:59' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'FINALIZADO' GROUP BY idcase HAVING MAX(timestamp) <= '2018-03-02 23:59:59' ) GROUP BY activity ORDER BY quantidade_casos DESC;
SELECT activity, COUNT(*) AS quantidade_casos FROM event_log WHERE timestamp BETWEEN '2018-03-02 00:00:00' AND '2018-03-02 23:59:59' AND idcase IS NOT NULL GROUP BY activity ORDER BY quantidade_casos DESC;
SELECT activity, COUNT(*) AS num_declaracoes, SUM(CASE WHEN activity LIKE '%processada%' THEN 1 ELSE 0 END) AS num_processadas, SUM(CASE WHEN activity LIKE '%finalizada%' THEN 1 ELSE 0 END) AS num_finalizadas FROM event_log WHERE timestamp >= '2018-03-02 00:00:00' AND timestamp < '2018-03-03 00:00:00' GROUP BY activity;
SELECT activity, COUNT(CASE WHEN activity LIKE 'EXECUTED%' THEN 1 ELSE NULL END) AS executed, COUNT(CASE WHEN activity LIKE 'FINALIZED%' THEN 1 ELSE NULL END) AS finalized FROM event_log WHERE timestamp >= '2018-03-02 00:00:00' AND timestamp < '2018-03-03 00:00:00' GROUP BY activity
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'permissÃ£o%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'permissÃ£o%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'permissÃ£o%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'permissÃ£o%' AND id = (SELECT MIN(id) FROM event_log);
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'permissÃ£o%' AND id = 1;
SELECT COUNT(DISTINCT id) FROM event_log WHERE activity LIKE 'permissÃ£o%' ORDER BY COUNT(DISTINCT id) DESC;
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'permissÃ£o%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%processamento de declaraÃ§Ã£o de viagem%' AND idcase IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%permissao%' AND idcase IS NOT NULL;
SELECT idcase FROM "event_log" WHERE idcase NOT IN ( SELECT idcase FROM "event_log" WHERE activity IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') )
SELECT * FROM "event_log" WHERE "idcase" NOT IN ( SELECT "idcase" FROM "event_log" WHERE "activity" IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') )
SELECT * FROM "event_log" WHERE "idcase" NOT IN ( SELECT "idcase" FROM "event_log" WHERE "activity" IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') )
SELECT * FROM "event_log" WHERE "activity" NOT IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') GROUP BY "idcase" HAVING COUNT(DISTINCT "activity") = (SELECT COUNT(*) FROM "event_log" WHERE "idcase" IN (SELECT "idcase" FROM "event_log" WHERE "activity" IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado')))
SELECT DISTINCT "idcase" FROM "event_log" WHERE "activity" NOT IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') OR activity IS NULL;
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') AND idcase IS NOT NULL;
SELECT pi.id, pi.name FROM process_instances pi LEFT JOIN event_log el ON el.idcase = pi.id WHERE el.id IS NULL AND pi.name NOT IN ( SELECT el2.resource FROM event_log el2 WHERE el2.activity IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') )
SELECT idcase FROM event_log WHERE activity NOT IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado');
SELECT * FROM "event_log" AS el WHERE NOT EXISTS ( SELECT 1 FROM "event_log" AS el2 WHERE el2."activity" IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') AND el2."idcase" = el."idcase" )
SELECT COUNT(*) FROM event_log WHERE activity NOT IN ('payment', 'payment_request');
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE activity IN ('request_payment', 'payment_made') AND cost > 0 AND idcase IS NOT NULL AND timestamp > (SELECT MIN(timestamp) FROM event_log WHERE activity = 'payment_made')
SELECT * FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio') ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio') ORDER BY timestamp, resource;
SELECT timestamp, resource, activity FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio') ORDER BY timestamp, resource;
SELECT timestamp, resource, activity FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('inÃ­cio da viagem', 'declaraÃ§Ã£o requisitada pelo funcionÃ¡rio') ORDER BY timestamp, resource;
SELECT e.timestamp, r.name AS funcionario, e.activity FROM event_log e JOIN (SELECT DISTINCT resource AS name FROM event_log) r ON e.resource = r.name WHERE e.activity IN ('inÃ­cio de viagem','requisiÃ§Ã£o de declaraÃ§Ã£o') ORDER BY e.timestamp, r.name;
SELECT el.timestamp, el.activity, el.resource, el.cost, el.idcase, f.name FROM event_log el JOIN (SELECT DISTINCT idcase, name FROM event_log WHERE activity = 'inÃ­cio de viagem' OR activity ='requisiÃ§Ã£o de funcionÃ¡rio') f ON el.idcase = f.idcase ORDER BY el.timestamp, f.name;
SELECT resource, COUNT(*) AS frequency FROM event_log WHERE activity = 'declaraÃ§Ã£o salva pelo funcionÃ¡rio' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS num_registers FROM event_log WHERE activity = 'declaraÃ§Ã£o salva pelo funcionÃ¡rio' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS quantidade_registro FROM event_log WHERE activity = 'declaraÃ§Ã£o salva pelo funcionÃ¡rio' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS quantidade FROM event_log WHERE activity = 'declaraÃ§Ã£o salva pelo funcionÃ¡rio' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS ocorrencias FROM event_log WHERE activity = 'declaraÃ§Ã£o salva pelo funcionÃ¡rio' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS frequency FROM event_log WHERE activity = 'declaraÃ§Ã£o salva pelo funcionÃ¡rio' GROUP BY resource ORDER BY frequency DESC;
SELECT resource, COUNT(*) AS "Quantidade de vezes" FROM event_log WHERE activity = 'declaraÃ§Ã£o salva pelo funcionÃ¡rio' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS quantidade_associaÃ§Ãµes FROM event_log WHERE activity = 'declaraÃ§Ã£o salva pelo funcionÃ¡rio' GROUP BY resource ORDER BY quantidade_associaÃ§Ãµes DESC;
SELECT resource, COUNT(*) AS frequency FROM event_log WHERE activity = 'declaraÃ§Ã£o salva pelo funcionÃ¡rio' GROUP BY resource ORDER BY resource;
SELECT f.nome, COUNT(*) AS quantidade FROM event_log el JOIN funcionario f ON el.idcase = f.id WHERE el.activity ='salvar declaraÃ§Ã£o de viagem' GROUP BY f.nome ORDER BY f.nome;
SELECT f.nome, COUNT(*) as quantidade FROM event_log el JOIN funcionarios f ON el.idfuncionario = f.id WHERE el.activity ='salvar declaraÃ§Ã£o' GROUP BY f.nome ORDER BY f.nome;
SELECT activity, COUNT(*) AS "quantidade_de_casos" FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS num_cases FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) as quantidade_casos FROM event_log GROUP BY activity ORDER BY quantidade_casos DESC;
SELECT activity, COUNT(*) AS instances FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS num_instances FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as quantidade_execucoes FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) as num_cases FROM event_log GROUP BY activity ORDER BY num_cases DESC;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) as quantidade FROM event_log WHERE activity IN ('CREATE', 'UPDATE', 'DELETE', 'READ') GROUP BY activity ORDER BY quantidade DESC;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT resource, COUNT(DISTINCT activity) AS quantidade_atividades FROM event_log GROUP BY resource
SELECT "idcase", COUNT(DISTINCT "activity") AS "number_of_actions" FROM "event_log" GROUP BY "idcase" ORDER BY "number_of_actions" DESC;
SELECT "idcase" AS funcionario, COUNT(DISTINCT "activity") AS num_actions FROM "event_log" GROUP BY "idcase"
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity IN ('fim da viagem', 'pagamento efetuado') GROUP BY resource;
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity IN ('fim da viagem', 'pagamento efetuado') GROUP BY idcase;
SELECT resource, COUNT(*) AS ocorrencias FROM event_log WHERE activity IN ('fim da viagem', 'pagamento efetuado') GROUP BY resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity IN ('fim da viagem', 'pagamento efetuado') GROUP BY resource
SELECT resource, COUNT(*) AS frequency FROM event_log WHERE activity IN ('fim da viagem', 'pagamento efetuado') GROUP BY resource ORDER BY frequency DESC;
SELECT resource, COUNT(*) AS quantidade_vezes FROM event_log WHERE activity IN ('fim da viagem', 'pagamento efetuado') GROUP BY resource ORDER BY quantidade_vezes DESC;
SELECT COUNT(*) AS "quantidade_vezes", "idcase" AS "idcase" FROM "event_log" WHERE "activity" IN ('fim_viagem', 'efetuar_pagamento') GROUP BY "idcase"
SELECT e.idcase AS funcionario, COUNT(*) AS quantidade_atividades FROM event_log e WHERE e.activity IN ( SELECT activity FROM event_log WHERE activity LIKE '%finalizar viagem%' OR activity LIKE '%efetuar pagamento%' ) GROUP BY e.idcase
SELECT resource, COUNT(*) AS quantidade_ocorrencias FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' AND id = (SELECT MIN(id) FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador') GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_de_casos FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' GROUP BY resource HAVING COUNT(*) = 1;
SELECT resource, COUNT(*) AS num_instances FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' GROUP BY resource HAVING COUNT(*) = 1;
SELECT resource, COUNT(*) AS quantidade_ocorrencias FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' GROUP BY resource HAVING COUNT(*) = 1 ORDER BY resource;
SELECT resource, COUNT(*) AS quantidade_ocorrencias FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo prÃ©-aprovador' GROUP BY resource ORDER BY quantidade_ocorrencias DESC;
SELECT reviewer, COUNT(CASE WHEN activity = 'REVIEW' AND decision = 'REJECTED' THEN 1 ELSE NULL END) AS rejected_cases FROM event_log JOIN cases ON event_log.idcase = cases.idcase WHERE activity = 'REVIEW' AND idcase IN ( SELECT idcase FROM cases WHERE reviewer = cases.reviewer ) GROUP BY reviewer
SELECT e.idcase, COUNT(*) AS num_declaraÃ§Ãµes FROM event_log e WHERE e.activity = 'REJEITAR' AND e.resource LIKE '%DECLARAÃÃO DE VIAGEM%' AND e.idcase NOT LIKE '%APROVAR%' AND e.idcase NOT LIKE '%REJEITAR%' AND e.idcase NOT LIKE '%CANCELAR%' AND e.idcase NOT LIKE '%FINALIZAR%' GROUP BY e.idcase
SELECT idcase, COUNT(*) AS quantidade_ocorrencias FROM event_log WHERE activity!= 'fim da viagem' GROUP BY idcase ORDER BY idcase;
SELECT idcase, COUNT(*) AS num_occurrences FROM event_log WHERE activity!= 'fim da viagem' GROUP BY idcase ORDER BY idcase;
SELECT idcase, COUNT(*) AS num_occurrences FROM event_log WHERE activity!= 'fim da viagem' GROUP BY idcase HAVING MAX(CASE WHEN activity = 'fim da viagem' THEN id ELSE NULL END) IS NOT NULL;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity!= 'fim da viagem' GROUP BY idcase HAVING MAX(CASE WHEN activity = 'fim da viagem' THEN 1 ELSE NULL END) IS NOT NULL;
SELECT idcase, COUNT(*) AS num_occurrences FROM event_log WHERE activity!= 'fim da viagem' GROUP BY idcase ORDER BY idcase;
SELECT idcase, COUNT(*) AS num_occurrences FROM event_log WHERE activity!= 'fim da viagem' GROUP BY idcase ORDER BY idcase;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity = 'fim da viagem' GROUP BY idcase
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY idcase HAVING COUNT(*) = (SELECT MAX(qtde) FROM (SELECT idcase, COUNT(*) AS qtde FROM event_log WHERE activity!= 'fim da viagem' GROUP BY idcase) AS subquery)
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'fim da viagem' GROUP BY idcase HAVING MAX(CASE WHEN activity = 'fim da viagem' THEN 1 ELSE NULL END) IS NOT NULL;
SELECT idcase, COUNT(*) AS num_actions FROM event_log WHERE activity = 'FIM DA VIAGEM' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_actions FROM event_log WHERE idcase IS NOT NULL GROUP BY idcase ORDER BY num_actions DESC;
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp >= '2018-01-01' AND timestamp <= '2018-06-30';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp >= '2018-01-01' AND timestamp <= '2018-06-30';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp >= '2018-01-01' AND timestamp <= '2018-06-30';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%Thomas%' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT * FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp >= '2018-01-01' AND timestamp < '2018-06-30';
SELECT DISTINCT activity FROM event_log WHERE timestamp >= '2018-01-01' AND timestamp < '2018-06-30' AND activity LIKE '%Thomas%' OR resource LIKE '%Thomas%';
SELECT DISTINCT activity FROM event_log WHERE EXTRACT(MONTH FROM timestamp) BETWEEN 1 AND 6 AND EXTRACT(YEAR FROM timestamp) = 2018 AND "resource" LIKE '%Thomas%';
SELECT * FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT * FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT * FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT * FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT * FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT * FROM event_log WHERE activity = 'declaraÃ§Ã£o rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT * FROM event_log WHERE activity LIKE '%rejeiÃ§Ã£o%' AND resource LIKE '%declaraÃ§Ã£o%' OR resource LIKE '%viagem%' ORDER BY timestamp ASC;
SELECT * FROM event_log WHERE activity = 'REJECTED' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem' AND strftime('%Y-%m', timestamp) < '2018-03' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'fim da viagem' )
SELECT DISTINCT "resource" FROM "event_log" WHERE "activity" = 'inÃ­cio da viagem' AND strftime('%Y-%m', "timestamp") < '2018-03' AND "idcase" IS NOT NULL;
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem' COLLATE NOCASE AND timestamp < '2018-03-01 00:00:00';
SELECT * FROM "event_log" WHERE "activity" = 'inÃ­cio da viagem' AND "timestamp" < DATE('2018-03-31 23:59:59') AND "idcase" IS NOT NULL;
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem' AND timestamp < '2018-04-01 00:00:00' AND idcase IS NOT NULL;
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem' AND timestamp < '2018-04-01 00:00:00' AND idcase IS NOT NULL;
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem' AND timestamp < '2018-03-31 23:59:59' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'fim da viagem' )
SELECT DISTINCT "resource" FROM "event_log" WHERE "activity" = 'inÃ­cio da viagem' AND "timestamp" < '2018-03-31 23:59:59' HAVING NOT EXISTS ( SELECT 1 FROM "event_log" WHERE "activity" = 'fim da viagem' AND "resource" = "event_log"."resource" AND "timestamp" <= '2018-03-31 23:59:59' )
SELECT * FROM event_log WHERE activity = 'inÃ­cio da viagem' AND timestamp < '2018-04-01 00:00:00' AND idcase IS NOT NULL;
SELECT * FROM "event_log" WHERE "activity" = 'inÃ­cio da viagem' AND "timestamp" < '2018-03-31 23:59:59' AND "idcase" NOT IN ( SELECT "idcase" FROM "event_log" WHERE "activity" = 'fim da viagem' AND "timestamp" <= '2018-03-31 23:59:59' )
SELECT * FROM event_log WHERE activity = 'inÃ­cio de viagem' AND timestamp <= '2018-03-31 23:59:59' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity LIKE '%fim de viagem%' AND timestamp <= '2018-03-31 23:59:59' )
SELECT * FROM event_log WHERE activity = 'fim da viagem' AND NOT (activity ='requisiÃ§Ã£o de pagamento' OR activity = 'pagamento efetuado') AND resource!= 'idcase' -- ou seja, mais de um recurso atuou ORDER BY id;
SELECT idcase FROM event_log WHERE activity = 'fim da viagem' AND id NOT IN ( SELECT id FROM event_log WHERE activity IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT * FROM "event_log" WHERE activity = 'fim da viagem' AND NOT (activity ='requisiÃ§Ã£o de pagamento' OR activity = 'pagamento efetuado') AND COUNT(DISTINCT resource) > 1 GROUP BY idcase;
SELECT idcase FROM event_log WHERE activity = 'fim da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT DISTINCT e1.resource FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase AND e1.timestamp < e2.timestamp WHERE e1.activity = 'fim da viagem' AND e2.activity NOT IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') AND e1.id!= e2.id GROUP BY e1.resource HAVING COUNT(DISTINCT e2.resource) > 1;
SELECT * FROM event_log WHERE activity IN ('fim da viagem') AND activity NOT IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') AND EXISTS ( SELECT 1 FROM event_log AS e2 WHERE e2.id!= event_log.id AND e2.activity IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') AND e2.resource!= event_log.resource );
SELECT DISTINCT el1.resource AS resource1, el2.resource AS resource2 FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase WHERE el1.activity = 'fim da viagem' AND el2.activity NOT IN ('requisiÃ§Ã£o de pagamento', 'pagamento efetuado') AND el1.id < el2.id ORDER BY el1.id;
SELECT * FROM event_log WHERE cost = 0;
SELECT * FROM event_log WHERE activity = 'END_OF_TRIP' AND (cost = 0 OR idcase IS NULL) ORDER BY timestamp;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT resource, COUNT(*) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY resource
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase ORDER BY total_cost DESC;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase ORDER BY total_cost DESC;
SELECT idcase, SUM(cost) AS total_cost, COUNT(resource) AS num_resources FROM event_log GROUP BY idcase ORDER BY total_cost DESC;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log WHERE activity = 'declaraÃ§Ã£o de viagem' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity LIKE 'permissÃ£o%' AND id IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 ) GROUP BY idcase ORDER BY num_activities DESC;
SELECT idcase FROM event_log WHERE activity LIKE 'permissÃ£o%' AND id IN ( SELECT id FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 )
SELECT idcase FROM event_log WHERE activity LIKE 'permissÃ£o%' GROUP BY idcase HAVING COUNT(*) >= 2;
SELECT idcase, activity FROM event_log WHERE activity LIKE 'permissÃ£o%' AND activity!= 'permissÃ£o' GROUP BY idcase, activity HAVING COUNT(*) > 1;
SELECT idcase, activity FROM event_log WHERE activity LIKE 'permissÃ£o%' AND id IN ( SELECT id FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 ) ORDER BY idcase, activity;
SELECT idcase FROM event_log WHERE activity LIKE 'permissÃ£o%' AND id IN ( SELECT id FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 )
SELECT "idcase", "activity" FROM "event_log" WHERE "activity" LIKE 'permissÃ£o%' AND "id" IN ( SELECT "id" FROM "event_log" GROUP BY "idcase", "activity" HAVING COUNT("id") > 1 ) ORDER BY "idcase", "activity";
SELECT idcase FROM event_log WHERE activity LIKE 'permissÃ£o%' AND id IN ( SELECT id FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 );
SELECT * FROM event_log WHERE activity LIKE '%permission%' OR activity LIKE '%grant%' OR activity LIKE '%revoke%' OR activity LIKE '%alter%';
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity HAVING COUNT(*) > 1;
SELECT id FROM event_log ORDER BY timestamp DESC LIMIT 10;
SELECT idcase, id, timestamp FROM ( SELECT idcase, id, timestamp, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp DESC) AS row_num FROM event_log ) AS subquery WHERE row_num = 1 ORDER BY timestamp;
SELECT idcase, id, timestamp FROM ( SELECT idcase, id, timestamp, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp DESC) AS row_num FROM event_log ) AS subquery WHERE row_num = 1 ORDER BY timestamp;
SELECT id FROM event_log WHERE idcase IS NOT NULL ORDER BY timestamp DESC;
SELECT id, activity, timestamp, resource, cost, idcase, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp DESC) AS row_num FROM event_log ORDER BY row_num;
SELECT id FROM event_log WHERE id IN ( SELECT MAX(id) FROM event_log GROUP BY idcase ) ORDER BY timestamp DESC;
SELECT idcase, MAX(id) AS last_event_id, timestamp AS last_event_timestamp FROM event_log GROUP BY idcase ORDER BY last_event_timestamp;
SELECT id FROM event_log ORDER BY timestamp DESC
SELECT idcase, MAX(id) AS last_event_id FROM event_log GROUP BY idcase ORDER BY last_event_id DESC;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log WHERE activity LIKE '%processamento de declaraÃ§Ãµes%' AND id IN ( SELECT id FROM event_log GROUP BY activity HAVING COUNT(*) >= 100 ) ORDER BY COUNT(*) DESC;
SELECT g.group_name, COUNT(*) AS quantidade_casos FROM event_log el JOIN groups g ON el.activity IN (SELECT activities FROM groups WHERE group_name = g.group_name) GROUP BY g.group_name
SELECT grupo, COUNT(*) AS num_casos FROM event_log JOIN funcionarios ON event_log.idcase = funcionarios.id GROUP BY grupo
SELECT g.group_name, COUNT(e.id) AS "quantidade_de_casos" FROM "event_log" e INNER JOIN "group_activities" ga ON e.activity = ga.activity INNER JOIN "groups" g ON ga.group_name = g.group_name GROUP BY g.group_name ORDER BY g.group_name;
SELECT CASE WHEN activity LIKE '%funcionÃ¡rio%' THEN 'FuncionÃ¡rio' WHEN activity LIKE '%supervisor%' THEN 'Supervisor' WHEN activity LIKE '%administraÃ§Ã£o%' THEN 'AdministraÃ§Ã£o' WHEN activity LIKE '%prÃ©-aprovador%' THEN 'PrÃ©-aprovador' WHEN activity LIKE '%responsÃ¡vel pelo orÃ§amento%' THEN 'ResponsÃ¡vel pelo orÃ§amento' WHEN activity LIKE '%diretor%' THEN 'Diretor' END AS grupo, COUNT(*) AS quantidade_casos FROM event_log GROUP BY grupo
SELECT g.group_name, COUNT(el.id) AS count FROM "event_log" el JOIN "activity_groups" ag ON el.activity = ag.activity JOIN "groups" g ON ag.group_name = g.group_name GROUP BY g.group_name ORDER BY g.group_name;
SELECT activity, COUNT(*) AS frequency, resource, CASE WHEN resource LIKE '%funcionÃ¡rio%' THEN 'FuncionÃ¡rio' WHEN resource LIKE '%supervisor%' THEN 'Supervisor' WHEN resource LIKE '%administraÃ§Ã£o%' THEN 'AdministraÃ§Ã£o' WHEN resource LIKE '%prÃ©-aprovador%' THEN 'PrÃ©-aprovador' WHEN resource LIKE '%responsÃ¡vel pelo orÃ§amento%' THEN 'ResponsÃ¡vel pelo OrÃ§amento' WHEN resource LIKE '%diretor%' THEN 'Diretor' ELSE 'Outro' END AS resource_group FROM event_log GROUP BY activity, resource, CASE WHEN resource LIKE '%funcionÃ¡rio%' THEN 'FuncionÃ¡rio' WHEN resource LIKE '%supervisor%' THEN 'Supervisor' WHEN resource LIKE '%administraÃ§Ã£o%' THEN 'AdministraÃ§Ã£o' WHEN resource LIKE '%prÃ©-aprovador%' THEN 'PrÃ©-aprovador' WHEN resource LIKE '%responsÃ¡vel pelo orÃ§amento%' THEN 'ResponsÃ¡vel pelo OrÃ§amento' WHEN resource LIKE '%diretor%' THEN 'Diretor' ELSE 'Outro' END ORDER BY frequency DESC, resource_group;
SELECT group_concat(DISTINCT activity ORDER BY activity SEPARATOR ', ') AS grupo, COUNT(*) AS quantidade_execucoes FROM event_log GROUP BY CASE WHEN resource LIKE '%funcionÃ¡rio%' THEN 'FuncionÃ¡rio' WHEN resource LIKE '%supervisor%' THEN 'Supervisor' WHEN resource LIKE '%administraÃ§Ã£o%' THEN 'AdministraÃ§Ã£o' WHEN resource LIKE '%prÃ©-aprovador%' THEN 'PrÃ©-aprovador' WHEN resource LIKE '%responsÃ¡vel pelo orÃ§amento%' THEN 'ResponsÃ¡vel pelo OrÃ§amento' WHEN resource LIKE '%diretor%' THEN 'Diretor' END ORDER BY quantidade_execucoes DESC;
SELECT SUBSTRING(activity, INSTR(activity, '(') + 1, INSTR(activity, ')') - INSTR(activity, '(') - 1) AS cargo, COUNT(*) AS quantidade FROM event_log WHERE activity REGEXP '^[^()]*\(' -- filtro para apenas aÃ§Ãµes que contenham um parÃªnteses GROUP BY cargo ORDER BY quantidade DESC;
SELECT * FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'FinalizaÃ§Ã£o da viagem' ) AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'FinalizaÃ§Ã£o da viagem' )
SELECT idcase FROM event_log WHERE activity!= 'FINALIZA_VIAGEM' AND id IN ( SELECT id FROM event_log WHERE activity = 'FINALIZA_VIAGEM' ORDER BY timestamp DESC LIMIT 1 ) ORDER BY idcase;
SELECT * FROM "event_log" WHERE "activity" = 'FINALIZAÃÃO_VIAGEM' ORDER BY "timestamp" DESC;
SELECT * FROM event_log WHERE idcase = '123' AND timestamp < (SELECT MAX(timestamp) FROM event_log WHERE idcase = '123')
SELECT DISTINCT idcase FROM event_log WHERE idcase > idcase_end_trip ORDER BY idcase;
SELECT DISTINCT resource FROM event_log WHERE activity IN ('checkin', 'checkout', 'end_trip', 'finish_trip') ORDER BY resource;
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp DESC LIMIT 1;
SELECT COUNT(*) FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp DESC LIMIT 1;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp DESC LIMIT 1;
SELECT COUNT(*) FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp DESC LIMIT 1;
SELECT COUNT(*) FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp DESC LIMIT 1;
SELECT COUNT(*) FROM event_log WHERE activity = 'envio de lembrete';
SELECT DISTINCT resource FROM event_log WHERE timestamp >= '2018-03-31 00:00:00' AND timestamp < '2018-04-01 00:00:00' AND activity!= 'WORKING';
SELECT DISTINCT resource FROM "event_log" WHERE "timestamp" >= '2018-03-31 00:00:00' AND "timestamp" < '2018-04-01 00:00:00' EXCEPT SELECT resource FROM "event_log" GROUP BY resource HAVING COUNT(*) = 0;
SELECT DISTINCT resource FROM event_log WHERE timestamp NOT LIKE '%2018-03-31%' AND resource NOT IN ( SELECT resource FROM event_log WHERE timestamp LIKE '%2018-03-31%' )
SELECT DISTINCT resource FROM event_log WHERE timestamp BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59' AND cost = 0;
SELECT f.nome FROM funcionarios f WHERE f.id NOT IN ( SELECT el.idcase FROM event_log el WHERE el.activity LIKE '%declaraÃ§Ã£o de viagem%' AND el.timestamp >= '2018-03-31 00:00:00' AND el.timestamp < '2018-04-01 00:00:00' ) AND f.id NOT IN ( SELECT el.idcase FROM event_log el WHERE el.activity NOT LIKE '%declaraÃ§Ã£o de viagem%' AND el.timestamp >= '2018-03-31 00:00:00' AND el.timestamp < '2018-04-01 00:00:00' )
SELECT f.nome FROM funcionarios f LEFT JOIN event_log el ON f.idcase = el.idcase WHERE el.activity LIKE '%processamento de declaraÃ§Ã£o%' AND el.timestamp >= '2018-03-31 00:00:00' AND el.timestamp < '2018-04-01 00:00:00' GROUP BY f.nome HAVING COUNT(el.id) = 0
SELECT activity, COUNT(*) AS quantidade_eventos FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND idcase = 'finalizado' GROUP BY activity ORDER BY quantidade_eventos DESC;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND idcase NOT LIKE '%open%' -- considerando apenas casos finalizados GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE idcase = 'concluido' AND timestamp BETWEEN '2018-12-01 00:00:00' AND '2018-12-05 23:59:59' GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE idcase NOT LIKE '%open%' AND timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND idcase = 'finalizado' GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE activity LIKE '%finalizado%' AND timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity ORDER BY frequency DESC;
SELECT COUNT(DISTINCT idcase) AS "NÃºmero de casos sem registro de pagamento efetuado" FROM event_log WHERE activity!= 'pagamento efetuado';
SELECT COUNT(*) FROM event_log WHERE activity!= 'pagamento efetuado';
SELECT COUNT(*) FROM event_log WHERE activity!= 'pagamento efetuado';
SELECT COUNT(*) FROM event_log WHERE activity!= 'pagamento efetuado';
SELECT COUNT(*) FROM event_log WHERE activity!= 'pagamento efetuado';
SELECT COUNT(DISTINCT idcase) AS num_declaraÃ§Ãµes_sem_pagamento FROM event_log WHERE activity NOT LIKE '%payment%'
SELECT COUNT(*) FROM "event_log" WHERE "activity"!= 'payment' OR "cost" IS NULL;
SELECT idcase FROM event_log WHERE activity!= 'payment_realization' ORDER BY idcase;
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity ORDER BY num_resources DESC;
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity ORDER BY activity;
SELECT activity, COUNT(DISTINCT resource) AS quantidade_recursos FROM event_log GROUP BY activity ORDER BY quantidade_recursos DESC;
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity ORDER BY num_resources DESC;
SELECT el.activity, COUNT(DISTINCT el.resource) AS num_resources FROM event_log el GROUP BY el.activity ORDER BY num_resources DESC;
SELECT DISTINCT el1.activity FROM event_log el1 JOIN event_log el2 ON el1.id < el2.id AND el2.activity = 'envio de lembrete' ORDER BY el1.activity;
SELECT activity FROM event_log WHERE activity = 'envio de um lembrete' ORDER BY timestamp DESC LIMIT 1;
SELECT el1.activity AS "Antecedente", el2.activity AS "Lembrete" FROM event_log el1 JOIN event_log el2 ON el1.id = el2.id - 1 WHERE el1.activity LIKE '%viagem%' AND el2.activity LIKE '%lembrete%' AND el1.timestamp < el2.timestamp;
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY idcase ORDER BY quantidade_eventos DESC;
SELECT idcase, COUNT(*) AS num_events, COUNT(*)/ (SELECT COUNT(DISTINCT idcase) FROM event_log) AS percentage FROM event_log GROUP BY idcase ORDER BY num_events DESC;
SELECT COUNT(idcase) AS quantidade_eventos, idcase AS caso FROM event_log GROUP BY idcase ORDER BY quantidade_eventos DESC;
SELECT idcase, COUNT(*) as event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC;
SELECT COUNT(*) AS "quantidade_de_eventos", "resource" AS "declaraÃ§Ã£o" FROM "event_log" GROUP BY "resource" ORDER BY "quantidade_de_eventos" DESC;
SELECT AVG(total_cost) AS average_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS case_costs;
SELECT AVG(total_cost) AS average_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS case_costs;
SELECT AVG(total_cost) AS average_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS case_costs;
SELECT AVG(SUM("cost")) AS media_custo_total FROM "event_log" GROUP BY "idcase"
SELECT AVG(SUM(cost)) AS media_custo_total FROM event_log GROUP BY idcase;
SELECT AVG("cost") AS "media_custo" FROM "event_log" WHERE "activity" = 'declaraÃ§Ã£o';
SELECT resource, AVG(cost) AS media_custo FROM event_log GROUP BY resource;
SELECT resource, AVG(cost) AS media_custo FROM event_log GROUP BY resource;
SELECT resource, AVG(cost) AS media_custo FROM event_log GROUP BY resource
SELECT resource, AVG(cost) AS media_custo FROM event_log GROUP BY resource;
SELECT resource, AVG(cost) AS media_custo FROM event_log GROUP BY resource;
SELECT r.employee, AVG(el.cost) AS average_cost FROM "responsibility" r INNER JOIN "event_log" el ON r.event_id = el.id GROUP BY r.employee
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 10;
SELECT funcionario_nome, COUNT(*) AS quantidade_de_requisitos FROM "funcionario_event_log" GROUP BY funcionario_nome ORDER BY quantidade_de_requisitos DESC LIMIT 10;
SELECT DATE(timestamp) AS data, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, COUNT(*) AS quantidade_de_ocorrencias FROM event_log GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, COUNT(*) AS quantidade_de_acoes FROM event_log GROUP BY DATE(timestamp) ORDER BY data;
SELECT el1.id, el1.activity, el1.timestamp, el1.resource, el1.idcase, el2.resource AS "Subsequent Resource" FROM event_log el1 JOIN event_log el2 ON el1.id = el2.id - 1 WHERE el1.activity = el2.activity AND el1.resource!= el2.resource ORDER BY el1.id;
SELECT el1.activity, el1.resource AS resource1, el2.resource AS resource2 FROM event_log el1 JOIN event_log el2 ON el1.activity = el2.activity AND el1.id = el2.id - 1 WHERE el1.resource!= el2.resource;
SELECT activity, idcase, resource, timestamp FROM event_log WHERE activity IN ( SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(DISTINCT resource) > 1 ) ORDER BY timestamp;
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity!= 'declaraÃ§Ã£o final aprovada pelo diretor' GROUP BY idcase
SELECT COUNT(*) AS num_eventos_antecedentes FROM event_log WHERE activity = 'declaraÃ§Ã£o final aprovada pelo diretor' AND id IN ( SELECT id FROM event_log WHERE activity!= 'declaraÃ§Ã£o final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1 OFFSET 0 );
SELECT idcase, COUNT(*) AS num_intervencoes FROM event_log WHERE activity LIKE '%aprovado%' AND idcase IS NOT NULL GROUP BY idcase
SELECT TIMESTAMPDIFF(SECOND, (SELECT timestamp FROM event_log WHERE activity = 'permissÃ£o requisitada pelo funcionÃ¡rio'), (SELECT timestamp FROM event_log WHERE activity = 'permissÃ£o aprovada pela administraÃ§Ã£o') ) AS tempo_passado FROM event_log WHERE activity IN ('permissÃ£o requisitada pelo funcionÃ¡rio', 'permissÃ£o aprovada pela administraÃ§Ã£o') GROUP BY idcase HAVING COUNT(DISTINCT activity) = 2;
WITH grouped_events AS ( SELECT idcase, activity, timestamp, LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS prev_timestamp FROM event_log WHERE activity IN ('permissÃ£o requisitada pelo funcionÃ¡rio', 'permissÃ£o aprovada pela administraÃ§Ã£o') ) SELECT idcase, activity, timestamp, TIMESTAMPDIFF(SECOND, prev_timestamp, timestamp) AS time_interval FROM grouped_events WHERE activity = 'permissÃ£o aprovada pela administraÃ§Ã£o' AND prev_timestamp IS NOT NULL;
SELECT TIMESTAMPDIFF(SECOND, (SELECT timestamp FROM event_log WHERE activity = 'REQUISICAO_PERMISSAO' AND idcase = 'X'), (SELECT timestamp FROM event_log WHERE activity = 'APROVACAO_PERMISSAO' AND idcase = 'X')) AS tempo_passado FROM event_log WHERE activity IN ('REQUISICAO_PERMISSAO', 'APROVACAO_PERMISSAO') AND idcase = 'X';
SELECT idcase, activity, COUNT(*) AS num_activities FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1;
SELECT idcase, resource, COUNT(*) as num_accesses FROM event_log WHERE timestamp >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 DAY) -- ajuste o perÃ­odo de tempo desejado GROUP BY idcase, resource HAVING COUNT(*) > 1;
SELECT * FROM event_log WHERE activity LIKE '%retrabalho%' OR activity LIKE '%rework%';
SELECT A pergunta Ã© um pouco vaga, mas vou tentar ajudar. Em SQL, "retrabalho" (ou "rework" em inglÃªs) se refere ao uso de colunas ou Ã­ndices que jÃ¡ existem em uma tabela, em vez de criar novos. No entanto, no esquema de banco de dados fornecido, nÃ£o hÃ¡ declaraÃ§Ãµes que indiquem retrabalho. A declaraÃ§Ã£o CREATE TABLE Ã© a Ãºnica declaraÃ§Ã£o fornecida, e ela cria uma tabela com sete colunas. NÃ£o hÃ¡ nenhuma coluna ou Ã­ndice que seja reutilizado de outra tabela. Portanto, a resposta Ã©: nÃ£o hÃ¡ declaraÃ§Ãµes que indiquem retrabalho no esquema de banco de dados fornecido.
SELECT A pergunta Ã© um pouco confusa, pois nÃ£o hÃ¡ nenhuma declaraÃ§Ã£o de SQL que precise ser executada. No entanto, se vocÃª estiver perguntando sobre quais colunas do esquema de banco de dados "event_log" podem ter problemas com retrabalho, aqui estÃ£o algumas possibilidades: * A coluna "id" pode ter problemas com retrabalho se nÃ£o for gerada automaticamente pelo banco de dados, pois isso pode causar duplicatas. * A coluna "idcase" pode ter problemas com retrabalho se nÃ£o for Ãºnica para cada caso, pois isso pode causar confusÃ£o ao tentar relacionar as atividades com os casos. * A coluna "resource" pode ter problemas com retrabalho se nÃ£o for verificada se o recurso existe antes de ser adicionado ao log de eventos. Em resumo, essas colunas podem ter problemas com retrabalho se nÃ£o forem implementadas corretamente.
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT * FROM ( SELECT *, LAG(activity) OVER (ORDER BY timestamp) AS prev_activity FROM event_log ) AS t WHERE activity = prev_activity;
SELECT idcase, activity, timestamp, resource, cost FROM event_log WHERE id IN ( SELECT id FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 ) ORDER BY idcase, activity;
SELECT activity, COUNT(*) AS consecutivos FROM event_log WHERE activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) GROUP BY activity ORDER BY consecutivos DESC;
SELECT A pergunta Ã© um pouco confusa, pois nÃ£o hÃ¡ declaraÃ§Ãµes que tenham problemas de intervenÃ§Ãµes iguais e seguidas. No entanto, posso tentar ajudar. A declaraÃ§Ã£o CREATE TABLE "event_log" Ã© uma declaraÃ§Ã£o de criaÃ§Ã£o de tabela, e nÃ£o hÃ¡ problemas de intervenÃ§Ãµes iguais e seguidas nessa declaraÃ§Ã£o. A declaraÃ§Ã£o SELECT nÃ£o Ã© uma declaraÃ§Ã£o que tenha problemas de intervenÃ§Ãµes iguais e seguidas, pois Ã© uma declaraÃ§Ã£o de seleÃ§Ã£o de dados e nÃ£o tem intervenÃ§Ãµes. Se vocÃª estÃ¡ se referindo a problemas de intervenÃ§Ãµes iguais e seguidas em uma query SQL, Ã© importante notar que esses problemas sÃ£o comuns em queries que envolvem operaÃ§Ãµes de agrupamento, ordenaÃ§Ã£o e filtragem. Se vocÃª pode fornecer mais informaÃ§Ãµes sobre o problema que vocÃª estÃ¡ enfrentando, posso tentar ajudar a resolver.
SELECT resource, activity FROM event_log WHERE id = LAG(id) + 1 AND activity = LAG(activity) ORDER BY resource, activity;
SELECT O problema Ã© que o esquema de banco de dados fornecido nÃ£o contÃ©m informaÃ§Ãµes sobre funcionÃ¡rios ou supervisores. O esquema "event_log" parece ser um registro de atividades no sistema, com campos como "activity", "timestamp", "resource", "cost" e "idcase". Portanto, nÃ£o Ã© possÃ­vel responder a essa pergunta com base no esquema fornecido. Seria necessÃ¡rio adicionar uma tabela de funcionÃ¡rios e uma tabela de relaÃ§Ãµes entre funcionÃ¡rios e supervisores para responder essa pergunta.
SELECT Para responder Ã  sua pergunta, precisamos analisar o esquema de banco de dados e identificar quais informaÃ§Ãµes estÃ£o disponÃ­veis. No entanto, nÃ£o hÃ¡ informaÃ§Ãµes sobre funcionÃ¡rios ou supervisores no esquema fornecido. O esquema "event_log" parece ser um registro de atividades no sistema, com informaÃ§Ãµes sobre a atividade realizada, o tempo em que foi realizada, o recurso utilizado, o custo da atividade e um identificador de caso. NÃ£o hÃ¡ informaÃ§Ãµes sobre funcionÃ¡rios ou supervisores. Portanto, nÃ£o Ã© possÃ­vel responder Ã  sua pergunta com base no esquema fornecido. Se vocÃª tiver mais informaÃ§Ãµes sobre o banco de dados ou quaisquer outras tabelas relacionadas, posso ajudar a responder Ã  sua pergunta.
SELECT f.nome FROM funcionarios f JOIN event_log el ON f.id =? (identificar como relacionar os funcionÃ¡rios com as atividades de orÃ§amento) WHERE el.activity LIKE '%orÃ§amento%' Lembre-se de que essa Ã© apenas uma suposiÃ§Ã£o e que a consulta real dependeria das informaÃ§Ãµes especÃ­ficas do seu banco de dados.
SELECT DISTINCT resource AS funcionario FROM event_log WHERE activity LIKE '%orÃ§amento%' OR activity LIKE '%budget%';
