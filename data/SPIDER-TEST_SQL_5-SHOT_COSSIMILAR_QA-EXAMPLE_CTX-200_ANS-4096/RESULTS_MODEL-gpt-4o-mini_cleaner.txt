SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) AS end_trip_count FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) AS end_trip_count FROM event_log WHERE activity = 'End trip';
SELECT count(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) AS end_trip_count FROM event_log WHERE activity = 'End trip';
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT COUNT(*) FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.resource = 'James' AND e2.activity = 'End trip' AND e1.timestamp < e2.timestamp;
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE resource = 'James' AND activity = 'End trip';
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT COUNT(*) AS event_count, resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT COUNT(*) AS event_count, resource FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS resource_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS occurrence_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS activity_performance_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS activity_performance_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_actions FROM event_log GROUP BY resource;
SELECT count(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) AS activity_count FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*), activity FROM event_log WHERE resource = 'Peter' GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) AS actions_taken FROM event_log WHERE resource = 'Peter';
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) BETWEEN '2018-03-01' AND '2018-03-31 23:59:59';
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) BETWEEN '2018-03-01' AND '2018-03-31 23:59:59';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Terminate' AND timestamp BETWEEN '2018-03-01' AND '2018-03-31';
SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) >= '2018-03-01' AND MAX(timestamp) < '2018-04-01';
SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MAX(timestamp)) = '2018-03';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp >= '2018-03-01' AND timestamp < '2018-04-01';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp >= '2018-03-01' AND timestamp < '2018-04-01';
SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) >= '2018-03-01' AND MAX(timestamp) < '2018-04-01';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource = 'Douglas' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'declaration rejected by pre-approver' AND resource != 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'declaration rejected by pre-approver' AND resource != 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource = 'Douglas' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource <> 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource = 'Douglas' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource <> 'Douglas';
SELECT * FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource <> 'Douglas';
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) AS number_of_people FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) AS unique_resources FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) AS different_resources FROM event_log WHERE activity IS NOT NULL;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) AS unique_people_count FROM event_log;
SELECT COUNT(DISTINCT resource) AS number_of_employees FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_actions FROM event_log GROUP BY resource;
SELECT DISTINCT idcase FROM event_log WHERE cost > 2225;
SELECT DISTINCT idcase FROM event_log WHERE cost > 2225;
SELECT idcase FROM event_log WHERE cost > 2225;
SELECT DISTINCT idcase FROM event_log WHERE cost > 2225;
SELECT DISTINCT idcase FROM event_log WHERE cost > 2225;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity LIKE '%processing declaration%' GROUP BY resource ORDER BY activity_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING COUNT(*) = ( SELECT MAX(event_count) FROM ( SELECT COUNT(*) AS event_count FROM event_log GROUP BY resource ) AS subquery );
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING COUNT(*) = ( SELECT MAX(event_count) FROM ( SELECT COUNT(*) AS event_count FROM event_log GROUP BY resource ) AS subquery );
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS action_count FROM event_log GROUP BY resource ORDER BY action_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS performance_count FROM event_log GROUP BY resource ORDER BY performance_count DESC;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity LIKE '%declaration%' GROUP BY resource ORDER BY activity_count DESC;
SELECT * FROM event_log WHERE cost IS NOT NULL AND cost <> 0;
SELECT * FROM event_log WHERE cost > 0;
SELECT * FROM event_log WHERE cost > 0;
SELECT * FROM event_log WHERE cost IS NOT NULL AND cost <> 0;
SELECT * FROM event_log WHERE cost IS NOT NULL AND cost <> 0;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Request payment';
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Request payment';
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Request payment';
SELECT * FROM event_log WHERE activity IN ('Start trip', 'Request payment');
SELECT * FROM event_log WHERE activity = 'Start trip' UNION SELECT * FROM event_log WHERE activity = 'Request payment';
SELECT activity, COUNT(*) AS activity_count FROM event_log GROUP BY activity ORDER BY activity_count DESC LIMIT 10; -- Adjust the limit as needed to get more or fewer results
SELECT activity, COUNT(*) AS activity_count FROM event_log GROUP BY activity ORDER BY activity_count DESC;
SELECT activity, COUNT(*) AS occurrence_count FROM event_log GROUP BY activity ORDER BY occurrence_count DESC;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) = ( SELECT MAX(activity_count) FROM ( SELECT COUNT(*) AS activity_count FROM event_log GROUP BY activity ) );
SELECT activity, COUNT(*) as activity_count FROM event_log GROUP BY activity ORDER BY activity_count DESC LIMIT 1;
SELECT activity, COUNT(*) AS occurrence_count FROM event_log GROUP BY activity ORDER BY occurrence_count DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) AS performance_count FROM event_log GROUP BY activity ORDER BY performance_count DESC;
SELECT activity, COUNT(*) AS activity_count FROM event_log GROUP BY activity ORDER BY activity_count DESC;
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01' ORDER BY timestamp;
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01' AND idcase LIKE 'declaration%'
SELECT activity, COUNT(*) AS action_count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity;
SELECT activity, COUNT(*) AS action_count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity ORDER BY action_count DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource ORDER BY case_count DESC LIMIT 5;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource ORDER BY case_count DESC LIMIT 5;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource ORDER BY case_count DESC LIMIT 5;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource ORDER BY case_count DESC LIMIT 5;
SELECT resource, COUNT(*) AS declaration_count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource ORDER BY declaration_count DESC LIMIT 5;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5;
SELECT resource, COUNT(*) AS action_count FROM event_log GROUP BY resource ORDER BY action_count DESC LIMIT 5;
SELECT resource, COUNT(*) AS start_trip_count FROM event_log WHERE activity = 'Start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource;
SELECT resource, COUNT(*) AS occurrences FROM event_log WHERE activity = 'Start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource;
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'Start trip' AND timestamp >= '2016-01-01' AND timestamp < '2017-01-01' GROUP BY resource;
SELECT resource, COUNT(*) AS occurrence_count FROM event_log WHERE activity = 'Start trip' AND timestamp >= '2016-01-01' AND timestamp < '2017-01-01' GROUP BY resource;
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'Start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS occurrences FROM event_log WHERE activity = 'Start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource;
SELECT resource, COUNT(*) AS occurrences FROM event_log WHERE activity = 'Start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource;
SELECT resource, COUNT(*) AS action_count FROM event_log WHERE activity = 'Start trip' AND timestamp >= '2016-01-01' AND timestamp < '2017-01-01' GROUP BY resource;
SELECT COUNT(*) AS activity_count, resource FROM event_log WHERE activity = 'Start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource;
SELECT COUNT(*) AS activity_count, resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*) AS occurrence_count, resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*) AS occurrence_count, resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*) AS performance_count, resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*) AS occurrence_count, resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*) AS performance_count, resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*) AS occurrence_count, resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*) AS occurrence_count, resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*) AS total_occurrences, resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*) AS rejection_count, resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase, COUNT(*) AS activity_count FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC;
SELECT idcase, COUNT(activity) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) = ( SELECT MAX(activity_count) FROM ( SELECT COUNT(activity) AS activity_count FROM event_log GROUP BY idcase ) AS counts );
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 5;
SELECT idcase, MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment');
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment');
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment');
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment');
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment') AND resource = 'Sara';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' );
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaration 143598';
SELECT * FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-02';
SELECT cost FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT cost FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = '143598';
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS declaration_count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT idcase, COUNT(*) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(DISTINCT activity) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(activity) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(*) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(*) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(activity) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(*) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(*) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(*) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(DISTINCT activity) AS action_count FROM event_log GROUP BY idcase ORDER BY action_count DESC, idcase DESC LIMIT 10;
SELECT idcase, COUNT(DISTINCT activity) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC, idcase DESC LIMIT 10;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) AS action_count FROM event_log GROUP BY idcase ORDER BY action_count DESC LIMIT 10;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS action_count FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY action_count DESC;
SELECT idcase, id, activity, timestamp, resource, cost FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, id, activity, timestamp, resource, cost FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, id, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT * FROM event_log ORDER BY idcase, timestamp;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'declaration approved by administration' GROUP BY resource;
SELECT COUNT(*) AS total_performances, resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT COUNT(*) AS total_activities, resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT COUNT(*) AS occurrence_count, resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT COUNT(*) AS approval_count, resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT COUNT(*) AS event_count, resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT COUNT(*) AS event_count, resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT COUNT(*) AS approval_count, resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT activity, COUNT(*) AS activity_count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity ORDER BY activity_count DESC;
SELECT activity, COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity ORDER BY COUNT(*) DESC;
SELECT activity, COUNT(*) AS occurrences FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity ORDER BY occurrences DESC;
SELECT activity, COUNT(*) AS action_count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT COUNT(*) AS occurrence_count, activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT COUNT(*) AS total_actions FROM event_log WHERE resource = 'Thomas' AND activity IN ('Declaration submitted by employee', 'Declaration reviewed', 'Declaration approved') -- Add other relevant activities as needed AND timestamp >= '2017-01-01' AND timestamp < '2018-01-01';
SELECT activity, MAX(timestamp) AS most_recent_date FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS most_recent_date FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS most_recent_performance FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS last_performance FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS latest_performance FROM event_log GROUP BY activity ORDER BY activity;
SELECT activity, MAX(timestamp) AS last_occurrence FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS most_recent_performance FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS last_record_date FROM event_log GROUP BY activity;
SELECT To count the number of times the 'declaration approved by supervisor' activity and 'permit rejected by employee' activity were performed in the years 2017 and 2018, you can use the following SQL query. This query will use a `UNION ALL` to combine the counts for both activities and filter the results based on the timestamp for the specified years. ```sql SELECT 'declaration approved by supervisor' AS activity, COUNT(*) AS count FROM event_log WHERE activity = 'declaration approved by supervisor' AND timestamp >= '2017-01-01' AND timestamp < '2019-01-01' UNION ALL SELECT 'permit rejected by employee' AS activity, COUNT(*) AS count FROM event_log WHERE activity = 'permit rejected by employee' AND timestamp >= '2017-01-01' AND timestamp < '2019
SELECT COUNT(*) AS instances, 'declaration approved by supervisor' AS activity FROM event_log WHERE activity = 'Declaration approved by supervisor' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31' UNION ALL SELECT COUNT(*) AS instances, 'permit rejected by employee' AS activity FROM event_log WHERE activity = 'Permit rejected by employee' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31';
SELECT SUM(CASE WHEN activity = 'Declaration approved by supervisor' AND strftime('%Y', timestamp) = '2017' THEN 1 ELSE 0 END) AS declaration_approved_2017, SUM(CASE WHEN activity = 'Permit rejected by employee' AND strftime('%Y', timestamp) = '2018' THEN 1 ELSE 0 END) AS permit_rejected_2018 FROM event_log;
SELECT SUM(CASE WHEN activity = 'declaration approved by supervisor' AND strftime('%Y', timestamp) = '2017' THEN 1 ELSE 0 END) AS declaration_approved_2017, SUM(CASE WHEN activity = 'permit rejected by employee' AND strftime('%Y', timestamp) = '2018' THEN 1 ELSE 0 END) AS permit_rejected_2018 FROM event_log;
SELECT SUM(CASE WHEN activity = 'Declaration approved by supervisor' AND strftime('%Y', timestamp) = '2017' THEN 1 ELSE 0 END) AS declaration_approved_2017, SUM(CASE WHEN activity = 'Permit rejected by employee' AND strftime('%Y', timestamp) = '2018' THEN 1 ELSE 0 END) AS permit_rejected_2018 FROM event_log;
SELECT SUM(CASE WHEN activity = 'Declaration approved by supervisor' AND strftime('%Y', timestamp) = '2017' THEN 1 ELSE 0 END) AS declarations_approved_2017, SUM(CASE WHEN activity = 'Permit rejected by employee' AND strftime('%Y', timestamp) = '2018' THEN 1 ELSE 0 END) AS permits_rejected_2018 FROM event_log;
SELECT activity, timestamp AS performance_end_date, id AS event_identifier FROM event_log ORDER BY timestamp;
SELECT activity, timestamp AS performance_end_date, id FROM event_log ORDER BY timestamp;
SELECT activity, timestamp AS performance_end_date, id AS action_identifier FROM event_log WHERE activity LIKE '%declaration%' ORDER BY timestamp;
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'Declaration submitted by employee';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaration submitted by employee';
SELECT count(*) FROM event_log WHERE activity = 'Declaration submitted by employee' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration submitted by employee' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration submitted by employee' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaration_request';
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT * FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL AND activity LIKE '%declaration%'
SELECT activity, COUNT(*) AS event_count FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity;
SELECT activity FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 );
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 );
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 );
SELECT COUNT(DISTINCT resource) AS number_of_resources FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 );
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 );
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaration rejected by pre-approver';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaration rejected by pre-approver';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND timestamp >= '2017-01-01' AND timestamp < '2017-06-01';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND timestamp >= '2017-01-01' AND timestamp < '2017-06-01';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND timestamp >= '2017-01-01' AND timestamp < '2017-06-01';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01' );
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01' );
SELECT DISTINCT e.idcase FROM event_log e WHERE e.resource = 'Charles' AND NOT EXISTS ( SELECT 1 FROM event_log e2 WHERE e2.idcase = e.idcase AND strftime('%Y-%m', e2.timestamp) = '2018-01' );
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-01-31' );
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND timestamp NOT BETWEEN '2018-01-01' AND '2018-01-31';
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase;
WITH RankedEvents AS ( SELECT idcase, MIN(timestamp) AS start_time, MAX(timestamp) AS end_time FROM event_log GROUP BY idcase ) SELECT idcase, (strftime('%s', end_time) - strftime('%s', start_time)) AS total_duration FROM RankedEvents;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration_seconds FROM event_log GROUP BY idcase;
SELECT idcase, (MAX(timestamp) - MIN(timestamp)) AS case_duration FROM event_log GROUP BY idcase;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase;
WITH StartEndTimes AS ( SELECT idcase, MIN(timestamp) AS start_time, MAX(timestamp) AS end_time FROM event_log GROUP BY idcase ) SELECT idcase, strftime('%s', end_time) - strftime('%s', start_time) AS processing_duration FROM StartEndTimes;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, MIN(resource) AS resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 ) ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp >= '2016-01-01' AND timestamp < '2018-01-01';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase, timestamp FROM event_log WHERE activity = 'End trip' AND timestamp >= '2016-01-01' AND timestamp < '2018-01-01' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE activity LIKE '%rejected%'
SELECT idcase, activity, timestamp, resource FROM event_log WHERE activity LIKE '%rejected%' ORDER BY timestamp;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT To answer the question of how long it took from the first event of a case to the event related to the activities indicating 'end trip', 'declaration rejected by employee', or 'payment handled', you can use the following SQL query. This query calculates the elapsed time for each case and retrieves the relevant case ID, activity, and calculated time. ```sql SELECT e.idcase, MIN(CASE WHEN p.activity = 'End trip' THEN strftime('%s', p.timestamp) - strftime('%s', e.start_time) END) AS 'End trip', MIN(CASE WHEN p.activity = 'Declaration rejected by employee' THEN strftime('%s', p.timestamp) - strftime('%s', e.start_time) END) AS 'Declaration rejected by employee', MIN(CASE WHEN p.activity = 'Payment handled' THEN strftime('%s', p.timestamp) - strftime('%s', e.start_time) END) AS 'Payment handled', f
SELECT To calculate the elapsed time from the first event of a case to the event related to the 'end trip', 'declaration rejected by employee', or 'payment handled' activity, you can use the following SQL query. This query retrieves the case ID, the time taken for each relevant activity, and the activity itself: ```sql SELECT e.idcase, COALESCE(strftime('%s', p.timestamp) - strftime('%s', e.start_time), 0) AS time_to_end_trip, COALESCE(strftime('%s', x.timestamp) - strftime('%s', e.start_time), 0) AS time_to_declaration_rejected, COALESCE(strftime('%s', y.timestamp) - strftime('%s', e.start_time), 0) AS time_to_payment_handled, f.activity FROM (SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase)
SELECT To calculate the elapsed time from the first event to the event of interest associated with the 'end trip', 'declaration rejected by employee', or 'payment handled' activities, you can use the following SQL query. This query retrieves the case ID, the activity of interest, and the calculated time for each case. ```sql SELECT e.idcase, COALESCE(end_trip.activity, declaration_rejected.activity, payment_handled.activity) AS activity, COALESCE( strftime('%s', end_trip.timestamp) - strftime('%s', e.start_time), strftime('%s', declaration_rejected.timestamp) - strftime('%s', e.start_time), strftime('%s', payment_handled.timestamp) - strftime('%s', e.start_time) ) AS elapsed_time FROM (SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase) e LEFT JOIN event
SELECT To determine how long it took between the first action taken on a declaration and the finalization of a trip, or until the declaration was rejected by an employee or a payment was made, you can use the following SQL query. This query will calculate the time difference for each case based on the earliest action and the relevant final actions. ```sql WITH FirstAction AS ( SELECT idcase, MIN(timestamp) AS first_action_time FROM event_log GROUP BY idcase ), FinalActions AS ( SELECT idcase, MIN(CASE WHEN activity = 'End trip' THEN timestamp WHEN activity = 'Declaration rejected by employee' THEN timestamp WHEN activity = 'Payment handled' THEN timestamp END) AS final_action_time FROM event_log WHERE activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled') GROUP BY id
SELECT To answer the question of how long it took from the first intervention on a declaration to the intervention that indicates the end of the trip, or to those that indicate that the declaration was rejected by an employee or that indicate that a payment has already been made, you can use the following SQL query: ```sql SELECT e.idcase, MIN(CASE WHEN e.activity = 'End trip' THEN strftime('%s', e.timestamp) END) - MIN(strftime('%s', f.start_time)) AS 'Time to End Trip', MIN(CASE WHEN e.activity = 'Declaration rejected by employee' THEN strftime('%s', e.timestamp) END) - MIN(strftime('%s', f.start_time)) AS 'Time to Declaration Rejected', MIN(CASE WHEN e.activity = 'Payment handled' THEN strftime('%s', e.timestamp) END) - MIN(strftime('%s', f.start_time)) AS 'Time to Payment Handled', CASE
SELECT To answer the question of how long it took from the first event of a case to the event related to 'end trip' and to possible 'declaration rejected by employee' or 'payment handled' activities, while also reporting the case and the final activity treated in this context, you can use the following SQL query: ```sql SELECT e.idcase, MIN(CASE WHEN p.activity = 'End trip' THEN strftime('%s', p.timestamp) - strftime('%s', e.start_time) WHEN x.activity = 'Declaration rejected by employee' THEN strftime('%s', x.timestamp) - strftime('%s', e.start_time) WHEN y.activity = 'Payment handled' THEN strftime('%s', y.timestamp) - strftime('%s', e.start_time) END) AS time_elapsed, CASE WHEN p.activity = 'End trip' THEN 'End trip' WHEN x.activity = 'Declaration rejected by employee'
SELECT To achieve the desired result of showing how long it took from the first event of a case to the relevant events indicating 'end trip', 'declaration rejected by employee', or 'payment handled', along with the case ID and the activity considered, you can use the following SQL query: ```sql SELECT e.idcase, MIN(CASE WHEN p.activity = 'End trip' THEN strftime('%s', p.timestamp) - strftime('%s', e.start_time) ELSE NULL END) AS 'End trip', MIN(CASE WHEN x.activity = 'Declaration rejected by employee' THEN strftime('%s', x.timestamp) - strftime('%s', e.start_time) ELSE NULL END) AS 'Declaration rejected by employee', MIN(CASE WHEN y.activity = 'Payment handled' THEN strftime('%s', y.timestamp) - strftime('%s', e.start_time) ELSE NULL END
SELECT e.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS time_elapsed, p.activity FROM event_log p INNER JOIN (SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase) e ON e.idcase = p.idcase WHERE p.activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled')
SELECT To calculate the elapsed time from the first event to the event of interest associated with the 'end trip', 'declaration rejected by employee', or 'payment handled' activity, you can use the following SQL query. This query retrieves the case ID, the activity of the event of interest, and the calculated time for each case. ```sql SELECT e.idcase, COALESCE(p.activity, x.activity, y.activity) AS activity, strftime('%s', COALESCE(p.timestamp, x.timestamp, y.timestamp)) - strftime('%s', e.start_time) AS elapsed_time FROM (SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase) e LEFT JOIN event_log p ON e.idcase = p.idcase AND p.activity = 'End trip' LEFT JOIN event_log x ON e.idcase = x.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN
SELECT To answer the question of how long it takes from the start of processing a declaration until the end of the trip is recorded, or until it is rejected by an employee, or until payment is made, you can use a SQL query that combines the relevant events and calculates the time differences. Below is a SQL query that accomplishes this: ```sql WITH StartTimes AS ( SELECT idcase, MIN(timestamp) AS start_time FROM event_log GROUP BY idcase ), EndTrip AS ( SELECT idcase, MIN(timestamp) AS end_trip_time FROM event_log WHERE activity = 'End trip' GROUP BY idcase ), Rejected AS ( SELECT idcase, MIN(timestamp) AS rejected_time FROM event_log WHERE activity = 'Declaration rejected by employee' GROUP BY idcase ), Payment AS ( SELECT idcase, MIN(timestamp) AS payment_time FROM event_log WHERE activity = 'Payment handled
SELECT * FROM event_log WHERE activity = 'Request payment';
SELECT * FROM event_log WHERE activity = 'Request payment';
SELECT * FROM event_log WHERE activity = 'Request payment';
SELECT * FROM event_log WHERE activity = 'Request payment';
SELECT activity, AVG(strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp))) AS mean_duration FROM event_log GROUP BY activity;
WITH ActivityDurations AS ( SELECT e1.activity, e1.idcase, strftime('%s', e2.timestamp) - strftime('%s', e1.timestamp) AS duration FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase AND e1.timestamp < e2.timestamp ) SELECT activity, AVG(duration) AS average_duration FROM ActivityDurations GROUP BY activity;
WITH ActivityDurations AS ( SELECT e1.activity, e1.idcase, strftime('%s', e2.timestamp) - strftime('%s', e1.timestamp) AS duration FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase AND e1.timestamp < e2.timestamp ) SELECT activity, AVG(duration) AS mean_duration FROM ActivityDurations GROUP BY activity;
SELECT activity, AVG(duration) AS average_duration FROM ( SELECT activity, idcase, (LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) - timestamp) AS duration FROM event_log ) AS durations WHERE duration IS NOT NULL GROUP BY activity;
SELECT activity, AVG(duration) AS mean_duration FROM ( SELECT activity, (end_timestamp - start_timestamp) AS duration FROM activity_durations -- This is a hypothetical table ) AS durations GROUP BY activity;
SELECT To calculate the mean duration of each activity, you first need to ensure that you have a way to measure the duration of each activity. Assuming that the `event_log` table contains timestamps for the start and end of each activity, you would typically need to calculate the duration for each activity instance and then compute the average. However, since the provided schema does not include separate start and end timestamps, I will assume that you have a way to derive the duration from the existing timestamps. If you have a single timestamp for each activity, you might need to join the table with itself to find the duration between the start and end of each activity. Here’s an example SQL query that calculates the mean duration of each activity, assuming you have a way to determine the duration: ```sql SELECT activity, AVG(duration) AS mean_duration FROM ( SELECT e1.activity, julianday(e2.timestamp) - julianday(e1.timestamp) AS duration FROM
SELECT To calculate the average duration of each activity, you would typically need to have a way to determine the duration of each activity. This usually involves having a start and end timestamp for each activity. However, based on the provided schema, it seems that you only have a single timestamp for each activity in the `event_log` table. If you had a start and end timestamp for each activity, you could calculate the duration by subtracting the start time from the end time. Assuming you have a way to identify the start and end of each activity (for example, if you have a separate table or if the same activity is logged multiple times with different timestamps), you could do something like this: ```sql SELECT activity, AVG(duration) AS average_duration FROM ( SELECT activity, (MAX(timestamp) - MIN(timestamp)) AS duration FROM event_log GROUP BY idcase, activity ) AS activity_durations GROUP
SELECT activity, AVG(duration) AS average_duration FROM ( SELECT activity, (julianday(end_timestamp) - julianday(start_timestamp)) * 24 * 60 AS duration FROM activity_log ) AS durations GROUP BY activity;
SELECT activity, AVG(duration) AS average_duration FROM ( SELECT activity, MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) AS duration FROM event_log GROUP BY idcase, activity ) AS activity_durations GROUP BY activity;
SELECT activity, AVG(strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT To calculate the average duration of each activity, you would typically need to have a way to determine the start and end times of each activity. Assuming that the `event_log` table contains multiple entries for the same activity with timestamps indicating when each activity started and ended, you would need to calculate the duration for each activity and then average those durations. However, if the `event_log` only contains individual entries for each activity without explicit start and end times, you would need to adjust your approach. For the sake of this example, let's assume that each activity has a corresponding start and end entry in the log, and you can calculate the duration based on the timestamps. Here’s an example SQL query that calculates the average duration of each activity, assuming you have a way to identify the start and end of each activity (for example, by using a `CASE` statement or by having a specific pattern in the `activity` names): ```sql SELECT activity, AVG(julianday
SELECT To report the mean duration time of each type of activity, you would first need to ensure that you have a way to calculate the duration of each activity. Assuming that you have a way to determine the start and end times of each activity (for example, if you have a separate table or if the `event_log` table contains both start and end timestamps for activities), you can calculate the duration and then compute the mean. However, based on the provided schema, it seems that the `event_log` table only contains a single timestamp for each event. If you have a way to identify pairs of start and end events for each activity, you could use that to calculate the duration. Assuming you have a way to calculate the duration (let's say you have a `duration` column or you can derive it from the timestamps), the SQL query would look something like this: ```sql SELECT activity, AVG(duration) AS mean_duration FROM ( SELECT activity, (juli
SELECT activity, AVG(duration) AS mean_duration FROM ( SELECT activity, (julianday(end_timestamp) - julianday(start_timestamp)) * 24 * 60 AS duration FROM activity_durations -- This is a hypothetical table that contains start and end timestamps ) AS durations GROUP BY activity;
SELECT activity, AVG(duration) AS mean_duration FROM ( SELECT activity, (julianday(next_timestamp) - julianday(timestamp)) * 24 * 60 AS duration FROM ( SELECT activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log ) WHERE next_timestamp IS NOT NULL ) GROUP BY activity;
SELECT activity, AVG(duration) AS mean_duration FROM ( SELECT activity, (end_timestamp - start_timestamp) AS duration FROM event_log -- Assuming you have a way to identify start and end events ) AS durations GROUP BY activity;
SELECT activity, AVG(julianday(max_timestamp) - julianday(min_timestamp)) AS average_duration FROM ( SELECT activity, idcase, MIN(timestamp) AS min_timestamp, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY activity, idcase ) AS activity_durations GROUP BY activity;
SELECT activity, AVG(strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp))) AS mean_duration FROM event_log GROUP BY activity;
SELECT To calculate the mean duration of each activity, you would typically need a way to determine the duration of each activity. This usually involves having a start and end timestamp for each activity. However, since the provided schema only includes a single timestamp for each event, we will assume that the duration can be calculated based on the difference between consecutive events for the same case and activity. If we assume that the `timestamp` column represents the end time of an activity and that there is a way to identify the start time (for example, by having another event logged before it), you could use a self-join to calculate the duration. However, without additional information about how to determine the start time, we can only provide a general structure for the SQL query. Assuming you have a way to calculate the duration, the SQL query to report the mean duration of each activity could look something like this: ```sql SELECT activity, AVG(duration) AS mean_duration FROM ( SELECT e1.activity,
SELECT activity, AVG(duration) AS mean_duration FROM ( SELECT activity, (julianday(end_timestamp) - julianday(start_timestamp)) * 24 * 60 AS duration FROM event_log WHERE start_timestamp IS NOT NULL AND end_timestamp IS NOT NULL ) AS durations GROUP BY activity;
SELECT activity, AVG(duration) AS mean_duration FROM ( SELECT activity, (julianday(end_timestamp) - julianday(start_timestamp)) * 24 * 60 AS duration FROM event_log WHERE end_timestamp IS NOT NULL AND start_timestamp IS NOT NULL ) AS durations GROUP BY activity;
SELECT activity, AVG(duration) AS average_duration FROM ( SELECT activity, (julianday(end_timestamp) - julianday(start_timestamp)) * 24 * 60 AS duration FROM activity_durations -- This is a hypothetical table that contains start and end timestamps ) AS durations GROUP BY activity;
SELECT activity, AVG(duration) AS average_duration FROM ( SELECT activity, (end_timestamp - start_timestamp) AS duration FROM activity_durations -- This would be a hypothetical table containing start and end timestamps ) AS durations GROUP BY activity;
SELECT To report each activity's average duration, you would need to calculate the duration of each activity based on the timestamps of the events. Assuming that the `event_log` table contains multiple entries for each activity and that the duration can be calculated as the difference between the timestamps of consecutive events for the same activity, you can use a common table expression (CTE) or a subquery to achieve this. However, if the `event_log` table does not have a clear way to determine the start and end timestamps for each activity, you may need to adjust the approach based on the available data. Below is a general SQL query that assumes you have a way to calculate the duration for each activity: ```sql WITH ActivityDurations AS ( SELECT activity, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp) AS next_timestamp FROM event_log ) SELECT activity, AVG(julianday(next_timestamp) - julianday
SELECT To report the average duration of each activity, you would typically need to have a way to calculate the duration of each activity. This usually involves having a start and end timestamp for each activity. However, based on the provided schema, it seems that we only have a single timestamp for each event in the `event_log` table. If you have a way to determine the duration of each activity (for example, if you have pairs of start and end events), you would need to calculate the duration for each activity and then compute the average. Assuming you have a way to derive the duration, the SQL query might look something like this: ```sql SELECT activity, AVG(duration) AS average_duration FROM ( SELECT activity, (julianday(end_timestamp) - julianday(start_timestamp)) * 24 * 60 AS duration FROM event_log WHERE 
SELECT activity, AVG(duration) AS average_duration FROM ( SELECT activity, (MAX(timestamp) - MIN(timestamp)) AS duration FROM event_log GROUP BY activity, idcase ) AS durations GROUP BY activity;
WITH Duration AS ( SELECT activity, strftime('%s', timestamp) AS event_time, LEAD(strftime('%s', timestamp)) OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS next_event_time FROM event_log ) SELECT activity, AVG(next_event_time - event_time) AS average_duration FROM Duration WHERE next_event_time IS NOT NULL GROUP BY activity;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase HAVING total_cost = (SELECT MAX(total_cost) FROM (SELECT SUM(cost) AS total_cost FROM event_log GROUP BY idcase));
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase HAVING total_cost = (SELECT MAX(total_cost) FROM (SELECT SUM(cost) AS total_cost FROM event_log GROUP BY idcase));
SELECT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase HAVING total_cost = (SELECT MAX(total_cost) FROM (SELECT SUM(cost) AS total_cost FROM event_log GROUP BY idcase));
SELECT idcase, SUM(cost) AS total_cost FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log) GROUP BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT idcase, SUM(cost) AS total_cost FROM event_log WHERE cost IS NOT NULL GROUP BY idcase ORDER BY total_cost DESC LIMIT 1; -- Change LIMIT to a higher number if you want more than one declaration
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE activity = 'Start trip';
SELECT activity, COUNT(*) AS total_records FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_performances FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_performances FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS activity_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS performance_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_performances FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_performances FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS times_performed FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS performance_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS intervention_count FROM event_log GROUP BY activity ORDER BY intervention_count DESC;
SELECT activity, COUNT(*) AS action_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS intervention_count FROM event_log GROUP BY activity ORDER BY intervention_count DESC;
SELECT activity, COUNT(*) AS intervention_count FROM event_log GROUP BY activity ORDER BY intervention_count DESC;
SELECT activity, COUNT(*) AS intervention_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS intervention_count FROM event_log GROUP BY activity ORDER BY intervention_count DESC;
SELECT activity, COUNT(*) AS intervention_count FROM event_log GROUP BY activity;
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT cost, activity FROM event_log WHERE cost IS NOT NULL ORDER BY cost;
SELECT id, activity, cost FROM event_log ORDER BY cost;
SELECT id, activity, cost FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT activity, resource, cost FROM event_log ORDER BY cost DESC;
SELECT activity, resource, cost FROM event_log ORDER BY cost DESC;
SELECT * FROM event_log WHERE activity LIKE 'Permit%'
SELECT id, activity, resource, cost FROM event_log WHERE activity LIKE 'Permit%'
SELECT * FROM event_log WHERE activity LIKE '%permit%'
SELECT * FROM event_log WHERE activity LIKE 'Permit%'
SELECT * FROM event_log WHERE activity LIKE 'Permit%'
SELECT * FROM event_log WHERE activity LIKE 'Permit%'
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE activity LIKE 'Permit%'
SELECT COUNT(*) AS total_permit_activities, MIN(timestamp) AS first_permit_activity, MAX(timestamp) AS last_permit_activity, AVG(cost) AS average_cost, COUNT(DISTINCT resource) AS unique_resources FROM event_log WHERE activity LIKE 'Permit%'
SELECT cost FROM event_log WHERE activity = 'permit';
SELECT * FROM event_log WHERE activity LIKE '%permit%'
SELECT activity, COUNT(*) AS intervention_count, MIN(timestamp) AS first_intervention, MAX(timestamp) AS last_intervention, AVG(cost) AS average_cost FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%' GROUP BY activity ORDER BY intervention_count DESC;
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE activity LIKE '%permit%' AND idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%declaration%')
SELECT MAX(cost) AS highest_cost FROM event_log;
SELECT MAX(cost) AS highest_cost FROM event_log;
SELECT MAX(cost) AS highest_cost FROM event_log;
SELECT MAX(cost) AS highest_cost FROM event_log;
SELECT MAX(cost) AS highest_cost FROM event_log;
SELECT MAX(cost) AS max_cost FROM event_log WHERE cost IS NOT NULL;
SELECT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas') GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2;
SELECT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas') GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2;
SELECT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas') GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2;
SELECT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas') GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2;
SELECT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas') GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2;
SELECT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas') GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2;
SELECT COUNT(*) AS activity_count, resource FROM event_log WHERE activity = 'declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*) AS activity_count, resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*) AS activity_count, resource FROM event_log WHERE activity = 'declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*) AS activity_count, resource FROM event_log WHERE activity = 'declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*) AS instance_count, resource FROM event_log WHERE activity = 'declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*) AS activity_count, resource FROM event_log WHERE activity = 'declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*) AS occurrence_count, resource FROM event_log WHERE activity = 'declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*) AS instance_count, resource FROM event_log WHERE activity = 'declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*) AS activity_count, resource FROM event_log WHERE activity = 'declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*) AS event_count, resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*) AS rejection_count, resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*) AS activity_count, resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase;
SELECT COUNT(*) AS activity_count, resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase;
SELECT COUNT(*) AS activity_count, resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase;
SELECT COUNT(*) AS instance_count, resource, idcase FROM event_log WHERE activity = 'declaration rejected by administration' GROUP BY resource, idcase;
SELECT COUNT(*) AS activity_count, resource, idcase FROM event_log WHERE activity = 'declaration rejected by administration' GROUP BY resource, idcase;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity = 'declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*) AS activity_count, resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase;
SELECT COUNT(*) AS activity_count, resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase;
SELECT COUNT(*) AS event_count, resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase;
SELECT resource, idcase, COUNT(*) AS rejection_count FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start trip', 'End trip');
SELECT AVG(cost) AS mean_cost FROM event_log WHERE activity NOT IN ('Start trip', 'End trip') AND cost IS NOT NULL;
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start trip', 'End trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start Trip', 'End Trip') AND cost IS NOT NULL;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT idcase, activity, cost FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(activity) > 1;
SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(activity) > 1;
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1;
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1;
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1;
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-03';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-03';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-03';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-03';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-03';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-03';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02 23:59:59'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-03';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-03';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-03';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-03';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-03';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-03';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-03';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02 23:59:59'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT activity, resource, timestamp FROM event_log WHERE resource LIKE 'M%' ORDER BY timestamp;
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT activity, idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT idcase, activity, COUNT(*) AS occurrence_count FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT activity, idcase, COUNT(*) as event_count FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT idcase, activity, COUNT(*) AS occurrence_count FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT idcase, activity, COUNT(*) as activity_count FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3 ORDER BY idcase, activity;
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300';
SELECT COUNT(*) AS event_count FROM event_log WHERE idcase = 'declaration 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300';
SELECT * FROM event_log WHERE idcase = 'declaration 56300';
SELECT activity, COUNT(*) AS activity_count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS performance_count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS activity_count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS performance_count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS times_performed FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS times_performed FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS activity_count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS performance_count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS activity_count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS action_count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity;
SELECT activity, COUNT(*) AS action_count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS process_instance_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS number_of_cases FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS process_instance_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS process_instance_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS declaration_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS allocation_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS action_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS occurrences FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS occurrences FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS intervention_count FROM event_log GROUP BY resource;
SELECT idcase FROM event_log WHERE resource = 'Thomas' UNION SELECT idcase FROM event_log WHERE resource = 'Diana' UNION SELECT idcase FROM event_log WHERE resource = 'Sara';
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT idcase FROM event_log WHERE resource = 'Thomas' UNION SELECT idcase FROM event_log WHERE resource = 'Diana' UNION SELECT idcase FROM event_log WHERE resource = 'Sara';
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS process_instance_count FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS declaration_count FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS declaration_count FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa');
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa');
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa');
SELECT activity, resource FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE resource IN ('Joshua', 'Teresa') )
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa' ) ORDER BY timestamp;
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request Payment', 'Payment handled');
SELECT DISTINCT idcase FROM event_log WHERE (activity = 'Start trip' OR activity = 'End trip') AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' );
SELECT DISTINCT idcase FROM event_log WHERE (activity = 'start trip' OR activity = 'end trip') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' );
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled');
SELECT DISTINCT idcase FROM event_log WHERE (activity = 'Start trip' OR activity = 'End trip') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' );
SELECT DISTINCT idcase FROM event_log WHERE (activity = 'Begin trip' OR activity = 'End trip') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request Payment' OR activity = 'Payment handled' );
SELECT DISTINCT idcase FROM event_log WHERE (activity = 'Start trip' OR activity = 'End trip') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request Payment' OR activity = 'Payment handled' );
SELECT DISTINCT idcase FROM event_log WHERE (activity = 'Start trip' OR activity = 'End trip') AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request Payment' OR activity = 'Payment handled' );
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') );
SELECT * FROM event_log WHERE resource IS NULL OR resource = '';
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL OR resource = '';
SELECT * FROM event_log WHERE resource IS NULL OR resource = ''
SELECT * FROM event_log WHERE resource IS NULL;
SELECT DISTINCT activity FROM event_log WHERE resource IS NULL OR resource = '';
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL OR resource = '';
SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) < '2017-03-01';
SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) < '2017-03-01';
SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) < '2017-03-01';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2017-03-01';
SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) < '2017-03-01';
SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) < '2017-03-01';
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) < '2017-03-01';
SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) < '2017-03-01';
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01';
SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) < '2017-03-01';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31';
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE timestamp < ( SELECT MIN(timestamp) FROM event_log WHERE activity = 'Start trip' AND idcase = event_log.idcase ) ) GROUP BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31 23:59:59';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp >= '2017-03-01' AND timestamp < '2017-04-01';
SELECT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2017-03-01' AND '2017-03-31' GROUP BY idcase HAVING MIN(timestamp) = MAX(CASE WHEN activity = 'Start trip' THEN timestamp END) ) AND activity = 'Start trip';
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-01-03' AND '2017-03-31' GROUP BY idcase HAVING MIN(timestamp) = MIN(CASE WHEN activity = 'Start trip' THEN timestamp END);
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31'
SELECT resource, idcase, COUNT(*) as action_count FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource, idcase, COUNT(*) AS event_count FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource, idcase, COUNT(*) AS action_count FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource, idcase, COUNT(*) AS action_count FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY idcase, resource HAVING COUNT(*) > 5;
SELECT resource, idcase, COUNT(*) AS event_count FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource, idcase, COUNT(*) AS event_count FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource, COUNT(*) AS action_count FROM event_log GROUP BY resource HAVING action_count > 5;
SELECT resource, COUNT(*) AS action_count FROM event_log GROUP BY resource HAVING COUNT(*) > 5;
SELECT resource, idcase FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource, COUNT(*) AS action_count FROM event_log GROUP BY resource HAVING COUNT(*) > 5;
SELECT activity, COUNT(*) AS activity_count FROM event_log GROUP BY activity ORDER BY activity_count DESC LIMIT 1;
SELECT activity, COUNT(*) AS occurrence_count FROM event_log GROUP BY activity ORDER BY occurrence_count DESC;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) = ( SELECT MAX(activity_count) FROM ( SELECT COUNT(*) AS activity_count FROM event_log GROUP BY activity ) );
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT activity, COUNT(*) AS action_count FROM event_log GROUP BY activity ORDER BY action_count DESC;
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT resource FROM event_log WHERE activity = 'declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT resource, COUNT(*) AS approval_count FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY approval_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS occurrence_count FROM event_log WHERE activity = 'declaration final approved by supervisor' GROUP BY resource ORDER BY occurrence_count DESC;
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'Declaration approved by supervisor' GROUP BY resource ORDER BY performance_count DESC;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity = 'Declaration approved by supervisor' GROUP BY resource ORDER BY activity_count DESC;
SELECT resource, COUNT(*) AS occurrence_count FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY occurrence_count DESC;
SELECT resource, COUNT(*) AS approval_count FROM event_log WHERE activity = 'Declaration approved by supervisor' GROUP BY resource ORDER BY approval_count DESC LIMIT 10;
SELECT COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE activity = 'declaration approved by budget owner' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaration approved by budget owner' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaration approved by budget owner' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaration approved by budget owner' AND resource IN ('Eugine', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugine', 'Marie');
SELECT COUNT(*) AS approval_count FROM event_log WHERE activity LIKE '%approved%' AND activity LIKE '%budget holder%' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'approved' AND resource IN ('Eugene', 'Marie');
SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaration 49464' AND activity NOT IN ( SELECT activity FROM event_log WHERE idcase = 'declaration 76667' );
SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaration 49464' AND activity NOT IN ( SELECT activity FROM event_log WHERE idcase = 'declaration 76667' );
SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaration 49464' AND activity NOT IN ( SELECT activity FROM event_log WHERE idcase = 'declaration 76667' );
SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaration 49464' AND activity NOT IN ( SELECT activity FROM event_log WHERE idcase = 'declaration 76667' );
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY activity_count DESC;
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY resource;
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY performance_count DESC;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING COUNT(*) > 2;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING COUNT(*) > 2;
SELECT resource, COUNT(*) AS request_count FROM event_log WHERE activity = 'Request declaration' -- Assuming 'Request declaration' is the activity name for requesting a declaration GROUP BY resource HAVING COUNT(*) > 2;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp >= '2017-05-01' AND timestamp < '2017-05-11';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp >= '2017-05-01' AND timestamp < '2017-05-11';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp >= '2017-05-01' AND timestamp < '2017-05-11';
SELECT idcase, COUNT(DISTINCT resource) AS resource_count FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS resource_count FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS resource_count FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS resource_count FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS resource_count FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS resource_count FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS employee_count FROM event_log GROUP BY idcase;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND MIN(resource) = 'Christopher';
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND MIN(resource) = 'Christopher';
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND MIN(resource) = 'Christopher';
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND MIN(resource) = 'Christopher';
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND MIN(resource) = 'Christopher';
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND MIN(resource) = 'Christopher';
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND MIN(resource) = 'Christopher';
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(DISTINCT activity) FROM event_log AS e WHERE e.idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(*) > 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, DATE(timestamp) AS event_date FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1;
SELECT idcase, DATE(timestamp) AS event_date, COUNT(*) AS event_count FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1;
SELECT idcase, DATE(timestamp) AS event_date FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1;
SELECT idcase, DATE(timestamp) AS event_date FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1;
SELECT idcase, DATE(timestamp) AS event_date, COUNT(*) AS event_count FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1;
SELECT idcase, DATE(timestamp) AS intervention_date FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1;
SELECT idcase, DATE(timestamp) AS intervention_date, COUNT(*) AS intervention_count FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1;
SELECT resource, idcase, COUNT(*) AS zero_cost_event_count FROM event_log WHERE cost = 0 GROUP BY resource, idcase;
SELECT idcase, resource, COUNT(*) AS zero_cost_event_count FROM event_log WHERE cost = 0 GROUP BY idcase, resource ORDER BY idcase, resource;
SELECT idcase, resource, COUNT(*) AS zero_cost_event_count FROM event_log WHERE cost = 0 GROUP BY idcase, resource;
SELECT idcase, resource, COUNT(*) AS zero_cost_event_count FROM event_log WHERE cost = 0 GROUP BY idcase, resource;
SELECT COUNT(*) AS zero_cost_count, resource, idcase FROM event_log WHERE cost = 0 GROUP BY resource, idcase;
SELECT resource, idcase, COUNT(*) AS zero_cost_events FROM event_log WHERE cost = 0 GROUP BY resource, idcase;
SELECT resource, COUNT(*) AS no_cost_interventions FROM event_log WHERE cost IS NULL OR cost = 0 GROUP BY resource;
SELECT resource, COUNT(*) AS no_cost_interventions FROM event_log WHERE cost = 0 GROUP BY resource;
SELECT * FROM event_log WHERE activity = 'Permit rejected by director';
SELECT * FROM event_log WHERE activity = 'Permit rejected by director';
SELECT * FROM event_log WHERE activity = 'Permit rejected by director';
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE activity = 'Permit rejected by director';
SELECT * FROM event_log WHERE activity = 'Permit rejected by director';
SELECT * FROM event_log WHERE activity = 'Permit rejected by director';
SELECT * FROM event_log WHERE activity = 'Permit rejected by director';
SELECT * FROM event_log WHERE activity = 'Permit rejected by director';
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log WHERE cost IS NOT NULL GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT strftime('%Y-%m-%d', timestamp) AS event_date, COUNT(*) AS event_count FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS processing_date, SUM(cost) AS total_cost FROM event_log GROUP BY processing_date ORDER BY processing_date;
SELECT id, activity, resource, cost FROM event_log WHERE cost > 1000 AND (resource LIKE '%supervisor%' OR resource LIKE '%director%')
SELECT activity, SUM(cost) AS total_cost FROM event_log WHERE activity IN ('Supervision', 'Director Approval', 'Management Review') -- Replace with actual activities AND cost > 1000 GROUP BY activity;
SELECT activity, cost, resource FROM event_log WHERE cost > 1000 AND (resource LIKE '%supervisor%' OR resource LIKE '%director%')
SELECT activity, resource, cost FROM event_log WHERE (activity LIKE '%supervisor%' OR activity LIKE '%director%') AND cost > 1000;
SELECT id, activity, resource, cost FROM event_log WHERE cost > 1000 AND (resource LIKE '%supervisor%' OR resource LIKE '%director%')
SELECT activity, cost FROM event_log WHERE (activity LIKE '%supervisor%' OR activity LIKE '%director%') AND cost > 1000;
SELECT idcase, COUNT(*) AS events_count FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS number_of_events FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS intervention_count FROM event_log GROUP BY idcase;
SELECT resource, COUNT(*) AS task_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS task_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(activity) AS activity_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS activity_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS task_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(DISTINCT activity) AS action_count FROM event_log GROUP BY resource;
SELECT idcase, COUNT(activity) AS activity_count FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(activity) AS activity_count FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(activity) AS activity_count FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(*) AS activity_count FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(activity) AS activity_count FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(activity) AS activity_count FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, activity FROM event_log WHERE resource = 'Alexis' ORDER BY idcase;
SELECT idcase, COUNT(*) AS action_count FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT COUNT(DISTINCT e1.idcase) AS case_count FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permit final approved by supervisor' AND e2.activity = 'Start trip' AND e1.timestamp < e2.timestamp;
SELECT COUNT(DISTINCT e1.idcase) AS case_count FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permit final approved by supervisor' AND e2.activity = 'Start trip' AND e1.timestamp < e2.timestamp;
WITH ActivitySequence AS ( SELECT idcase, activity, timestamp, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log ) SELECT COUNT(DISTINCT idcase) AS cases_with_start_trip FROM ActivitySequence WHERE activity = 'Permit final approved by supervisor' AND next_activity = 'Start trip';
SELECT COUNT(DISTINCT e1.idcase) FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permit final approved by supervisor' AND e2.activity = 'Start trip' AND e1.timestamp < e2.timestamp;
SELECT COUNT(DISTINCT e1.idcase) AS case_count FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Start trip' AND e2.activity = 'Permit final approved by supervisor' AND e1.timestamp > e2.timestamp;
SELECT COUNT(DISTINCT e1.idcase) FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Start trip' AND e2.activity = 'Permit final approved by supervisor' AND e1.timestamp > e2.timestamp;
SELECT COUNT(DISTINCT e1.idcase) FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permit final approved by supervisor' AND e2.activity = 'Trip started' AND e1.timestamp < e2.timestamp;
SELECT COUNT(DISTINCT e1.idcase) FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Final Approval' AND e1.timestamp < (SELECT MIN(e3.timestamp) FROM event_log AS e3 WHERE e3.idcase = e1.idcase AND e3.activity = 'Start trip');
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp NOT LIKE '2017-12-12%'
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp < '2017-12-12' OR activity = 'End trip' AND timestamp > '2017-12-12';
SELECT e.* FROM event_log AS e WHERE e.idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' AND (timestamp < '2017-12-12' OR timestamp > '2017-12-12') );
SELECT * FROM event_log WHERE activity = 'End trip' AND (timestamp < '2017-12-12' OR timestamp > '2017-12-12')
SELECT * FROM event_log WHERE idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' ) AND timestamp <> '2017-12-12';
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND DATE(timestamp) <> '2017-12-12';
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS action_count FROM event_log GROUP BY resource ORDER BY action_count DESC;
SELECT resource, COUNT(*) AS action_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS activity_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS activity_count FROM event_log GROUP BY resource;
SELECT COUNT(activity) AS activity_count, resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(DISTINCT activity) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, DISTINCT activity FROM event_log GROUP BY resource, activity;
SELECT DISTINCT activity FROM event_log WHERE activity NOT IN ( SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia' );
SELECT DISTINCT activity FROM event_log WHERE activity NOT IN ( SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia' );
SELECT DISTINCT activity FROM event_log WHERE activity NOT IN ( SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia' );
SELECT DISTINCT activity FROM event_log WHERE activity NOT IN ( SELECT activity FROM event_log WHERE resource = 'Virginia' );
SELECT DISTINCT activity FROM event_log WHERE activity NOT IN ( SELECT activity FROM event_log WHERE resource = 'Virginia' );
SELECT DISTINCT activity FROM event_log WHERE activity NOT IN ( SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia' );
SELECT AVG(cost) FROM event_log WHERE idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%rejected%' ) AND cost IS NOT NULL;
SELECT AVG(cost) FROM event_log WHERE idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'rejected' );
SELECT AVG(total_cost) FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log WHERE idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'rejected' ) GROUP BY idcase ) AS case_costs;
SELECT AVG(total_cost) AS mean_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log WHERE idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%rejected%' ) GROUP BY idcase ) AS case_costs;
SELECT AVG(cost) FROM event_log WHERE idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%rejected%' );
SELECT AVG(cost) FROM event_log WHERE activity = 'Rejected';
SELECT AVG(cost) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Rejected' )
SELECT idcase, MIN(timestamp) AS start_time, MAX(timestamp) AS end_time, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log WHERE activity = 'declaration approved by supervisor' GROUP BY idcase;
SELECT idcase, MIN(timestamp) AS start_time, MAX(timestamp) AS end_time, (MAX(timestamp) - MIN(timestamp)) AS duration FROM event_log WHERE activity = 'declaration approved by supervisor' GROUP BY idcase ORDER BY idcase;
SELECT e1.idcase, MAX(e1.timestamp) - MIN(e1.timestamp) AS duration FROM event_log e1 WHERE e1.activity = 'declaration approved by supervisor' GROUP BY e1.idcase
SELECT idcase, MIN(timestamp) AS start_time, MAX(timestamp) AS end_time, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log WHERE activity = 'declaration approved by supervisor' GROUP BY idcase ORDER BY idcase;
SELECT idcase, MIN(timestamp) AS start_time, MAX(timestamp) AS end_time, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log WHERE activity = 'declaration approved by supervisor' GROUP BY idcase ORDER BY idcase;
SELECT e.idcase, e.activity, e.timestamp FROM event_log e WHERE e.idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Declaration approved by supervisor' ) ORDER BY e.timestamp ASC;
SELECT To determine how long we waited for a declaration to be approved by the supervisor, we need to calculate the time difference between the first action taken on a declaration and the time when the declaration was approved by the supervisor. Here’s how you can write the SQL query to achieve this: ```sql SELECT e.idcase, MIN(CASE WHEN e.activity = 'Declaration submitted' THEN e.timestamp END) AS submission_time, MIN(CASE WHEN e.activity = 'Declaration approved by supervisor' THEN e.timestamp END) AS approval_time, strftime('%s', MIN(CASE WHEN e.activity = 'Declaration approved by supervisor' THEN e.timestamp END)) - strftime('%s', MIN(CASE WHEN e.activity = 'Declaration submitted' THEN e.timestamp END)) AS wait_time_seconds FROM event_log e WHERE e.activity IN ('Declaration submitted', 'Declaration approved by supervisor') GROUP BY e.idcase HAVING approval
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration rejected by pre-approver';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration rejected by pre-approver';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration rejected by pre-approver';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration rejected by pre-approver';
SELECT COUNT(*) AS activity_count FROM event_log WHERE activity = 'declaration rejected by pre-approver';
SELECT COUNT(*) AS occurrence_count FROM event_log WHERE activity = 'declaration rejected by pre-approver';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT idcase, timestamp FROM event_log WHERE activity = 'End trip' ORDER BY resource;
SELECT idcase, timestamp FROM event_log WHERE activity = 'End trip' ORDER BY resource;
SELECT DISTINCT e.idcase, e.timestamp, e.resource FROM event_log AS e WHERE e.idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' ) ORDER BY e.resource, e.timestamp;
SELECT idcase, timestamp, resource FROM event_log WHERE activity = 'End trip' ORDER BY resource;
SELECT idcase, timestamp, resource FROM event_log WHERE activity = 'End trip' ORDER BY resource;
SELECT idcase, timestamp FROM event_log WHERE activity = 'End trip' ORDER BY resource;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS action_count FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS intervention_count FROM event_log GROUP BY idcase;
SELECT COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-02-05' AND '2017-12-05';
SELECT COUNT(DISTINCT idcase) AS number_of_process_instances FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-02-05' AND '2017-12-05';
SELECT COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-02-05' AND '2017-12-05';
SELECT COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-02-05' AND '2017-12-05';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT idcase, resource, id AS event_id, timestamp AS completion_date FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp ASC;
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp;
SELECT idcase, activity, id AS event_id, timestamp AS completion_date, resource FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp ASC;
SELECT idcase, resource, activity, timestamp AS completion_date FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp ASC;
SELECT idcase AS case_identifier, id AS event_identifier, resource AS associated_resource, timestamp AS completion_date FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp ASC;
SELECT idcase, id AS event_id, resource, timestamp AS completion_date FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp ASC;
SELECT e1.idcase AS declaration_code, e1.resource AS resource, e1.id AS submission_id, e1.timestamp AS completion_date FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' AND e1.activity = 'Declaration submitted by employee' ORDER BY e1.timestamp;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource;
SELECT DISTINCT resource FROM event_log ORDER BY resource;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log WHERE activity LIKE '%declaration%' ORDER BY resource ASC;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200;
SELECT resource, COUNT(DISTINCT idcase) AS declaration_count FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 200;
SELECT resource, COUNT(DISTINCT idcase) AS declaration_count FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity LIKE '%declaration%';
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity LIKE '%declaration%';
SELECT COUNT(DISTINCT resource) AS number_of_people FROM event_log;
SELECT COUNT(DISTINCT resource) AS number_of_people FROM event_log;
SELECT COUNT(DISTINCT resource) AS number_of_people FROM event_log;
SELECT COUNT(DISTINCT resource) AS number_of_people FROM event_log WHERE idcase IS NOT NULL; -- Assuming idcase represents a declaration
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity LIKE '%declaration%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT * FROM event_log WHERE activity LIKE '%declaration%'
SELECT DISTINCT idcase, activity FROM event_log WHERE activity LIKE '%declaration%' ORDER BY idcase;
SELECT * FROM event_log WHERE activity LIKE '%declaration%'
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity;
SELECT AVG(cost) AS mean_cost, activity FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL OR cost = 0;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL OR cost = 0;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL OR cost = 0;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL OR cost = 0;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL OR cost = 0;
SELECT COUNT(*) AS case_count FROM ( SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(CASE WHEN cost IS NULL THEN 1 ELSE 0 END) = COUNT(*) ) AS zero_cost_cases;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE cost IS NOT NULL AND cost <> 0 );
SELECT COUNT(DISTINCT idcase) AS declarations_without_cost FROM event_log WHERE cost IS NULL;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost = 0;
SELECT * FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%Permit%' OR activity LIKE '%Declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT * FROM event_log WHERE activity LIKE '%Permit%' OR activity LIKE '%Declare%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT * FROM event_log WHERE activity LIKE '%Permit%' OR activity LIKE '%Declaration%'
SELECT count(*) FROM event_log WHERE activity = 'Declaration rejected by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration rejected by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration rejected by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by director';
SELECT count(*) FROM event_log WHERE activity = 'Declaration rejected by director';
SELECT count(*) FROM event_log WHERE activity = 'declaration rejected by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration of rejection of responsibility of the director';
SELECT AVG(cost) AS mean_cost FROM event_log;
SELECT AVG(cost) AS mean_event_cost FROM event_log;
SELECT AVG(cost) AS mean_event_cost FROM event_log;
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity;
SELECT AVG(cost) FROM event_log;
SELECT AVG(cost) AS mean_cost FROM event_log;
SELECT AVG(cost) AS mean_cost FROM event_log;
SELECT AVG(cost) FROM event_log;
SELECT AVG(cost) FROM event_log;
SELECT AVG(cost) AS mean_cost, activity FROM event_log WHERE cost IS NOT NULL GROUP BY activity;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS declaration_count FROM event_log GROUP BY resource;
SELECT count(*) FROM event_log WHERE resource = 'Peter';
SELECT count(*) FROM event_log WHERE resource = 'Peter';
SELECT count(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) AS actions_performed FROM event_log WHERE resource = 'Peter';
SELECT resource, COUNT(DISTINCT idcase) AS declaration_count FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT resource, COUNT(DISTINCT idcase) AS process_instance_count FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY event_count ASC;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY event_count ASC;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity LIKE '%request payment%' GROUP BY idcase ORDER BY event_count ASC;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY event_count ASC;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY event_count ASC;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY event_count ASC;
SELECT idcase, COUNT(activity) AS activity_count FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment') GROUP BY idcase ORDER BY activity_count ASC;
SELECT idcase, COUNT(*) AS action_count FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment') GROUP BY idcase ORDER BY action_count ASC;
SELECT DISTINCT timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp ASC;
SELECT DISTINCT DATE(timestamp) AS event_date FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY event_date ASC;
SELECT DISTINCT DATE(timestamp) AS event_date FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY event_date;
SELECT DISTINCT DATE(timestamp) AS event_date FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY event_date ASC;
SELECT DISTINCT DATE(timestamp) AS recording_date FROM event_log WHERE activity IN ('End trip', 'Closed') ORDER BY recording_date ASC;
SELECT DISTINCT DATE(timestamp) AS event_date FROM event_log WHERE activity IN ('End trip', 'Declaration rejected by employee') ORDER BY event_date ASC;
SELECT DISTINCT timestamp FROM event_log WHERE activity IN ('End trip', 'Declaration rejected') ORDER BY timestamp ASC;
SELECT timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Rejection of declaration' ORDER BY timestamp ASC;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS performance_count FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS activity_performance_count FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS activity_performance_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, activity, COUNT(*) AS occurrences FROM event_log GROUP BY resource, activity ORDER BY resource ASC;
SELECT resource, COUNT(activity) AS activity_count FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS activity_occurrences FROM event_log GROUP BY resource ORDER BY resource;
SELECT COUNT(*) AS action_count, resource FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS action_count FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT activity, timestamp, id FROM event_log WHERE activity LIKE 'E%' AND idcase IN (SELECT idcase FROM event_log WHERE activity LIKE '%declaration%') ORDER BY timestamp;
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT idcase, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration saved by employee';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration saved by employee';
SELECT DISTINCT resource FROM event_log WHERE activity = 'save_declaration';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration saved by employee';
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-04-12' );
SELECT DISTINCT activity FROM event_log WHERE DATE(timestamp) = '2018-04-12';
SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING DATE(MAX(timestamp)) = '2018-04-12' );
SELECT activity FROM event_log WHERE DATE(timestamp) = '2018-04-12';
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-04-12' );
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) = '2018-04-12' );
SELECT DISTINCT activity FROM event_log WHERE DATE(timestamp) = '2018-04-12';
SELECT DISTINCT activity FROM event_log WHERE DATE(timestamp) = '2018-04-12';
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE DATE(timestamp) = '2018-04-12' ) AND DATE(timestamp) = '2018-04-12';
SELECT id, activity, timestamp AS performance_end_date FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY timestamp;
SELECT id, activity, timestamp AS performance_end_date FROM event_log WHERE activity = 'Permit final approved by supervisor' OR activity = 'Declaration approved by supervisor' ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved by director', 'Declaration final approved by supervisor') ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved by director', 'Declaration approved by supervisor') ORDER BY timestamp;
SELECT * FROM event_log WHERE cost <> 0;
SELECT * FROM event_log WHERE cost > 0;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT idcase, activity, resource, cost FROM event_log WHERE cost <> 0
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT count(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT activity, COUNT(*) AS event_count FROM event_log WHERE activity = 'Permit final approved by director' GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Final permit granted by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Final permit approved by director';
SELECT * FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT timestamp, resource FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT timestamp, resource, activity, cost, idcase FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT * FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT * FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT DISTINCT DATE(timestamp) AS intervention_date FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT DISTINCT DATE(timestamp) AS trip_start_date FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource ORDER BY total_cost DESC;
SELECT activity, COUNT(*) AS event_count FROM event_log WHERE activity IN ('Start trip', 'End trip') GROUP BY activity;
SELECT activity, COUNT(*) AS occurrences FROM event_log WHERE activity IN ('Start trip', 'End trip') GROUP BY activity;
SELECT activity, COUNT(*) AS occurrence_count FROM event_log WHERE activity IN ('Start trip', 'End trip') GROUP BY activity;
SELECT COUNT(*) AS event_count, activity FROM event_log WHERE activity IN ('Start trip', 'End trip') GROUP BY activity;
SELECT activity, COUNT(*) AS activity_count FROM event_log WHERE activity IN ('Start trip', 'End trip') GROUP BY activity;
SELECT 'Start trip' AS activity, COUNT(*) AS event_count FROM event_log WHERE activity = 'Start trip' UNION ALL SELECT 'End trip' AS activity, COUNT(*) AS event_count FROM event_log WHERE activity = 'End trip';
SELECT activity, COUNT(*) AS occurrences FROM event_log WHERE activity IN ('Start trip', 'End trip') GROUP BY activity;
SELECT SUM(activity_count) AS total_activities FROM ( SELECT COUNT(*) AS activity_count FROM event_log WHERE activity = 'Start trip' UNION ALL SELECT COUNT(*) AS activity_count FROM event_log WHERE activity = 'End trip' ) AS combined_counts;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Start trip' ) AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' );
SELECT activity, COUNT(*) AS count FROM event_log WHERE activity IN ('Begin trip', 'End trip') GROUP BY activity;
SELECT activity, COUNT(*) AS activity_count FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, COUNT(*) AS activity_count FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, COUNT(*) AS activity_count FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, COUNT(*) AS activity_count FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, COUNT(*) AS activity_count FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, COUNT(*) FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, COUNT(*) AS activity_count FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log WHERE timestamp = ( SELECT MAX(timestamp) FROM event_log AS el2 WHERE el2.activity = event_log.activity )
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT resource, activity FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT resource, activity FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT e1.activity, e1.resource, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT e2.idcase, e2.timestamp, e2.activity, e2.resource FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'End trip' AND e2.timestamp > e1.timestamp ORDER BY e2.idcase, e2.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT e.idcase, e.activity, e.timestamp, e.resource FROM event_log e JOIN event_log et ON e.idcase = et.idcase WHERE et.activity = 'End trip' AND e.timestamp > et.timestamp ORDER BY e.idcase, e.timestamp;
SELECT e2.idcase, e2.timestamp, e2.activity, e2.resource FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'End trip' AND e2.timestamp > e1.timestamp ORDER BY e2.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT e.idcase, e.activity, e.timestamp, e.resource FROM event_log e JOIN ( SELECT idcase, MAX(timestamp) AS end_trip_timestamp FROM event_log WHERE activity = 'End trip' GROUP BY idcase ) end_trip ON e.idcase = end_trip.idcase WHERE e.timestamp > end_trip.end_trip_timestamp ORDER BY e.idcase, e.timestamp;
SELECT e1.idcase, e2.activity, e2.timestamp, e2.resource FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'End trip' AND e2.timestamp > e1.timestamp ORDER BY e1.idcase, e2.timestamp;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity != 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity != 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity != 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS action_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT idcase, MIN(timestamp) AS first_action_date FROM event_log GROUP BY idcase ORDER BY first_action_date;
SELECT DISTINCT idcase FROM event_log ORDER BY MIN(timestamp);
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment';
SELECT COUNT(DISTINCT idcase) AS process_instance_count FROM event_log WHERE activity = 'Request payment';
SELECT COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE activity = 'Request payment';
SELECT COUNT(DISTINCT idcase) AS number_of_cases FROM event_log WHERE activity = 'Request payment';
SELECT COUNT(DISTINCT idcase) AS number_of_cases FROM event_log WHERE activity = 'Request payment';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment';
SELECT idcase, MAX(timestamp) AS last_performance FROM event_log WHERE activity = 'Declaration final approved by director' GROUP BY idcase ORDER BY last_performance DESC LIMIT 1;
SELECT idcase, MAX(timestamp) AS last_timestamp FROM event_log WHERE activity = 'Declaration final approved by director' GROUP BY idcase ORDER BY last_timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase, MAX(timestamp) AS last_approval_timestamp FROM event_log WHERE activity = 'Declaration final approved by director' GROUP BY idcase ORDER BY last_approval_timestamp DESC LIMIT 1;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY activity_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY activity_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS occurrence_count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY occurrence_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY activity_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS approval_count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY approval_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS approval_count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY approval_count DESC LIMIT 1;
WITH FirstActivity AS ( SELECT idcase, MIN(timestamp) AS first_activity_time FROM event_log GROUP BY idcase ) SELECT el.resource, COUNT(DISTINCT el.idcase) AS cases_count FROM event_log el JOIN FirstActivity fa ON el.idcase = fa.idcase AND el.timestamp = fa.first_activity_time GROUP BY el.resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE (idcase, timestamp) IN ( SELECT idcase, MIN(timestamp) FROM event_log GROUP BY idcase ) GROUP BY resource;
SELECT resource, COUNT(*) AS first_activity_count FROM event_log WHERE (idcase, timestamp) IN ( SELECT idcase, MIN(timestamp) FROM event_log GROUP BY idcase ) GROUP BY resource;
WITH FirstEvents AS ( SELECT idcase, MIN(timestamp) AS first_event_time FROM event_log GROUP BY idcase ) SELECT el.resource, COUNT(*) AS action_count FROM event_log el JOIN FirstEvents fe ON el.idcase = fe.idcase AND el.timestamp = fe.first_event_time GROUP BY el.resource;
SELECT resource, COUNT(*) AS first_action_count FROM event_log WHERE (idcase, timestamp) IN ( SELECT idcase, MIN(timestamp) FROM event_log GROUP BY idcase ) GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS declarations_involved FROM event_log WHERE id IN ( SELECT MIN(id) FROM event_log GROUP BY idcase ) GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS initiated_declarations FROM event_log WHERE activity = 'Initiate Declaration' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT DATE(timestamp) AS activity_date, COUNT(DISTINCT idcase) AS cases_count FROM event_log WHERE activity LIKE '%rejected%' GROUP BY activity_date ORDER BY activity_date;
SELECT DATE(timestamp) AS activity_date, COUNT(DISTINCT idcase) AS cases_count FROM event_log WHERE activity LIKE '%rejected%' GROUP BY activity_date ORDER BY activity_date;
SELECT DATE(timestamp) AS activity_date, COUNT(DISTINCT idcase) AS instances_count FROM event_log WHERE activity = 'rejected' GROUP BY activity_date ORDER BY activity_date;
SELECT DATE(timestamp) AS event_date, COUNT(DISTINCT idcase) AS cases_count FROM event_log WHERE activity LIKE '%rejected%' GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS event_date, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE activity LIKE '%rejected%' GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS activity_date, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE activity LIKE '%rejected%' GROUP BY activity_date ORDER BY activity_date;
SELECT DATE(timestamp) AS rejection_date, COUNT(*) AS rejection_count FROM event_log WHERE activity LIKE '%rejected%' GROUP BY rejection_date ORDER BY rejection_date;
SELECT DATE(timestamp) AS rejection_date, COUNT(DISTINCT idcase) AS declaration_count FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp);
SELECT idcase, COUNT(*) AS event_count, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, COUNT(*) AS event_count FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY event_count DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase;
SELECT idcase, COUNT(*) AS event_count, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY event_count DESC LIMIT 5;
SELECT idcase, COUNT(*) AS activity_count, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, COUNT(*) AS event_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase ORDER BY event_count DESC LIMIT 5;
SELECT idcase, COUNT(*) AS event_count, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY event_count DESC;
SELECT idcase, COUNT(*) AS action_count, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS processing_time FROM event_log GROUP BY idcase ORDER BY action_count DESC LIMIT 5;
SELECT idcase, COUNT(*) AS action_count, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase HAVING action_count >= 1 -- Ensure that we only consider cases with at least one action ORDER BY action_count DESC LIMIT 5;
SELECT idcase, COUNT(*) AS event_count, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY event_count DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, COUNT(*) AS event_count FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY event_count DESC LIMIT 5;
SELECT idcase, COUNT(activity) AS activity_count, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING COUNT(activity) >= 20 ORDER BY activity_count DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, COUNT(*) AS event_count FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY event_count DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY duration DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS processing_time FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY processing_time DESC LIMIT 5;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') ORDER BY MAX(timestamp) DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') ORDER BY MAX(timestamp) DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') ORDER BY MAX(timestamp) DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') ORDER BY MAX(timestamp) DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') ORDER BY MAX(timestamp) DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') ORDER BY MAX(timestamp) DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment') ORDER BY MAX(timestamp) DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment') ORDER BY MAX(timestamp) DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') ORDER BY MAX(timestamp) DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') ORDER BY MAX(timestamp) DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') ORDER BY MAX(timestamp) DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase, COUNT(*) AS action_count FROM event_log GROUP BY idcase HAVING COUNT(*) >= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT AVG(cost) FROM event_log WHERE activity = 'Payment handled' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01';
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity = 'Payment handled' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'Payment handled' AND timestamp < '2018-01-01';
SELECT idcase, COUNT(*) AS permit_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS permit_activity_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS permit_activity_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS permit_activity_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS permit_event_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS permit_activity_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS permit_count FROM event_log WHERE activity LIKE '%Permit%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS permit_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS permit_count FROM event_log WHERE activity LIKE '%permit%' GROUP BY idcase;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, GROUP_CONCAT(DISTINCT resource) AS resources FROM event_log WHERE activity = 'Declaration rejected by supervisor';
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS declaration_count, resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT resource, COUNT(*) AS rejection_count FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource ORDER BY rejection_count DESC;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS declaration_count FROM event_log GROUP BY activity ORDER BY declaration_count DESC;
SELECT COUNT(DISTINCT idcase) AS declaration_count, activity FROM event_log GROUP BY activity;
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%');
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%');
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%');
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%')
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%');
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%');
SELECT r.activity, r.timestamp FROM event_log r JOIN event_log d ON r.timestamp > d.timestamp WHERE r.activity LIKE 'R%' AND d.activity LIKE 'D%' AND r.idcase = d.idcase; -- Assuming you want to match actions within the same case
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT resource, activity, COUNT(*) AS activity_count FROM event_log GROUP BY resource, activity
SELECT resource, activity, COUNT(*) AS activity_count FROM event_log GROUP BY resource, activity
SELECT resource, activity, COUNT(*) AS activity_count FROM event_log GROUP BY resource, activity ORDER BY resource, activity;
SELECT resource, activity, COUNT(*) AS activity_count FROM event_log GROUP BY resource, activity ORDER BY resource, activity;
SELECT activity, resource, COUNT(*) AS resource_count FROM event_log GROUP BY activity, resource
SELECT activity, resource, COUNT(*) AS action_count FROM event_log GROUP BY activity, resource ORDER BY activity, resource;
SELECT resource, activity, COUNT(*) AS activity_count FROM event_log GROUP BY resource, activity ORDER BY resource, activity;
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase, resource, activity, timestamp, cost FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' GROUP BY idcase ORDER BY idcase;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) = '2018-03-12' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS process_instance_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp <= '2018-03-12' GROUP BY idcase HAVING MAX(timestamp) = '2018-03-12' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE DATE(timestamp) = '2018-03-02' GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS number_of_cases FROM event_log WHERE idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE timestamp <= '2018-03-02' GROUP BY idcase HAVING MAX(timestamp) <= '2018-03-02' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) = '2018-03-02' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) = '2018-03-02' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS declaration_count FROM event_log WHERE DATE(timestamp) = '2018-03-02' GROUP BY activity;
SELECT activity, COUNT(*) AS action_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE DATE(timestamp) = '2018-03-02' GROUP BY idcase ) AND DATE(timestamp) = '2018-03-02' GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE id IN ( SELECT MIN(id) FROM event_log GROUP BY idcase ) AND activity LIKE 'Permit%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%' AND id IN (SELECT MIN(id) FROM event_log GROUP BY idcase);
SELECT COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE activity LIKE 'Permit%';
SELECT COUNT(DISTINCT idcase) AS number_of_cases FROM ( SELECT idcase, MIN(timestamp) AS first_event_time FROM event_log GROUP BY idcase ) AS first_events JOIN event_log ON first_events.idcase = event_log.idcase AND first_events.first_event_time = event_log.timestamp WHERE event_log.activity LIKE 'Permit%';
SELECT COUNT(*) FROM ( SELECT idcase, activity FROM event_log WHERE activity LIKE 'Permit%' AND (id, timestamp) IN ( SELECT id, MIN(timestamp) FROM event_log GROUP BY idcase ) ) AS first_events;
SELECT COUNT(DISTINCT idcase) AS process_instance_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' AND timestamp = ( SELECT MIN(timestamp) FROM event_log AS el2 WHERE el2.idcase = event_log.idcase ) );
SELECT COUNT(DISTINCT idcase) AS number_of_process_instances FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' AND timestamp = ( SELECT MIN(timestamp) FROM event_log AS el2 WHERE el2.idcase = event_log.idcase ) );
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' AND idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' AND timestamp = ( SELECT MIN(timestamp) FROM event_log AS el WHERE el.idcase = event_log.idcase ) );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' ) AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Payment handled' );
SELECT DISTINCT idcase FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment') AND idcase NOT IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Payment handled');
SELECT * FROM event_log WHERE activity IN ('Start trip', 'Declaration submitted by employee') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity IN ('Start trip', 'Declaration submitted by employee') ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('Start trip', 'Declaration submitted by employee') ORDER BY timestamp, resource;
SELECT activity, timestamp, resource FROM event_log WHERE activity IN ('Initiate travel', 'Request declaration') ORDER BY timestamp, resource;
SELECT id, activity, timestamp, resource FROM event_log WHERE activity IN ('Start trip', 'Request from employee') ORDER BY timestamp ASC;
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS occurrence_count FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS association_count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS save_count FROM event_log WHERE activity = 'Save travel declaration' GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS save_count FROM event_log WHERE activity = 'save' GROUP BY resource ORDER BY resource ASC;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS process_instance_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS process_instance_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS declaration_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS declaration_count FROM event_log GROUP BY activity;
SELECT resource, COUNT(DISTINCT activity) AS different_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(DISTINCT activity) AS distinct_activity_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS activity_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS unique_activity_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_different_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS action_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS different_actions FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity IN ('End trip', 'Payment handled') GROUP BY resource;
SELECT COUNT(*) AS activity_count, resource FROM event_log WHERE activity IN ('End trip', 'Payment handled') GROUP BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity IN ('End trip', 'Payment handled') GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity IN ('End trip', 'Payment handled') GROUP BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity IN ('end trip', 'payment handled') GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity IN ('End trip', 'Payment handled') GROUP BY resource;
SELECT resource, COUNT(*) AS completion_count FROM event_log WHERE activity IN ('end of trip', 'payment') GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity IN ('End trip', 'Make payment') GROUP BY resource;
WITH FirstOccurrence AS ( SELECT idcase, resource, MIN(timestamp) AS first_timestamp FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY idcase, resource ) SELECT COUNT(*) AS occurrence_count, resource FROM FirstOccurrence GROUP BY resource;
WITH FirstOccurrence AS ( SELECT idcase, resource, MIN(timestamp) AS first_timestamp FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY idcase, resource ) SELECT resource, COUNT(*) AS case_count FROM FirstOccurrence GROUP BY resource;
WITH FirstOccurrence AS ( SELECT idcase, resource, MIN(timestamp) AS first_timestamp FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY idcase, resource ) SELECT resource, COUNT(DISTINCT idcase) AS process_instance_count FROM FirstOccurrence GROUP BY resource;
WITH FirstOccurrence AS ( SELECT idcase, resource, MIN(timestamp) AS first_timestamp FROM event_log WHERE activity = 'declaration rejected by pre-approver' GROUP BY idcase, resource ) SELECT resource, COUNT(*) AS occurrence_count FROM FirstOccurrence GROUP BY resource;
WITH FirstOccurrence AS ( SELECT idcase, resource, MIN(timestamp) AS first_timestamp FROM event_log WHERE activity = 'declaration rejected by pre-approver' GROUP BY idcase, resource ) SELECT COUNT(*) AS occurrence_count, resource FROM FirstOccurrence GROUP BY resource;
SELECT resource, COUNT(*) AS rejection_count FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS declaration_rejections FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY idcase HAVING MIN(timestamp) = ( SELECT MIN(timestamp) FROM event_log AS inner_log WHERE inner_log.idcase = event_log.idcase ) ) GROUP BY resource;
SELECT idcase, COUNT(*) AS activity_count FROM event_log WHERE timestamp < ( SELECT timestamp FROM event_log AS e WHERE e.activity = 'End trip' AND e.idcase = event_log.idcase ) GROUP BY idcase;
SELECT idcase, COUNT(*) AS activity_count FROM event_log WHERE timestamp < (SELECT MIN(timestamp) FROM event_log AS el WHERE el.activity = 'End trip' AND el.idcase = event_log.idcase) GROUP BY idcase;
SELECT idcase, COUNT(*) AS activity_count FROM event_log WHERE idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' ) GROUP BY idcase ORDER BY idcase;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE timestamp < ( SELECT MIN(timestamp) FROM event_log AS el2 WHERE el2.activity = 'End trip' AND el2.idcase = event_log.idcase ) GROUP BY idcase;
WITH end_trip_events AS ( SELECT idcase, timestamp FROM event_log WHERE activity = 'End trip' ) SELECT e.idcase, COUNT(*) AS activity_count FROM event_log e JOIN end_trip_events et ON e.idcase = et.idcase AND e.timestamp < et.timestamp GROUP BY e.idcase;
SELECT idcase, COUNT(*) AS activity_count FROM event_log WHERE timestamp < ( SELECT MIN(timestamp) FROM event_log AS sub WHERE sub.activity = 'End trip' AND sub.idcase = event_log.idcase ) GROUP BY idcase;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' ) GROUP BY idcase;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' ) AND timestamp < ( SELECT MIN(timestamp) FROM event_log AS el2 WHERE el2.idcase = event_log.idcase AND el2.activity = 'End trip' ) GROUP BY idcase;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE timestamp < ( SELECT MIN(timestamp) FROM event_log AS el WHERE el.idcase = event_log.idcase AND el.activity = 'End trip' ) GROUP BY idcase;
SELECT e.idcase, COUNT(e.id) AS action_count FROM event_log e JOIN ( SELECT idcase, MIN(timestamp) AS end_trip_time FROM event_log WHERE activity = 'End trip' GROUP BY idcase ) end_trip ON e.idcase = end_trip.idcase AND e.timestamp < end_trip.end_trip_time GROUP BY e.idcase;
SELECT idcase, COUNT(*) AS action_count FROM event_log WHERE idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' ) GROUP BY idcase HAVING MAX(CASE WHEN activity = 'End trip' THEN timestamp END) IS NOT NULL ORDER BY idcase;
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT idcase, timestamp, resource FROM event_log WHERE activity = 'declaration rejected by supervisor' ORDER BY timestamp ASC;
SELECT idcase, MIN(timestamp) AS start_date FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY idcase ORDER BY start_date ASC;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC;
SELECT DISTINCT idcase, timestamp FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY MIN(timestamp);
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Permit rejected by supervisor' ORDER BY (SELECT MIN(timestamp) FROM event_log AS el WHERE el.idcase = event_log.idcase);
SELECT idcase, timestamp, resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) > '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Start trip' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-04-01' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'start trip' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE timestamp <= '2018-03-31' )
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Start trip' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-03-31' );
SELECT DISTINCT el1.idcase FROM event_log el1 WHERE el1.activity = 'start trip' AND el1.idcase NOT IN ( SELECT el2.idcase FROM event_log el2 WHERE el2.activity = 'end trip' AND el2.timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE timestamp <= '2018-03-31' )
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Start trip' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Start trip' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE timestamp <= '2018-03-31' )
SELECT idcase FROM event_log WHERE activity = 'End trip' GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' );
SELECT idcase FROM event_log WHERE activity = 'End trip' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE activity = 'End trip' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE activity = 'End trip' GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' );
SELECT idcase FROM event_log WHERE activity = 'End trip' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Payment handled') AND idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled'));
SELECT idcase FROM event_log WHERE activity = 'End trip' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' ) GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS distinct_resource_count, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS resource_count, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS unique_resource_count, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS resource_count, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS resource_count FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS resource_count FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS resource_count FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS resource_count FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_people, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(activity) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(activity) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(activity) >= 2;
SELECT idcase, COUNT(*) AS permit_activity_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase, COUNT(*) AS permit_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase, COUNT(*) AS activity_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%permit%'
SELECT idcase FROM event_log WHERE activity LIKE '%permit%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT e.id FROM event_log e INNER JOIN ( SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY idcase ) AS latest_events ON e.idcase = latest_events.idcase AND e.timestamp = latest_events.max_timestamp ORDER BY e.timestamp;
WITH LastEvents AS ( SELECT idcase, id, timestamp, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp DESC) AS rn FROM event_log ) SELECT idcase, id FROM LastEvents WHERE rn = 1 ORDER BY timestamp;
SELECT idcase, activity, timestamp FROM event_log WHERE (idcase, timestamp) IN ( SELECT idcase, MAX(timestamp) FROM event_log GROUP BY idcase ) ORDER BY timestamp;
WITH LastEvents AS ( SELECT idcase, activity, timestamp, resource, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp DESC) AS rn FROM event_log ) SELECT idcase, activity, timestamp, resource FROM LastEvents WHERE rn = 1 ORDER BY timestamp;
SELECT e.id, e.activity, e.timestamp, e.resource, e.cost, e.idcase FROM event_log e JOIN ( SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY idcase ) AS last_events ON e.idcase = last_events.idcase AND e.timestamp = last_events.max_timestamp ORDER BY e.timestamp;
SELECT e.id FROM event_log e JOIN ( SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY idcase ) AS last_events ON e.idcase = last_events.idcase AND e.timestamp = last_events.max_timestamp ORDER BY e.timestamp;
SELECT id, idcase, activity, timestamp FROM event_log WHERE (idcase, timestamp) IN ( SELECT idcase, MAX(timestamp) FROM event_log GROUP BY idcase ) ORDER BY timestamp;
WITH LastEvents AS ( SELECT idcase, activity, timestamp, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp DESC) AS rn FROM event_log ) SELECT idcase, activity, timestamp FROM LastEvents WHERE rn = 1 ORDER BY timestamp;
SELECT e.id, e.activity, e.timestamp, e.resource, e.cost, e.idcase FROM event_log e JOIN ( SELECT idcase, MAX(timestamp) AS last_timestamp FROM event_log GROUP BY idcase ) AS last_interventions ON e.idcase = last_interventions.idcase AND e.timestamp = last_interventions.last_timestamp ORDER BY e.idcase;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity, COUNT(*) AS occurrence_count FROM event_log GROUP BY activity HAVING COUNT(*) > 100;
SELECT activity, COUNT(*) AS occurrence_count FROM event_log GROUP BY activity HAVING COUNT(*) > 100;
SELECT activity, COUNT(*) AS occurrence_count FROM event_log GROUP BY activity HAVING COUNT(*) > 100;
SELECT activity, COUNT(*) AS action_count FROM event_log GROUP BY activity HAVING COUNT(*) > 100;
SELECT To list the number of cases in which an activity for each group of employees (employee, supervisor, administration, pre-approver, budget owner, director) was recorded, you can use the following SQL query. This query counts distinct cases for each group based on the activities associated with them: ```sql SELECT 'employee' AS grupo, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%employee%' UNION ALL SELECT 'supervisor' AS grupo, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%supervisor%' UNION ALL SELECT 'administration' AS grupo, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%administration%' UNION ALL SELECT 'pre-approver' AS grupo, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%pre
SELECT To answer the question regarding the number of cases in which someone from each group (employee, supervisor, administration, pre-approver, budget owner, director) was involved, you can use a SQL query that counts distinct cases for each group based on the activities associated with them. Here's how you can structure the query: ```sql SELECT COUNT(DISTINCT idcase) AS case_count, 'employee' AS grupo FROM event_log WHERE activity LIKE '%employee%' UNION SELECT COUNT(DISTINCT idcase) AS case_count, 'supervisor' AS grupo FROM event_log WHERE activity LIKE '%supervisor%' UNION SELECT COUNT(DISTINCT idcase) AS case_count, 'administration' AS grupo FROM event_log WHERE activity LIKE '%administration%' UNION SELECT COUNT(DISTINCT idcase) AS case_count, 'pre-approver' AS grupo FROM event_log WHERE activity LIKE '%pre-approver%' UNION
SELECT To answer the question regarding the number of cases in which an activity associated with each group of employees (employee, supervisor, administration, pre-approver, budget owner, director) was performed, you can use the following SQL query. This query counts the distinct cases for each group based on the activities that contain the respective group names. ```sql SELECT 'employee' AS grupo, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%employee%' UNION ALL SELECT 'supervisor' AS grupo, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%supervisor%' UNION ALL SELECT 'administration' AS grupo, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%administration%' UNION ALL SELECT 'pre-approver' AS grupo, COUNT(DISTINCT idcase) AS num_cases FROM
SELECT To list the number of cases in which at least one activity related to each group of employees (employee, supervisor, administration, pre-approver, budget owner, director) was performed, you can use the following SQL query. This query will count distinct cases for each group based on the activities associated with them: ```sql SELECT COUNT(DISTINCT idcase) AS case_count, 'employee' AS grupo FROM event_log WHERE activity LIKE '%employee%' UNION ALL SELECT COUNT(DISTINCT idcase) AS case_count, 'supervisor' AS grupo FROM event_log WHERE activity LIKE '%supervisor%' UNION ALL SELECT COUNT(DISTINCT idcase) AS case_count, 'administration' AS grupo FROM event_log WHERE activity LIKE '%administration%' UNION ALL SELECT COUNT(DISTINCT idcase) AS case_count, 'pre-approver' AS grupo FROM event_log WHERE activity LIKE '%pre-approver%'
SELECT To list the number of declarations in which an activity for which each employee group (employee, supervisor, administration, pre-approver, budget owner, director) is responsible was recorded, you can use the following SQL query. This query counts the distinct cases (declarations) for each group based on the activities associated with them. ```sql SELECT 'employee' AS grupo, COUNT(DISTINCT idcase) AS declaration_count FROM event_log WHERE activity LIKE '%employee%' UNION SELECT 'supervisor' AS grupo, COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%supervisor%' UNION SELECT 'administration' AS grupo, COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%administration%' UNION SELECT 'pre-approver' AS grupo, COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%pre-appro
SELECT resource, activity, COUNT(*) AS activity_count FROM event_log GROUP BY resource, activity ORDER BY CASE WHEN resource = 'employee' THEN 1 WHEN resource = 'supervisor' THEN 2 WHEN resource = 'administration' THEN 3 WHEN resource = 'pre-approver' THEN 4 WHEN resource = 'budget owner' THEN 5 WHEN resource = 'director' THEN 6 ELSE 7 -- for any other resources not listed END, activity_count DESC;
SELECT activity, COUNT(*) AS activity_count, CASE WHEN activity LIKE '%employee%' THEN 'employee' WHEN activity LIKE '%supervisor%' THEN 'supervisor' WHEN activity LIKE '%administration%' THEN 'administration' WHEN activity LIKE '%pre-approver%' THEN 'pre-approver' WHEN activity LIKE '%budget owner%' THEN 'budget owner' WHEN activity LIKE '%director%' THEN 'director' ELSE 'other' END AS grupo FROM event_log WHERE grupo IS NOT NULL GROUP BY activity, grupo ORDER BY activity_count DESC;
SELECT To present an ordered list with the number of times that actions from each employee group (employee, supervisor, administration, pre-approver, budget owner, director) were carried out, you can use the following SQL query. This query counts the occurrences of activities related to each group and orders the results by the count in descending order: ```sql SELECT CASE WHEN activity LIKE '%employee%' THEN 'employee' WHEN activity LIKE '%supervisor%' THEN 'supervisor' WHEN activity LIKE '%administration%' THEN 'administration' WHEN activity LIKE '%pre-approver%' THEN 'pre-approver' WHEN activity LIKE '%budget owner%' THEN 'budget owner' WHEN activity LIKE '%director%' THEN 'director' ELSE 'other' END AS grupo, COUNT(*) AS action_count FROM event_log WHERE activity LIKE '%employee%' OR activity LIKE '%supervisor%' OR activity LIKE '%administration%'
SELECT DISTINCT e2.idcase FROM event_log AS e2 INNER JOIN event_log AS e1 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp;
SELECT DISTINCT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp;
SELECT DISTINCT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp;
SELECT DISTINCT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp;
SELECT DISTINCT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp;
SELECT DISTINCT el1.idcase FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase WHERE el2.activity = 'End trip' AND el1.timestamp > el2.timestamp;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE (idcase, timestamp) IN ( SELECT idcase, MAX(timestamp) FROM event_log GROUP BY idcase ) AND activity = 'Send reminder';
SELECT COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE (idcase, timestamp) IN ( SELECT idcase, MAX(timestamp) FROM event_log GROUP BY idcase ) AND activity = 'Send reminder';
SELECT COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE (idcase, timestamp) IN ( SELECT idcase, MAX(timestamp) FROM event_log GROUP BY idcase ) AND activity = 'Send reminder';
SELECT COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log AS e1 WHERE activity = 'Send reminder' AND timestamp = ( SELECT MAX(timestamp) FROM event_log AS e2 WHERE e1.idcase = e2.idcase ) );
SELECT COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE activity = 'Send reminder' AND timestamp = (SELECT MAX(timestamp) FROM event_log WHERE activity = 'Send reminder');
SELECT COUNT(*) AS stuck_declarations FROM event_log WHERE activity = 'Send reminder';
SELECT DISTINCT resource FROM event_log WHERE resource IS NOT NULL AND resource NOT IN ( SELECT DISTINCT resource FROM event_log WHERE DATE(timestamp) = '2018-03-31' );
SELECT DISTINCT resource FROM event_log WHERE resource IS NOT NULL AND resource NOT IN ( SELECT DISTINCT resource FROM event_log WHERE DATE(timestamp) = '2018-03-31' );
SELECT DISTINCT resource FROM event_log WHERE resource IS NOT NULL AND resource NOT IN ( SELECT DISTINCT resource FROM event_log WHERE DATE(timestamp) = '2018-03-31' );
SELECT DISTINCT resource FROM event_log WHERE resource IS NOT NULL AND resource NOT IN ( SELECT DISTINCT resource FROM event_log WHERE DATE(timestamp) = '2018-03-31' );
SELECT DISTINCT resource FROM event_log WHERE resource NOT IN ( SELECT DISTINCT resource FROM event_log WHERE DATE(timestamp) = '2018-03-31' );
SELECT DISTINCT resource FROM event_log WHERE resource NOT IN ( SELECT DISTINCT resource FROM event_log WHERE timestamp BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59' )
SELECT activity, COUNT(*) AS event_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS performance_frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS performance_frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity;
SELECT activity, COUNT(*) AS activity_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY idcase ) GROUP BY activity;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Payment handled');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Payment handled');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Payment handled');
SELECT COUNT(DISTINCT idcase) AS cases_without_payment_handled FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Payment handled');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Payment handled');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Payment handled' );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Payment handled' )
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Payment handled' );
SELECT activity, COUNT(DISTINCT resource) AS distinct_resource_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) AS distinct_resource_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) AS distinct_resource_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) AS unique_resource_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) AS distinct_resource_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) AS employee_count FROM event_log GROUP BY activity;
SELECT e1.activity, e1.timestamp, e1.resource, e1.idcase FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' AND e1.timestamp < e2.timestamp ORDER BY e1.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' AND e1.timestamp < e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT DISTINCT e1.activity FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' AND e1.timestamp < e2.timestamp ORDER BY e1.timestamp;
SELECT event_count, COUNT(*) AS case_count FROM ( SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase ) AS case_events GROUP BY event_count ORDER BY event_count;
SELECT event_count, COUNT(*) AS case_count FROM ( SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ) AS event_counts GROUP BY event_count ORDER BY event_count;
SELECT event_count, COUNT(*) AS case_count FROM ( SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ) AS event_counts GROUP BY event_count ORDER BY event_count;
SELECT event_count, COUNT(*) AS case_count FROM ( SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase ) AS event_counts GROUP BY event_count ORDER BY event_count;
SELECT event_count, COUNT(*) AS declaration_count FROM ( SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ) AS subquery GROUP BY event_count ORDER BY event_count;
SELECT AVG(total_cost) FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS case_costs;
SELECT AVG(total_cost) FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS case_totals;
SELECT AVG(total_cost) FROM ( SELECT SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS case_costs;
SELECT AVG(total_cost) FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS case_totals;
SELECT AVG(total_cost) FROM ( SELECT SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS case_costs;
SELECT AVG(cost) AS average_cost FROM event_log;
SELECT resource, AVG(cost) AS mean_cost FROM event_log GROUP BY resource;
SELECT resource, AVG(cost) AS mean_cost FROM event_log GROUP BY resource;
SELECT resource, AVG(cost) AS mean_cost FROM event_log GROUP BY resource;
SELECT resource, AVG(cost) AS mean_cost FROM event_log GROUP BY resource;
SELECT resource, AVG(cost) AS mean_cost FROM event_log GROUP BY resource;
SELECT resource, AVG(cost) AS mean_cost FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(DISTINCT idcase) AS declaration_count FROM event_log GROUP BY resource ORDER BY declaration_count DESC LIMIT 10;
SELECT strftime('%Y-%m-%d', timestamp) AS event_date, COUNT(*) AS event_count FROM event_log GROUP BY strftime('%Y-%m-%d', timestamp);
SELECT DATE(timestamp) AS activity_date, activity, COUNT(*) AS occurrences FROM event_log GROUP BY activity_date, activity ORDER BY activity_date, activity;
SELECT DATE(timestamp) AS action_date, COUNT(*) AS action_count FROM event_log GROUP BY action_date ORDER BY action_date;
SELECT DISTINCT e1.idcase, e1.activity FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase AND e1.activity = e2.activity AND e1.resource <> e2.resource AND e1.timestamp < e2.timestamp
SELECT e1.idcase, e1.activity, e1.resource AS resource1, e2.resource AS resource2 FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = e2.activity AND e1.timestamp < e2.timestamp AND e1.resource <> e2.resource ORDER BY e1.idcase, e1.timestamp;
SELECT To find out for which declarations the same action was recorded consecutively but carried out by different employees, you can use a self-join on the `event_log` table. The idea is to join the table with itself, looking for consecutive records (based on the `timestamp`) that have the same `activity` but different `resource` (employees) for the same `idcase`. Here's how you can write that SQL query: ```sql SELECT DISTINCT e1.idcase, e1.activity FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = e2.activity AND e1.resource <> e2.resource AND e1.timestamp < e2.timestamp AND NOT EXISTS ( SELECT 1 FROM event_log e3 WHERE e3.idcase = e1.idcase AND e3.activity = e1.activity AND e3.timestamp > e1.timestamp
SELECT e.idcase, COUNT(*) AS event_count FROM event_log e WHERE e.timestamp < ( SELECT MIN(sub.timestamp) FROM event_log sub WHERE sub.activity = 'Declaration final approved by director' AND sub.idcase = e.idcase ) AND e.idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ) GROUP BY e.idcase;
SELECT idcase, COUNT(*) AS events_before FROM event_log e1 WHERE timestamp < ( SELECT timestamp FROM event_log e2 WHERE e2.idcase = e1.idcase AND e2.activity = 'Declaration final approved by director' ) GROUP BY idcase;
SELECT idcase, COUNT(*) AS interventions_before_approval FROM event_log WHERE timestamp < ( SELECT MAX(timestamp) FROM event_log AS el WHERE el.idcase = event_log.idcase AND el.activity = 'Declaration final approved by director' ) GROUP BY idcase HAVING COUNT(*) > 0;
SELECT e1.idcase, e1.timestamp AS submitted_time, e2.timestamp AS approved_time, julianday(e2.timestamp) - julianday(e1.timestamp) AS time_difference_days FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permit submitted by employee' AND e2.activity = 'Permit approved by administration' ORDER BY e1.idcase;
SELECT e1.idcase, e1.timestamp AS submitted_timestamp, e2.timestamp AS approved_timestamp, julianday(e2.timestamp) - julianday(e1.timestamp) AS time_interval_days FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permit submitted by employee' AND e2.activity = 'Permit approved by administration' ORDER BY e1.timestamp;
SELECT To calculate the time that passed between the employee requesting a permit and the permit being approved by administration, you can use a similar approach to the previous examples. You will need to join the event log table on itself to find the timestamps for both activities related to the same case. Here's how you can structure the SQL query: ```sql WITH RankedEvents AS ( SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log WHERE activity IN ('Permit requested by employee', 'Permit approved by administration') ) SELECT idcase, COALESCE(strftime('%s', MAX(CASE WHEN activity = 'Permit approved by administration' THEN timestamp END)) - strftime('%s', MAX(CASE WHEN activity = 'Permit requested by employee' THEN timestamp END)), 0) AS duration FROM Ranked
SELECT DISTINCT(idcase) FROM ( SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log ) AS subquery WHERE activity = next_activity;
SELECT DISTINCT idcase FROM ( SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log ) AS subquery WHERE activity = next_activity;
SELECT idcase FROM ( SELECT idcase, activity, COUNT(*) AS activity_count FROM event_log GROUP BY idcase, activity ) AS activity_counts WHERE activity_count > 1;
SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1;
SELECT DISTINCT(idcase) FROM ( SELECT idcase, activity, LAG(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS previous_activity FROM event_log ) AS subquery WHERE activity = previous_activity;
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1;
WITH RankedEvents AS ( SELECT idcase, activity, timestamp, LAG(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS previous_activity FROM event_log ) SELECT DISTINCT idcase FROM RankedEvents WHERE activity = previous_activity;
WITH ConsecutiveActivities AS ( SELECT idcase, activity, LAG(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS previous_activity FROM event_log ) SELECT DISTINCT idcase, activity FROM ConsecutiveActivities WHERE activity = previous_activity;
SELECT DISTINCT e1.idcase FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = e2.activity AND e1.timestamp < e2.timestamp AND NOT EXISTS ( SELECT 1 FROM event_log e3 WHERE e3.idcase = e1.idcase AND e3.timestamp > e1.timestamp AND e3.timestamp < e2.timestamp ) ORDER BY e1.idcase;
SELECT DISTINCT e1.idcase FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = e2.activity AND e1.timestamp < e2.timestamp AND e1.timestamp = ( SELECT MAX(e3.timestamp) FROM event_log e3 WHERE e3.idcase = e1.idcase AND e3.activity = e1.activity AND e3.timestamp < e2.timestamp )
SELECT DISTINCT e1.idcase FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = e2.activity AND e1.timestamp < e2.timestamp AND e1.timestamp = (SELECT MIN(e3.timestamp) FROM event_log e3 WHERE e3.idcase = e1.idcase AND e3.activity = e1.activity AND e3.timestamp > e1.timestamp);
WITH RankedEvents AS ( SELECT idcase, activity, timestamp, LAG(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS previous_activity FROM event_log ) SELECT DISTINCT idcase FROM RankedEvents WHERE activity = previous_activity
SELECT DISTINCT resource FROM event_log WHERE activity LIKE '%supervisor%'
SELECT DISTINCT(resource) FROM event_log WHERE activity LIKE '%supervisor%'
SELECT DISTINCT(resource) FROM event_log WHERE activity LIKE '%budget%'
SELECT DISTINCT(resource) FROM event_log WHERE activity LIKE '%budget owner%'
