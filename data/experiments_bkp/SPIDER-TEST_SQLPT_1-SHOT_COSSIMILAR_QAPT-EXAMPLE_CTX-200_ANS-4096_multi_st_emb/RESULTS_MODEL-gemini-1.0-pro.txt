SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT count(*) FROM event_log WHERE activity = 'fim da viagem' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE resource = 'James' AND activity = 'Fim da viagem'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT COUNT(*) AS "Quantidade de Eventos", resource FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Quantidade de Eventos", resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource
SELECT COUNT(*) AS "Número de Atividades", resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS execution_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS execution_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS action_count FROM event_log GROUP BY resource ORDER BY action_count DESC;
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT resource,COUNT(*) FROM event_log WHERE resource = 'Peter' GROUP BY resource
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING STRFTIME('%Y-%m', MAX(timestamp)) = '2018-03' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING STRFTIME('%Y-%m', MAX(timestamp)) = '2018-03' ) GROUP BY activity;
SELECT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MAX(timestamp)) = '2018-03' );
SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MAX(timestamp)) = '2018-03'
SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MAX(timestamp)) = '2018-03';
SELECT idcase FROM event_log GROUP BY idcase HAVING max(timestamp) BETWEEN '2018-03-01' AND '2018-03-31';
SELECT idcase FROM event_log WHERE activity = 'CLOSED' AND timestamp BETWEEN '2018-03-01' AND '2018-03-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource NOT IN ( SELECT resource FROM event_log WHERE activity = 'Declaração pré-aprovada' AND resource = 'Douglas' );
SELECT * FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource NOT LIKE '%Douglas%'
SELECT COUNT (DISTINCT resource) FROM event_log
SELECT COUNT (DISTINCT resource) FROM event_log
SELECT COUNT (DISTINCT resource) FROM event_log
SELECT COUNT (DISTINCT idcase) FROM event_log
SELECT COUNT(DISTINCT resource)
SELECT COUNT (DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT (DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity LIKE '%process declaration%';
SELECT count(distinct resource) FROM event_log
SELECT resource,COUNT(*) FROM event_log GROUP BY resource
SELECT count(*) AS "Total de Eventos", resource FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Total de Eventos", resource FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Total de Ações", resource FROM event_log GROUP BY resource;
SELECT idcase FROM event_log WHERE cost > 2.225
SELECT idcase FROM event_log WHERE cost > 2.225
SELECT DISTINCT idcase FROM event_log WHERE cost > 2.225;
SELECT DISTINCT activity FROM event_log WHERE cost > 2225
SELECT id FROM event_log WHERE cost > 2.225
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'process claim' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource,COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource,COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT (*) DESC
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource ORDER BY count DESC;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT activity FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT **Declaração 1:** * **Análise:** A declaração analisa a tabela event_log para identificar todas as linhas onde o campo cost não é nulo. * **Custo:** O custo da declaração é o custo de analisar a tabela event_log e retornar as linhas correspondentes. **Declaração 2:** * **Análise:** A declaração analisa a tabela event_log para identificar todas as linhas onde o campo cost não é nulo. * **Custo:** O custo da declaração é o custo de analisar a tabela event_log e retornar as linhas correspondentes. * **Custo adicional:** A declaração também envolve a análise do esquema da tabela event_log para determinar o tipo de dados do campo cost.
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Requisição de pagamento' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Requisição de pagamento'
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Requisição de pagamento' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp, resource
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC LIMIT 10;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) = ( SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' AND idcase LIKE '%declaração%'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity ORDER BY count DESC
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity ORDER BY count DESC;
SELECT idcase FROM event_log group by idcase having count(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20
SELECT idcase FROM event_log group by idcase having count(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20
SELECT resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)
SELECT resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)
SELECT resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource ORDER BY case_count DESC LIMIT 5
SELECT resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)
SELECT resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)
SELECT resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)
SELECT resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5;
SELECT resource from event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN (SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) desc LIMIT 5)
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource;
SELECT resource, COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource;
SELECT resource, COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource;
SELECT resource, COUNT(*) AS total_occurrences FROM event_log WHERE activity = 'início da viagem' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource;
SELECT COUNT(*) AS "Número de Ações", e."resource" AS "Funcionário" FROM event_log e WHERE e."activity" = 'Start Trip' AND e."timestamp" BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY e."resource" ORDER BY "Número de Ações" DESC;
SELECT resource, COUNT(CASE WHEN activity = 'Início da viagem' THEN 1 END) AS "Início da viagem" FROM event_log WHERE timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(*) AS "Ocorrências", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(*) AS "Execuções", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(*) AS "Execuções", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(*) AS "Execuções", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(*) AS "Quantidade de ocorrências", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(*) AS "Número de ocorrências", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela supervisão' GROUP BY resource
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase HAVING event_count > 20 ORDER BY event_count DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase FROM event_log group by idcase having count(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase, count(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) IN (SELECT Count(activity) FROM event_log GROUP BY idcase ORDER BY Count(activity) Desc LIMIT 10) order by COUNT(activity) DESC
SELECT idcase, count(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 1;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase order by count(*) desc limit 5)
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) DESC LIMIT 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento') AND resource = 'Sara'
SELECT DISTINCT idcase FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE resource = 'Sara') AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento')
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento') AND resource = 'Sara';
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) AND resource = 'Sara';
SELECT * FROM event_log WHERE idcase = 'declaração 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT * FROM event_log WHERE idcase = 'declaração 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT activity, timestamp, resource, cost FROM event_log WHERE idcase = 'declaração 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = '143598';
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) desc LIMIT 10) ORDER BY COUNT(*) DESC
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) desc LIMIT 10) ORDER BY COUNT(*) DESC
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) desc LIMIT 10) ORDER BY COUNT(*) DESC
SELECT idcase, COUNT(*) AS num_execucoes FROM event_log GROUP BY idcase ORDER BY num_execucoes DESC LIMIT 10;
SELECT idcase, COUNT(*) AS num_execucoes FROM event_log GROUP BY idcase ORDER BY num_execucoes DESC LIMIT 10;
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) desc LIMIT 10) ORDER BY COUNT(*) DESC
SELECT idcase, COUNT(*) AS num_execucoes FROM event_log GROUP BY idcase ORDER BY num_execucoes DESC LIMIT 10;
SELECT idcase, COUNT(*) AS num_execucoes FROM event_log GROUP BY idcase ORDER BY num_execucoes DESC LIMIT 10;
SELECT idcase, COUNT(*) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT DISTINCT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by COUNT(*) DESC
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by COUNT(*) DESC
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 10
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 10
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 10
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 10
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT "id", "activity", "cost" FROM event_log
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING event_count >= 100 ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING event_count >= 100 ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY count DESC
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, id FROM event_log ORDER BY idcase, timestamp
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT * FROM event_log ORDER BY idcase, timestamp
SELECT count(*) AS "Execuções", resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT count(*) AS "Total de execuções", resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT count(*) AS "Total de execuções", resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count DESC
SELECT count(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' AND resource IN (SELECT resource FROM event_log WHERE activity = 'Tornou-se administrador') GROUP BY resource
SELECT count(*) AS "Número de eventos", resource AS "Recurso" FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource;
SELECT count(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT count(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT activity, count(*) AS occurrence_count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity;
SELECT activity, count(*) AS count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity
SELECT activity, count(*) AS count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' AND activity LIKE '%process declaration%' GROUP BY activity;
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(*) AS "Total de ações de processamento de declarações" FROM event_log WHERE resource = 'Thomas' AND activity LIKE '%processamento de declaração%' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS last_execution FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS last_execution FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS last_occurrence_date FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) FROM event_log GROUP BY activity
SELECT e.activity, COUNT(e.activity) AS count_activity, strftime('%Y', e.timestamp) AS year FROM event_log e WHERE e.activity IN ('Declaração aprovada pelo supervisor', 'Permissão rejeitada pelo funcionário') AND strftime('%Y', e.timestamp) IN ('2017', '2018') GROUP BY e.activity, year ORDER BY year, count_activity DESC;
SELECT COUNT(*) AS "Ocorrências da atividade 'declaração aprovada pelo supervisor'", STRFTIME('%Y', "timestamp") AS "Ano" FROM "event_log" WHERE "activity" = 'Declaração aprovada pelo supervisor' AND STRFTIME('%Y', "timestamp") = '2017' GROUP BY "Ano" UNION ALL SELECT COUNT(*) AS "Ocorrências da atividade 'permissão rejeitada pelo funcionário'", STRFTIME('%Y', "timestamp") AS "Ano" FROM "event_log" WHERE "activity" = 'Permissão rejeitada pelo funcionário' AND STRFTIME('%Y', "timestamp") = '2018' GROUP BY "Ano";
SELECT COUNT(DISTINCT id) AS "Eventos de 'Declaração aprovada pelo supervisor'" FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31'; SELECT COUNT(DISTINCT id) AS "Eventos de 'Permissão rejeitada pelo funcionário'" FROM event_log WHERE activity = 'Permissão rejeitada pelo funcionário' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31';
SELECT COUNT(*) AS "Número de vezes", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT e1.idcase) AS "Número de casos" FROM event_log e1 INNER JOIN (SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ORDER BY timestamp) AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo supervisor' ORDER BY e2.timestamp;
SELECT COUNT(DISTINCT idcase) AS "Número de aprovações de declaração", resource AS "Supervisor responsável" FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY resource ORDER BY "Número de aprovações de declaração" DESC; SELECT COUNT(DISTINCT idcase) AS "Número de permissões rejeitadas", resource AS "Funcionário responsável" FROM event_log WHERE activity = 'Permissão rejeitada' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31' GROUP BY resource ORDER BY "Número de permissões rejeitadas" DESC;
SELECT activity, MAX(timestamp) AS end_date, id FROM event_log GROUP BY id ORDER BY end_date;
SELECT activity, MAX(timestamp) AS end_date, id FROM event_log GROUP BY id ORDER BY end_date;
SELECT id, activity, timestamp FROM event_log WHERE activity LIKE '%declaração%' ORDER BY timestamp
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaração requisitada pelo funcionário'
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaração requisitada pelo funcionário' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas';
SELECT count(*) FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas'
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaração requisitada pelo funcionário'
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'statement_execution' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT * FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT activity, COUNT(*) AS event_count FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity
SELECT activity, count(*) AS event_count FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity
SELECT activity FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3)
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity='Declaração final aprovada pelo diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity='Declaração final aprovada pelo diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT idcase FROM event_log WHERE resource = 'Charles' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND strftime('%Y-%m', timestamp) = '2018-01' );
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND timestamp NOT LIKE '2018-01%'
SELECT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01' ) AND resource = 'Charles';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Charles' AND timestamp NOT BETWEEN '2018-01-01' AND '2018-01-31';
SELECT Não há informações sobre intervenções do funcionário Charles no texto fornecido.
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT activity) > 3
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT activity) > 3
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT activity) > 3
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(idcase) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(idcase) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase;
SELECT idcase, SUM(strftime('%s', timestamp) - strftime('%s', previous_timestamp)) AS total_time FROM ( SELECT idcase, activity, timestamp, LAG(timestamp, 1, 0) OVER (PARTITION BY idcase ORDER BY timestamp) AS previous_timestamp FROM event_log ) GROUP BY idcase
SELECT idcase, ( JULIANDAY(MAX(timestamp)) - JULIANDAY(MIN(timestamp)) ) * 24 AS duration_hours FROM event_log GROUP BY idcase
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log GROUP BY idcase;
SELECT idcase, ( SELECT MAX(timestamp) FROM event_log WHERE idcase = e.idcase ) - ( SELECT MIN(timestamp) FROM event_log WHERE idcase = e.idcase ) AS duration FROM event_log AS e GROUP BY idcase
SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' and '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' and '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' and '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' and '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' and '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' and '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' and '2017-12-31'
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT resource, COUNT(*) AS num_rejeicoes FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource ORDER BY num_rejeicoes DESC;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE max_cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)) AND cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase
SELECT MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE cost > 0 GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE max_cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT activity, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY activity
SELECT MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE activity = 'statement' AND cost > 0 GROUP BY idcase
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', f.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', f.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado' FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', f.activity FROM event_log p INNER JOIN (SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN (SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', f.activity FROM event_log p INNER JOIN (SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase) e ON e.idcase = p.idcase AND p.activity = 'Intervenção' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN (SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', CASE WHEN p.activity = 'Fim da viagem' THEN 'Fim da viagem' WHEN x.activity = 'Declaração rejeitada pelo funcionário' THEN 'Declaração rejeitada pelo funcionário' WHEN y.activity = 'Pagamento efetuado' THEN 'Pagamento efetuado' END AS 'Atividade final' FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado';
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Tempo decorrido', p.activity AS 'Atividade final' FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase WHERE p.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado');
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Tempo decorrido', p.activity AS 'Atividade final' FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase WHERE p.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado');
SELECT e.idcase, e.activity AS evento_de_interesse, strftime('%s', e.timestamp) - strftime('%s', s.start_time) AS tempo_decorrido FROM event_log e JOIN (SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase) s ON e.idcase = s.idcase WHERE e.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado');
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado' FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Início do processamento da declaração' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado';
SELECT COUNT(*) AS "Número de Atividades", resource AS "Recurso" FROM event_log GROUP BY resource
SELECT * FROM event_log WHERE activity = 'requisição de pagamento';
SELECT el.id, el.activity, el.timestamp, el.resource, el.cost, el.idcase FROM event_log AS el WHERE el.idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' )
SELECT event_log.activity, event_log.timestamp, event_log.resource, event_log.cost, event_log.idcase FROM event_log WHERE event_log.activity = 'Requisição de pagamento' AND event_log.resource LIKE '%Declaração%'
SELECT AVG(timestamp - timestamp) AS avg_duration, activity FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity
SELECT AVG(timestamp - timestamp) AS avg_duration, activity FROM event_log GROUP BY activity
SELECT AVG(timestamp - timestamp) AS avg_duration, activity FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(duration) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - timestamp) FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', timestamp)) FROM event_log GROUP BY activity
SELECT idcase, MAX(cost) FROM event_log GROUP BY idcase ORDER BY cost DESC
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log) GROUP BY idcase
SELECT idcase, MAX(cost) FROM event_log group by idcase
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT DISTINCT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT activity, MAX(cost) FROM event_log GROUP BY activity
SELECT * FROM event_log ORDER BY cost DESC
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log ORDER BY cost DESC
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log ORDER BY cost DESC;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log ORDER BY cost DESC LIMIT 10;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 1;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log ORDER BY cost DESC LIMIT 10;
SELECT activity FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem'
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT el.id, el.activity, el.timestamp, el.resource, el.cost, el.idcase FROM event_log el JOIN intervention i ON el.idcase = i.idcase WHERE el.activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT activity, count(*) FROM event_log group by activity
SELECT activity,COUNT(*) FROM event_log GROUP BY activity
SELECT activity,COUNT(*) FROM event_log GROUP BY activity
SELECT activity, COUNT(*) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT id) AS "Execuções", activity FROM event_log GROUP BY activity;
SELECT count(*) AS "execucoes", activity FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT activity,COUNT(*) FROM event_log GROUP BY activity
SELECT activity, count(*) AS event_count FROM event_log GROUP BY activity
SELECT activity,COUNT(*) FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT count(*) AS "Total de Execuções", activity AS "Atividade" FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity;
SELECT activity,COUNT(*) FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity;
SELECT count(*) AS "Execuções", activity AS "Atividade" FROM event_log GROUP BY activity;
SELECT activity, count(*) AS intervention_count FROM event_log GROUP BY activity;
SELECT A declaração fornecida não requer que uma ação seja executada mais de uma vez.
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(*) AS "Quantidade de Intervenções", activity AS "Tipo de Ação" FROM event_log GROUP BY activity;
SELECT count (*), activity FROM event_log group by activity
SELECT activity, count(*) AS num_interventions FROM event_log GROUP BY activity;
SELECT count (*), activity FROM event_log group by activity
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT event_log.cost, event_log.activity FROM event_log ORDER BY event_log.cost;
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT cost, activity FROM event_log ORDER BY cost
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT activity, action, SUM(cost) AS total_cost FROM event_log GROUP BY activity, action ORDER BY total_cost DESC;
SELECT **Declaração 1:** * **Ação:** Leitura de todas as linhas da tabela event_log * **Custo:** O custo de leitura de cada linha é desconhecido, mas não é nulo **Declaração 2:** * **Ação:** Criação da tabela event_log * **Custo:** O custo de criação da tabela é desconhecido, mas não é nulo **Declaração 3:** * **Ação:** Seleção de todas as linhas da tabela event_log onde o campo cost não é nulo * **Custo:** O custo de leitura de cada linha é desconhecido, mas não é nulo **Declaração 4:** * **Ação:** Relatório dos custos das execuções das tarefas de processamento de declarações, classificados do maior para o menor custo * **Custo:** O custo de classificação dos resultados é desconhecido, mas não é nulo
SELECT * FROM event_log WHERE activity LIKE '%permissão%';
SELECT * FROM event_log WHERE activity LIKE '%permissão%';
SELECT * FROM event_log WHERE activity LIKE '%permissão%';
SELECT * FROM event_log WHERE activity LIKE '%permissão%'
SELECT * FROM event_log WHERE activity LIKE '%permissão%'
SELECT * FROM event_log WHERE activity LIKE '%permissão%';
SELECT event_log.id, event_log.activity, event_log.timestamp, event_log.resource, event_log.cost, event_log.idcase FROM event_log WHERE event_log.activity LIKE '%permissão%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity, timestamp, resource, cost, idcase FROM event_log WHERE activity LIKE '%permissão%';
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' AND resource LIKE '%declaração%'
SELECT activity, resource, cost, idcase FROM event_log WHERE activity LIKE '%permissão%'
SELECT MAX (cost) FROM event_log
SELECT MAX (cost) FROM event_log
SELECT MAX (cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX (cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' INTERSECT SELECT DISTINCT idcase FROM event_log WHERE resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' INTERSECT SELECT DISTINCT idcase FROM event_log WHERE resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas')
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas') GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas') GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2
SELECT DISTINCT idcase FROM event_log where resource = 'Thomas' AND resource = 'Sara'
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start_trip', 'end_trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG (cost) FROM event_log WHERE activity NOT IN ('start_trip', 'end_trip')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('início da viagem', 'fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start_trip', 'end_trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start Trip', 'End Trip');
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT activity, cost FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT * FROM event_log WHERE cost IN ( SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5 )
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT activity, cost FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT select idcase from event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT select idcase from event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING count(activity) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT activity, timestamp, cost, idcase FROM event_log WHERE resource LIKE 'M%'
SELECT DISTINCT(resource) FROM event_log WHERE activity LIKE '%supervisor%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity, COUNT(*) AS total_registros FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity from event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING count(activity) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING count(activity) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT (*) > 5
SELECT DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 5
SELECT activity from event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity, COUNT(*) AS count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 5 ) GROUP BY activity ORDER BY count DESC
SELECT activity, idcase FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3) GROUP BY activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity, COUNT(*) FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT activity, COUNT(*) FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT activity, idcase, COUNT(*) FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT count(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300';
SELECT count(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT count (*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT count(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT * FROM event_log WHERE idcase = 'declaração 56300'
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity;
SELECT COUNT(DISTINCT id) AS "Número de ocorrências" FROM event_log WHERE activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) AND timestamp < '2017-01-10'
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log WHERE activity = 'allocation' GROUP BY resource
SELECT resource, count(distinct idcase) FROM event_log group by resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, count(distinct idcase) FROM event_log group by resource
SELECT resource, count(distinct idcase) FROM event_log group by resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource,COUNT(*) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS count_resource FROM event_log GROUP BY resource
SELECT COUNT(*) FROM event_log GROUP BY resource
SELECT COUNT(*) AS event_count, resource FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Número de ocorrências" FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Número de Ocorrências", resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_interventions FROM event_log WHERE activity = 'intervention' GROUP BY resource;
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase) AS num_casos, resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS num_casos, resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT id), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' AND activity = 'process' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'process' AND timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity LIKE '%intervention%' AND timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT "activity", "resource" FROM "event_log" WHERE "resource" NOT IN ('Joshua', 'Teresa')
SELECT event_log.activity, event_log.resource FROM event_log WHERE event_log.resource NOT IN ('Joshua', 'Teresa')
SELECT activity, resource FROM event_log WHERE activity LIKE '%process%' AND resource NOT IN ('Joshua', 'Teresa');
SELECT activity, resource FROM event_log WHERE activity LIKE '%declaração%' AND resource NOT IN ('Joshua', 'Teresa');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Atividade iniciada', 'Atividade finalizada') AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Pagamento solicitado', 'Pagamento efetuado') );
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT * FROM event_log WHERE resource IS NULL
SELECT activity FROM event_log WHERE resource IS NULL
SELECT activity FROM event_log WHERE resource IS NULL
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL
SELECT activity FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL
SELECT * FROM event_log WHERE resource IS NULL
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01'
SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) < '2017-03'
SELECT DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) < '2017-03')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'process_start' AND timestamp < '2017-03-01'
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01'
SELECT DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) < '2017-03')
SELECT activity FROM event_log WHERE timestamp < '2017-03-01'
SELECT activity FROM event_log WHERE timestamp < '2017-03-01' AND activity LIKE '%declaração%' GROUP BY activity
SELECT DISTINCT activity FROM event_log WHERE timestamp < '2017-03-01' AND activity LIKE '%intervencao%'
SELECT activity FROM event_log WHERE timestamp < '2017-03-01' GROUP BY activity
SELECT idcase FROM event_log WHERE activity = 'inicio da viagem' AND timestamp >= '2017-03-01' AND timestamp < '2017-04-01';
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' GROUP BY idcase HAVING MIN(timestamp) = ( SELECT MIN(timestamp) FROM event_log WHERE activity = 'Início da viagem' AND idcase = event_log.idcase );
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31'
SELECT idcase FROM event_log WHERE activity = 'inicio da viagem' AND timestamp >= '2017-03-01' AND timestamp < '2017-04-01' GROUP BY idcase HAVING MIN(timestamp) = MIN(timestamp) OVER (PARTITION BY idcase);
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) = ( SELECT MIN(timestamp) FROM event_log WHERE activity = 'Início da viagem' ) );
SELECT idcase FROM event_log WHERE activity = 'inicio da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' GROUP BY idcase
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31'
SELECT resource, count(distinct idcase) AS num_cases FROM event_log GROUP BY resource HAVING num_cases > 5 ORDER BY num_cases DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING event_count > 5 ORDER BY event_count DESC;
SELECT resource, count(*) AS count_resource FROM event_log GROUP BY resource HAVING count(*) > 5 ORDER BY count_resource DESC;
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource HAVING COUNT(*) > 5;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING event_count > 5;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING COUNT(*) > 5 ORDER BY event_count DESC;
SELECT resource, COUNT(DISTINCT idcase) AS num_casos FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 5) GROUP BY resource ORDER BY num_casos DESC;
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource HAVING COUNT(*) > 5 ORDER BY count DESC;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 5
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) = ( SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC LIMIT 10;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) = ( SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1)
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, count(*) AS count_resource FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count_resource DESC;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC;
SELECT resource,COUNT(*) AS count FROM event_log WHERE activity = 'declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC
SELECT resource FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT COUNT(DISTINCT(idcase)) FROM event_log WHERE activity LIKE '%declaração aprovada pelo responsável pelo orçamento%' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie')
SELECT count(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT(idcase)) FROM event_log WHERE activity LIKE '%declaração aprovada pelo responsável pelo orçamento%' AND resource IN ('Eugene', 'Marie');
SELECT count(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie')
SELECT count(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugine', 'Marie')
SELECT count(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugine', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%' AND resource IN ('Eugene', 'Marie') AND activity LIKE '%budget%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%' AND resource IN ('Eugene', 'Marie') AND activity LIKE '%responsável pelo orçamento%';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT resource, count(*) AS count FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING count > 2 ORDER BY count DESC;
SELECT resource, COUNT(*) AS count_activity FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY count_activity DESC;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY count DESC;
SELECT resource, count(*) AS count FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING count > 2 ORDER BY count DESC;
SELECT resource, count(*) AS count FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING count > 2 ORDER BY count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING event_count > 2;
SELECT resource, count(*) AS "Quantidade de Declarações Salvas" FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource HAVING count(*) > 2 ORDER BY resource;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp >= '2017-05-01' AND timestamp <= '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) from event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource) AS resource_count, idcase FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT activity, COUNT(DISTINCT resource) AS resource_count FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT idcase from event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase from event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase from event_log WHERE resource = 'Christopher' group by idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = ( SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase );
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Christopher' AND activity = 'Allocated' AND NOT EXISTS (SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND resource <> 'Christopher' AND activity = 'Allocated')
SELECT idcase from event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase from event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT activity FROM event_log WHERE resource = 'Christopher' AND cost = ( SELECT MAX(cost) FROM event_log WHERE activity = 'statement' );
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT resource, GROUP_CONCAT(DISTINCT idcase) FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT DATE(timestamp)) > 1
SELECT idcase FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT resource, idcase, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY resource, idcase;
SELECT idcase, resource, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY idcase, resource;
SELECT resource, idcase, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY resource, idcase ORDER BY resource, idcase;
SELECT resource, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY resource;
SELECT resource, idcase, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY resource, idcase;
SELECT COUNT(DISTINCT event_log.id) AS event_count, event_log.resource FROM event_log GROUP BY event_log.resource;
SELECT resource, COUNT(*) AS num_interventions FROM event_log WHERE cost = 0 GROUP BY resource;
SELECT resource, COUNT(*) AS intervencoes_sem_custo FROM event_log WHERE cost IS NULL AND activity LIKE '%intervencao%' GROUP BY resource
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT activity FROM event_log WHERE activity LIKE '%Declaração rejeitada pelo diretor%'
SELECT activity FROM event_log WHERE activity LIKE '%Declaração rejeitada pelo diretor%'
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT strftime('%Y-%m-%d', "timestamp") AS "date", SUM("cost") AS "total_cost" FROM "event_log" GROUP BY "date" ORDER BY "date"
SELECT strftime('%Y-%m-%d', "timestamp") AS "day", SUM("cost") AS "total_cost" FROM "event_log" GROUP BY "day" ORDER BY "day";
SELECT strftime('%Y-%m-%d', "timestamp") AS "day", SUM("cost") AS "total_cost" FROM "event_log" GROUP BY "day" ORDER BY "total_cost" DESC;
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log WHERE cost IS NOT NULL GROUP BY event_date
SELECT DATE(timestamp) AS day, COUNT(*) AS total_events FROM event_log GROUP BY day
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY date
SELECT activity, AVG(cost) AS average_cost FROM event_log WHERE cost > 1000 AND resource IN ( SELECT resource FROM event_log WHERE activity = 'Supervision' OR activity = 'Direction' ) GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log WHERE activity IN ( SELECT activity FROM event_log WHERE resource LIKE '%supervisor%' OR resource LIKE '%director%' ) AND cost > 1000 GROUP BY activity
SELECT activity FROM event_log WHERE cost > 1000 AND resource LIKE '%supervisor%' OR resource LIKE '%diretor associado%';
SELECT activity, SUM(cost) AS total_cost FROM event_log WHERE resource IN ( SELECT resource FROM event_log WHERE activity IN ('Supervisor', 'Director') ) GROUP BY activity HAVING total_cost > 1000 ORDER BY total_cost DESC;
SELECT DISTINCT activity FROM event_log WHERE cost > 1000 AND (resource LIKE '%supervisor%' OR resource LIKE '%director%');
SELECT activity, AVG(cost) AS average_cost FROM event_log WHERE activity IN ( SELECT activity FROM event_log WHERE resource LIKE '%supervisor%' OR resource LIKE '%diretor%' ) AND cost > 1000 GROUP BY activity
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase
SELECT count(*) AS "event_count", idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS "Event Count", idcase FROM event_log GROUP BY idcase;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity;
SELECT COUNT(*) AS "Number of Tasks", resource FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Task Assigned' GROUP BY resource
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT COUNT(*) AS "Quantidade de Atividades", resource FROM event_log GROUP BY resource;
SELECT resource,COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, count(activity) FROM event_log group by resource
SELECT idcase, COUNT(DISTINCT activity) AS activity_count FROM event_log WHERE resource = 'Alexis' GROUP BY idcase ORDER BY idcase;
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity;
SELECT idcase, count(*) FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(DISTINCT activity) FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT COUNT(DISTINCT activity) AS "Number of Activities", idcase AS "Case ID" FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT COUNT(*) AS "Number of Tasks", resource, COUNT(DISTINCT idcase) AS "Number of Process Instances" FROM event_log WHERE resource = 'Alexis' GROUP BY resource
SELECT resource, idcase, COUNT(DISTINCT activity) AS num_actions FROM event_log WHERE resource = 'Alexis' GROUP BY resource, idcase
SELECT count(DISTINCT idcase) FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Início da viagem' );
SELECT count(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Início da viagem' )
SELECT count(*) FROM event_log WHERE activity = 'Início da viagem' AND idcase IN (SELECT idcase FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor')
SELECT count(*) FROM ( SELECT idcase, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp) AS row_num FROM event_log WHERE activity IN ('Permissão final aprovada pelo supervisor', 'Início da viagem') ) WHERE activity = 'Permissão final aprovada pelo supervisor' AND row_num < ( SELECT row_num FROM event_log WHERE activity = 'Início da viagem' AND idcase = idcase )
SELECT count(*) FROM event_log WHERE activity = 'Início da viagem' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' ) AND timestamp > ( SELECT timestamp FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Início da viagem' ) );
SELECT COUNT(DISTINCT e1.idcase) FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Início da viagem' AND e1.timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity = 'Permissão com aprovação final do supervisor' AND idcase = e1.idcase)
SELECT COUNT(idcase) FROM (SELECT idcase, activity, MIN(timestamp) FROM event_log GROUP BY idcase) AS e1 WHERE e1.activity LIKE '%permissão%' AND e1.activity LIKE '%aprovada%' AND e1.timestamp < (SELECT MIN(timestamp) FROM event_log WHERE activity LIKE '%início da viagem%')
SELECT count(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND timestamp < (SELECT timestamp FROM event_log WHERE activity = 'Início da viagem');
SELECT activity, timestamp, resource, cost, idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59'
SELECT activity, timestamp FROM event_log WHERE activity = 'Fim da viagem' AND timestamp NOT BETWEEN '2017-12-12' AND '2017-12-12';
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND (timestamp < '2017-12-12' OR timestamp > '2017-12-12');
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND (timestamp < '2017-12-12' OR timestamp > '2017-12-12')
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp NOT BETWEEN '2017-12-12' AND '2017-12-13'
SELECT activity, timestamp, resource, cost, idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp < '2017-12-12'
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource;
SELECT COUNT(*) AS event_count, resource FROM event_log GROUP BY resource;
SELECT responsible, COUNT(*) AS num_executions FROM event_log GROUP BY responsible;
SELECT count (*), resource FROM event_log group by resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT count (*), resource FROM event_log group by resource
SELECT COUNT(DISTINCT activity) AS "Number of Activities", resource FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT activity) AS "Number of Activities", resource FROM event_log GROUP BY resource;
SELECT activity, COUNT(*) AS activity_count FROM event_log GROUP BY activity;
SELECT resource, COUNT(DISTINCT activity) AS activity_count FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS activity_count FROM event_log GROUP BY resource;
SELECT DISTINCT activity, resource FROM event_log
SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia' EXCEPT SELECT DISTINCT activity FROM event_log WHERE resource <> 'Virginia';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia' EXCEPT SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia' AND activity IN ( SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia' );
SELECT activity FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE resource = 'Virginia' ) GROUP BY activity;
SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia' AND activity NOT IN (SELECT activity FROM event_log WHERE resource = 'Virginia')
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia' AND activity NOT IN ( SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia' AND timestamp > '2023-01-01' );
SELECT AVG(cost) FROM event_log WHERE activity = 'rejeitada'
SELECT AVG(cost) FROM event_log WHERE activity = 'rejeitada'
SELECT idcase, AVG(cost) FROM event_log WHERE activity = 'rejeitada' GROUP BY idcase
SELECT idcase, AVG(cost) FROM event_log WHERE activity = 'rejeitada' GROUP BY idcase
SELECT idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT AVG(cost) FROM event_log WHERE activity = 'process travel claim' AND resource = 'rejection'
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT e.idcase, (e1.timestamp - e.timestamp) as duration FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log where activity='Declaração aprovada pelo supervisor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.activity='Declaração final aprovada pelo diretor' GROUP BY e.idcase
SELECT e.idcase, (e1.timestamp - e.timestamp) as duration FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log where activity='Declaração aprovada pelo supervisor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.activity='Declaração final aprovada pelo diretor' GROUP BY e.idcase
SELECT e.idcase, e1.timestamp - e.timestamp as duration FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log where activity='Declaração aprovada pelo supervisor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp > e1.timestamp
SELECT id, activity, timestamp FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' ORDER BY timestamp
SELECT event_log.resource, event_log.idcase, ( event_log.timestamp - ( SELECT timestamp FROM event_log WHERE activity = 'Declaração iniciada pelo supervisor' AND idcase = event_log.idcase ORDER BY timestamp DESC LIMIT 1 ) ) AS duration FROM event_log WHERE event_log.activity = 'Declaração aprovada pelo supervisor'
SELECT COUNT(*) AS "Quantidade de Ocorrências", resource AS "Recurso" FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource;
SELECT select e.idcase, (strftime('%s',e1.timestamp) - strftime('%s', e. timestamp)) from event_log e inner join event_log e1 on e1.idcase = e.idcase and e1.timestamp > e.timestamp where e.activity = 'Declaração requisitada pelo funcionário' and e1.activity = 'Declaração aprovada pelo supervisor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT (*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT (*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT (*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT count(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT e1.idcase, e1.timestamp FROM event_log AS e1 WHERE e1.activity = 'Fim da viagem' ORDER BY e1.resource;
SELECT p.idcase, p.timestamp FROM event_log p WHERE p.activity = 'Fim da viagem' ORDER BY p.resource;
SELECT e1.idcase, e1.resource, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' ORDER BY e1.resource, e1.timestamp;
SELECT DISTINCT idcase, timestamp FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource;
SELECT e1.id, e1.resource, e2.timestamp AS fim_da_viagem FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' ORDER BY e1.resource;
SELECT idcase, MAX(timestamp) AS data_finalizacao FROM event_log WHERE activity = 'Finalização de viagem' GROUP BY idcase ORDER BY resource;
SELECT count(*) AS "event_count", idcase FROM event_log GROUP BY idcase;
SELECT count (*), idcase FROM event_log group by idcase
SELECT count (*), idcase FROM event_log group by idcase
SELECT count(*) AS "number_of_events", idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase
SELECT count(*) AS "Quantidade de Eventos", idcase FROM event_log GROUP BY idcase;
SELECT select count(*) from event_log WHERE activity = 'Declaração de viagem' group by idcase
SELECT count (*), idcase FROM event_log group by idcase
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT idcase, resource, id, MAX(timestamp) AS end_date FROM event_log WHERE activity = 'envio de lembrete' GROUP BY idcase, resource, id ORDER BY end_date;
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp;
SELECT event_log.idcase, event_log.resource, event_log.id, MAX(event_log.timestamp) AS finalization_date FROM event_log WHERE event_log.activity = 'envio de lembrete' GROUP BY event_log.idcase, event_log.resource ORDER BY finalization_date;
SELECT event_log.id, event_log.activity, event_log.timestamp, event_log.resource, event_log.cost, event_log.idcase FROM event_log WHERE event_log.activity = 'Envio de lembrete' ORDER BY event_log.timestamp;
SELECT idcase, id, resource, timestamp FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp;
SELECT idcase, resource, id, MAX(timestamp) AS timestamp_finalizacao FROM event_log WHERE activity = 'envio de lembrete' GROUP BY idcase ORDER BY timestamp_finalizacao;
SELECT idcase, timestamp, resource FROM event_log WHERE activity = 'Envio de lembrete' ORDER BY timestamp
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log WHERE activity = 'PROCESS_STATEMENT' ORDER BY resource
SELECT resource from event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource, count(distinct idcase) AS num_instances FROM event_log GROUP BY resource HAVING num_instances > 200 ORDER BY num_instances DESC;
SELECT resource, count(*) AS num_cases FROM event_log WHERE activity = 'Travel Declaration' GROUP BY resource HAVING num_cases > 200 ORDER BY num_cases DESC;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 200
SELECT name FROM travel_declarations GROUP BY name HAVING COUNT(*) > 200;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 200
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'process statement'
SELECT count (DISTINCT resource) FROM event_log WHERE activity = 'process statement'
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'ASSOCIATED'
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'Execute'
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity LIKE '%processar declaração%'
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'process statement'
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'statement processing'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE '%declaração%' );
SELECT * FROM event_log WHERE activity LIKE '%declaração%'
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log WHERE idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%declaração de viagem%' ) GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost IS NULL GROUP BY idcase HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost = 0
SELECT COUNT(*) FROM event_log WHERE cost = 0
SELECT * FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT * FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT * FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' UNION SELECT activity FROM event_log WHERE activity LIKE '%declaração%';
SELECT activity, resource FROM event_log WHERE activity LIKE 'permissão%' AND resource LIKE 'declaração%'
SELECT count(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor'
SELECT count(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor'
SELECT count(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor';
SELECT count(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pela administração'
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log;
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log WHERE activity = 'processo de negócio'
SELECT AVG(cost) FROM event_log WHERE activity = 'process_statement'
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT resource, COUNT(*) AS num_interventions FROM event_log GROUP BY resource HAVING num_interventions > 5;
SELECT resource, COUNT(*) AS num_cases FROM event_log GROUP BY resource HAVING COUNT(*) > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource HAVING num_cases > 3;
SELECT resource, COUNT(*) AS num_instances FROM event_log GROUP BY resource HAVING num_instances > 3 ORDER BY num_instances DESC;
SELECT resource, COUNT(*) AS num_instances FROM event_log GROUP BY resource HAVING num_instances > 3 ORDER BY num_instances DESC;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY event_count ASC;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity LIKE '%requisição de pagamento%' GROUP BY idcase ORDER BY event_count DESC;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY event_count ASC;
SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY COUNT(*) DESC;
SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY COUNT(*) DESC;
SELECT resource, COUNT(*) AS total_activities FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY resource ORDER BY total_activities;
SELECT idcase, COUNT(DISTINCT id) AS num_actions FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY num_actions;
SELECT DISTINCT timestamp FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário') ORDER BY timestamp ASC;
SELECT idcase, timestamp FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário') ORDER BY timestamp;
SELECT DISTINCT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' ORDER BY timestamp
SELECT DISTINCT timestamp FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário') ORDER BY timestamp ASC;
SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Closed' ORDER BY timestamp ASC;
SELECT DISTINCT timestamp FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário') ORDER BY timestamp ASC;
SELECT DISTINCT timestamp FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada por funcionário') ORDER BY timestamp ASC;
SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Rejeição de declaração por funcionário' ORDER BY timestamp;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS execution_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS execution_count FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS execution_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(*) AS num_execucoes FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS occurrence FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS occurrence FROM event_log GROUP BY resource ORDER BY resource ASC
SELECT resource, COUNT(*) AS occurrence FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(*) AS total_actions FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource ORDER BY count DESC;
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT * from event_log where activity like 'E%'
SELECT * from event_log where activity like 'E%'
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE 'E%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE 'E%'
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT "id", "activity", "resource", "cost" FROM "event_log" WHERE "cost" BETWEEN 50 AND 400
SELECT el.id, el.activity, el.cost, e.name AS employee_name FROM event_log AS el JOIN employee AS e ON el.idcase = e.id WHERE el.cost BETWEEN 50 AND 400;
SELECT DISTINCT resource From event_log where activity = 'Declaração salva pelo funcionário'
SELECT DISTINCT resource From event_log where activity = 'Declaração salva pelo funcionário'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração salva pelo funcionário' ORDER BY resource
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração salva pelo funcionário' ORDER BY resource
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-04-12 00:00:00' AND '2018-04-12 23:59:59'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT activity FROM event_log WHERE timestamp = '2018-04-12'
SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) = '2018-04-12' ) GROUP BY activity
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-04-12 00:00:00' AND '2018-04-12 23:59:59';
SELECT activity FROM event_log WHERE timestamp = '2018-04-12'
SELECT activity FROM event_log WHERE timestamp = '2018-04-12' AND activity IN (SELECT activity FROM event_log GROUP BY activity HAVING MAX(timestamp) = '2018-04-12')
SELECT resource FROM event_log WHERE activity = 'process_statement' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-04-12' );
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY timestamp;
SELECT "id", "activity", "timestamp" FROM "event_log" WHERE "activity" IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY "timestamp" DESC
SELECT e.id, e.activity, e.timestamp FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp;
SELECT e.id, e.activity, e.timestamp FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp DESC;
SELECT e.id, e.activity, e.timestamp FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp DESC;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Aprovação final de permissão', 'Aprovação de declaração por supervisor') ORDER BY timestamp DESC;
SELECT e.id, e.activity, e.timestamp FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Aprovação de declaração pelo supervisor') ORDER BY e.timestamp DESC
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT e.cost, e.activity FROM event_log AS e WHERE e.cost IS NOT NULL ORDER BY e.cost DESC;
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'permissão final aprovada pelo diretor'
SELECT count(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT count(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT count(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT count(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%permissão final aprovada pelo diretor%'
SELECT idcase, COUNT(*) FROM event_log WHERE activity LIKE '%permissão%' AND resource LIKE '%diretor%' GROUP by idcase
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%permissão final%' AND resource LIKE '%diretor%'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp
SELECT DATE(timestamp) AS date FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' GROUP BY date ORDER BY date;
SELECT activity, resource, sum(cost) FROM event_log GROUP BY activity, resource
SELECT sum(cost) FROM event_log WHERE activity = 'activity_name' AND resource = 'resource_name'
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource;
SELECT activity, resource, sum(cost) FROM event_log GROUP BY activity, resource
SELECT activity, resource, sum(cost) FROM event_log GROUP BY activity, resource
SELECT activity, resource, sum(cost) FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource ORDER BY total_cost DESC;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT COUNT(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem');
SELECT count(*) FROM event_log WHERE activity = 'Início da viagem' UNION SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem'
SELECT count(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem')
SELECT count(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem')
SELECT count(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem')
SELECT count(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem')
SELECT count(*) FROM event_log WHERE activity = 'Início da viagem' UNION SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem'
SELECT count(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem');
SELECT count(*) FROM event_log WHERE activity = 'Início da viagem' AND idcase IN (SELECT idcase FROM event_log WHERE activity = 'Fim da viagem')
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING count(activity) > 3
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING count(activity) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 3
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING count(activity) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity HAVING COUNT(*) > 3 ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity HAVING COUNT(*) > 3 ORDER BY count DESC;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource, MAX(timestamp) AS last_timestamp FROM event_log GROUP BY activity, resource ORDER BY last_timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log);
SELECT activity, resource FROM event_log WHERE id = (SELECT MAX(id) FROM event_log)
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1
SELECT activity, resource FROM event_log WHERE id IN (SELECT MAX(id) FROM event_log GROUP BY idcase)
SELECT activity, resource FROM event_log WHERE id IN (SELECT id FROM (select id, MAX(timestamp) as timestamp FROM event_log GROUP by idcase) ORDER by timestamp)
SELECT resource, activity, MAX(timestamp) AS last_timestamp FROM event_log WHERE activity LIKE '%processamento de declarações de viagem%' GROUP BY resource, activity ORDER BY last_timestamp DESC LIMIT 1;
SELECT resource, activity FROM event_log WHERE id = ( SELECT MAX(id) FROM event_log WHERE activity LIKE '%declaração de viagem%' );
SELECT e1.activity AS "Evento Anterior", e2.activity AS "Evento Posterior", e2.resource AS "Responsável" FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Fim da viagem' AND e2.timestamp > e1.timestamp
SELECT el.idcase, el.timestamp, el.resource FROM event_log el JOIN event_log el2 ON el.idcase = el2.idcase WHERE el2.activity = 'Fim da viagem' AND el.timestamp > el2.timestamp ORDER BY el.resource;
SELECT el1.idcase, el1.activity, el1.timestamp, el1.resource, el2.resource AS responsible_resource FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase WHERE el1.activity = 'Fim da viagem' AND el2.timestamp > el1.timestamp ORDER BY el1.idcase, el1.timestamp;
SELECT e1.activity, e1.resource, e2.resource AS fim_da_viagem_resource FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.timestamp > e2.timestamp AND e2.activity = 'Fim da viagem';
SELECT e1.activity, e1.resource, e2.resource AS fim_da_viagem_resource FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.timestamp > e2.timestamp AND e2.activity = 'Fim da viagem';
SELECT e1.activity, e1.resource, e1.timestamp FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT el.idcase, el.activity, el.timestamp, el.resource, el.cost, el2.resource AS responsible_resource FROM event_log AS el JOIN event_log AS el2 ON el.idcase = el2.idcase WHERE el.activity = 'Fim da viagem' AND el2.timestamp > el.timestamp ORDER BY el.idcase, el.timestamp;
SELECT el1.idcase, el1.activity, el1.timestamp, el1.resource, el2.resource AS responsible_resource FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE el1.activity = 'Fim da viagem' AND el2.timestamp > el1.timestamp ORDER BY el1.idcase, el1.timestamp;
SELECT el.activity, el.resource, el.timestamp FROM event_log el JOIN event_log el2 ON el.idcase = el2.idcase WHERE el2.activity = 'Fim da viagem' AND el.timestamp > el2.timestamp ORDER BY el.timestamp;
SELECT el.activity, el.resource, el.timestamp FROM event_log el JOIN event_log el_fim ON el.idcase = el_fim.idcase AND el_fim.activity = 'Fim da viagem' WHERE el.timestamp > el_fim.timestamp ORDER BY el.timestamp;
SELECT el1.idcase, el1.activity AS activity_before_end_of_trip, el1.timestamp AS timestamp_before_end_of_trip, el1.resource AS resource_before_end_of_trip, el2.activity AS activity_after_end_of_trip, el2.timestamp AS timestamp_after_end_of_trip, el2.resource AS resource_after_end_of_trip FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase WHERE el1.activity = 'Fim da viagem' AND el2.timestamp > el1.timestamp ORDER BY el1.idcase, el2.timestamp;
SELECT e1.activity AS evento_posterior, e1.timestamp AS datahora_evento_posterior, e2.activity AS evento_fim_viagem, e2.timestamp AS datahora_evento_fim_viagem, e1.resource AS responsavel_evento_posterior, e2.resource AS responsavel_evento_fim_viagem FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT event_log.idcase, event_log.timestamp, event_log.activity, event_log.resource, event_log.cost, event_log.idcase FROM event_log WHERE event_log.idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) AND event_log.timestamp > ( SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' AND idcase = event_log.idcase ) ORDER BY event_log.resource;
SELECT el.idcase, el.timestamp, el.activity, el.resource, el2.resource AS responsible_resource FROM event_log AS el JOIN event_log AS el2 ON el.idcase = el2.idcase AND el2.timestamp < el.timestamp WHERE el.activity = 'Fim da viagem' ORDER BY el.resource;
SELECT e1.activity, e1.timestamp, e1.resource, e2.resource AS responsavel FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.timestamp > ( SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' AND idcase = e1.idcase ) AND e2.activity = 'Registro de ação' ORDER BY e1.timestamp;
SELECT idcase, timestamp, resource FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT COUNT(*) AS "Número de eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity <> 'Fim da viagem' GROUP BY e1.resource
SELECT COUNT(*) AS "Número de eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity <> 'Fim da viagem' GROUP BY e1.resource
SELECT COUNT(*) AS "Número de eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp < e2.timestamp GROUP BY e1.resource HAVING COUNT(*) > 1;
SELECT COUNT(*) AS "Número de eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp < e2.timestamp GROUP BY e1.resource HAVING COUNT(*) > 1;
SELECT COUNT(*) AS "Número de eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity <> 'Fim da viagem' GROUP BY e1.resource
SELECT COUNT(*) AS "Número de eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity <> 'Fim da viagem' GROUP BY e1.resource
SELECT COUNT(*) AS "Número de Eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity <> 'Fim da viagem' GROUP BY e1.resource
SELECT COUNT(*) AS "Número de eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity <> 'Fim da viagem' GROUP BY e1.resource
SELECT COUNT(*) AS "Número de eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity <> 'Fim da viagem' GROUP BY e1.resource
SELECT COUNT(*) AS "Número de eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp < e2.timestamp GROUP BY e1.resource HAVING COUNT(*) > 1;
SELECT COUNT(*) AS "Número de eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp < e2.timestamp GROUP BY e1.resource HAVING COUNT(*) > 1;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT COUNT(*) AS "Quantidade de Eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity <> 'Fim da viagem' GROUP BY e1.resource ORDER BY "Quantidade de Eventos" DESC;
SELECT COUNT(*) AS "Quantidade de Eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity <> 'Fim da viagem' GROUP BY e1.resource ORDER BY "Quantidade de Eventos" DESC;
SELECT COUNT(*) AS "Quantidade de Eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp < e2.timestamp GROUP BY e1.resource HAVING COUNT(*) > 1;
SELECT COUNT(*) AS "Quantidade de Eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp < e2.timestamp GROUP BY e1.resource HAVING COUNT(*) > 1;
SELECT COUNT(*) AS "Quantidade de Eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity <> 'Fim da viagem' GROUP BY e1.resource
SELECT COUNT(*) AS "Quantidade de Eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity <> 'Fim da viagem' GROUP BY e1.resource
SELECT COUNT(*) AS "Quantidade de Eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity <> 'Fim da viagem' GROUP BY e1.resource
SELECT COUNT(*) AS "Quantidade de Eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity <> 'Fim da viagem' GROUP BY e1.resource
SELECT COUNT(*) AS "Quantidade de Eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity <> 'Fim da viagem' GROUP BY e1.resource
SELECT COUNT(*) AS "Quantidade de Eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp < e2.timestamp GROUP BY e1.resource HAVING COUNT(*) > 1;
SELECT COUNT(*) AS "Quantidade de Eventos", e1.resource AS "Recurso" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp < e2.timestamp GROUP BY e1.resource HAVING COUNT(*) > 1;
SELECT resource, COUNT (*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT COUNT(DISTINCT activity) AS "Número de Ações", resource AS "Funcionário" FROM event_log WHERE activity NOT LIKE '%Fim da Viagem%' GROUP BY resource ORDER BY "Número de Ações" DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT DISTINCT idcase FROM event_log ORDER BY MIN(timestamp) DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT DISTINCT idcase FROM event_log ORDER BY MIN(timestamp) DESC;
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' ORDER BY timestamp
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(*) FROM event_log WHERE activity = 'Request Payment'
SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT e.resource FROM event_log e INNER JOIN (SELECT idcase, MAX(timestamp) as timestamp FROM event_log where activity='Declaração final aprovada pelo diretor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp = e1.timestamp
SELECT idcase FROM event_log WHERE activity='Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1
SELECT idcase FROM event_log WHERE activity='Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1
SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1
SELECT e.idcase FROM event_log e INNER JOIN (SELECT idcase, MAX(timestamp) as timestamp FROM event_log where activity='Declaração final aprovada pelo diretor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp = e1.timestamp
SELECT e.idcase, COUNT(*) FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log where activity='Declaração final aprovada pelo diretor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp < e1.timestamp GROUP BY e.idcase
SELECT resource, count(*) AS total_activities FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY total_activities DESC LIMIT 1;
SELECT resource, count(*) AS count_activity FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count_activity DESC LIMIT 1
SELECT resource, count(*) AS total_occurrences FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY total_occurrences DESC LIMIT 1
SELECT resource, count(*) AS event_count FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY event_count DESC LIMIT 1
SELECT resource, count(*) AS count_activity FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count_activity DESC LIMIT 1
SELECT resource, COUNT(*) AS num_approvals FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY num_approvals DESC LIMIT 1;
SELECT resource, count(*) AS num_declaracoes_aprovadas FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY num_declaracoes_aprovadas DESC LIMIT 1;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = ( SELECT activity FROM event_log WHERE idcase = event_log.idcase ORDER BY timestamp LIMIT 1 ) GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'start' GROUP BY resource
SELECT COUNT(*) AS "Quantidade de Ocorrências", resource FROM event_log WHERE activity = ( SELECT activity FROM event_log WHERE idcase = event_log.idcase ORDER BY timestamp LIMIT 1 ) GROUP BY resource;
SELECT COUNT(*) AS "Number of Events", idcase FROM event_log GROUP BY idcase;
SELECT count(*), resource FROM (SELECT resource, MIN(timestamp) FROM event_log GROUP by resource, idcase) GROUP by resource
SELECT resource, COUNT(*) AS num_statements FROM event_log WHERE activity = 'Execute First Action' GROUP BY resource;
SELECT resource, count(distinct idcase) FROM event_log group by resource
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT count(*) FROM event_log WHERE activity LIKE '%approved%'
SELECT count (DISTINCT idcase) FROM event_log WHERE activity = 'Approve'
SELECT count(DISTINCT idcase), DATE(timestamp) FROM event_log WHERE activity = 'rejeitada' GROUP BY DATE(timestamp)
SELECT DATE(timestamp) AS day, COUNT(DISTINCT idcase) AS rejected_cases FROM event_log WHERE activity = 'rejeitada' GROUP BY day ORDER BY day;
SELECT strftime('%Y-%m-%d', timestamp) AS event_day, COUNT(*) FROM event_log WHERE activity = 'rejeitada' GROUP BY event_day
SELECT COUNT (*) AS "Número de ocorrências" FROM event_log WHERE activity = 'Rejeitada' GROUP BY DATE (timestamp)
SELECT DATE(timestamp) AS day, COUNT(DISTINCT idcase) AS rejected_cases FROM event_log WHERE activity = 'rejeitada' GROUP BY day
SELECT DATE(timestamp) AS day, COUNT(DISTINCT idcase) AS rejected_cases FROM event_log WHERE activity = 'rejeitada' GROUP BY day
SELECT date(timestamp) AS date, count(*) AS rejected_claims FROM event_log WHERE activity LIKE '%Declaração rejeitada%' GROUP BY date ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(*) AS count FROM event_log WHERE activity = 'Rejeição' GROUP BY date;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY duration DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase ORDER BY duration DESC;
SELECT idcase, COUNT(*) AS event_count, MAX(timestamp) - MIN(timestamp) AS case_duration FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 1;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity HAVING COUNT(*) > 5 ORDER BY count DESC LIMIT 5;
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity ORDER BY total_cost DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), activity FROM event_log WHERE activity LIKE '%statement%' AND idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20) GROUP BY activity ORDER BY strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) DESC LIMIT 5
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) DESC LIMIT 5;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log WHERE activity = 'Declaração de viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log WHERE activity <> 'Requisição de pagamento' ORDER BY timestamp DESC LIMIT 10
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY idcase DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' INTERSECT SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado';
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT "idcase" FROM "event_log" GROUP BY "idcase" HAVING COUNT (*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT select idcase from event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT AVG(cost) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE timestamp < '2018-01-01' AND activity = 'pagamento efetuado';
SELECT AVG(cost) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'payment' AND timestamp < '2018-01-01'
SELECT select idcase, count(*) as num_permissoes from event_log where activity like 'permissão%' GROUP BY idcase
SELECT COUNT(DISTINCT activity) FROM event_log WHERE activity = 'permission' GROUP BY idcase
SELECT idcase, count(*) AS num_permissoes FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase;
SELECT select idcase, count(*) as num_permissoes from event_log where activity like 'permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_permissoes FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase
SELECT count(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity = 'permissão' GROUP BY idcase
SELECT count(DISTINCT id) FROM event_log WHERE activity = 'permissão' GROUP BY idcase
SELECT select idcase, count(*) as num_permissoes from event_log where activity like 'permissão%' GROUP BY idcase
SELECT activity, count(*) AS count_activity FROM event_log WHERE activity LIKE '%Permissão%' GROUP BY activity
SELECT COUNT(DISTINCT e1.idcase) AS "Número de casos", e1.resource AS "Recurso responsável" FROM event_log e1 WHERE e1.activity = 'Declaração rejeitada pelo supervisor' GROUP BY e1.resource ORDER BY "Número de casos" DESC;
SELECT count(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT count(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT count(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT count(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT count(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT count(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase) AS case_count, activity FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase) AS case_count, activity FROM event_log GROUP BY activity;
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Execute action' GROUP BY resource;
SELECT e1.activity FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity LIKE 'R%' AND e1.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT e1.activity FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity LIKE 'R%' AND e1.timestamp > e2.timestamp AND e2.activity LIKE 'D%'
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' ) AND activity LIKE 'R%';
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT activity, resource, COUNT(*) AS count FROM event_log GROUP BY activity, resource;
SELECT activity, resource, COUNT(*) AS count FROM event_log GROUP BY activity, resource;
SELECT activity, resource, COUNT(*) AS count FROM event_log GROUP BY activity, resource;
SELECT activity, resource, COUNT(*) AS count FROM event_log GROUP BY activity, resource ORDER BY activity, count DESC;
SELECT resource, activity, count(*) FROM event_log GROUP BY resource, activity;
SELECT COUNT(*) AS "Número de vezes", resource AS "Pessoa responsável" FROM event_log WHERE activity LIKE '%process declaration%' GROUP BY resource;
SELECT e.activity, e.resource, COUNT(*) AS count FROM event_log AS e WHERE e.resource LIKE '%university%' GROUP BY e.activity, e.resource;
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30' GROUP BY activity
SELECT COUNT(*), activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-31' GROUP BY activity
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT idcase from event_log WHERE resource = 'Wayne' GROUP BY idcase ORDER BY idcase
SELECT O texto fornecido não contém informações sobre as declarações em que Wayne trabalhou, portanto, não é possível extrair os dados solicitados.
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-12' AND '2018-03-13' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-12' ) GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-02' ) GROUP BY activity ORDER BY num_cases DESC;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-03-02' ) GROUP BY activity ORDER BY case_count DESC;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-03-02' ) GROUP BY activity ORDER BY case_count DESC;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-03-02' ) GROUP BY activity ORDER BY case_count DESC;
SELECT COUNT(*), activity FROM event_log WHERE timestamp < '2018-03-02' AND status = 'finalizado' GROUP BY activity
SELECT activity, COUNT(*) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) = '2018-03-02' ) GROUP BY activity
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE id IN (SELECT MIN(id) FROM event_log GROUP BY idcase) AND activity LIKE 'permissão%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE id IN (SELECT MIN(id) FROM event_log GROUP BY idcase) AND activity LIKE 'permissão%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%' AND row_number() OVER (PARTITION BY idcase ORDER BY timestamp) = 1
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%' AND activity LIKE '%iniciar%'
SELECT count(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity LIKE '%Permissão%' AND e2.activity = 'Início da viagem' AND e1.timestamp < e2.timestamp
SELECT count(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permissão final aprovada pelo supervisor' AND e2.activity = 'Início do processamento da declaração' AND e1.timestamp < e2.timestamp
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado' ))
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado' ))
SELECT idcase from event_log WHERE NOT activity IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') );
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity IN ('Pagamento efetuado', 'Requisição de pagamento'))
SELECT event_log.id FROM event_log JOIN event_log AS payment_log ON event_log.idcase = payment_log.idcase WHERE event_log.activity = 'Requisição de pagamento' AND payment_log.activity = 'Pagamento efetuado' AND event_log.timestamp < payment_log.timestamp;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('início da viagem', 'declaração requisitada pelo funcionário') ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp ASC, resource ASC;
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE activity IN ('início da viagem', 'declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp, resource;
SELECT event_log.idcase, MIN(event_log.timestamp) AS first_action_timestamp FROM event_log WHERE event_log.activity IN ('início da viagem', 'declaração requisitada pelo funcionário') GROUP BY event_log.idcase ORDER BY first_action_timestamp DESC;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp, resource;
SELECT el.activity, el.timestamp, el.resource, el.cost, el.idcase, e.name AS employee_name FROM event_log AS el JOIN employee AS e ON el.resource = e.id WHERE el.activity IN ('Início da viagem', 'Requisição de pagamento') ORDER BY el.timestamp, e.name;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Início da viagem' ORDER BY timestamp, resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT count(*), resource FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource
SELECT resource, COUNT(*) AS num_records FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource
SELECT resource,COUNT(*) AS count FROM event_log WHERE activity = 'declaração salva pelo funcionário' GROUP BY resource ORDER BY count DESC;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT COUNT(*) AS "Number of Save Actions", resource AS "Employee Name" FROM event_log WHERE activity = 'Save Travel Claim' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count_saved_statements FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT activity, COUNT(DISTINCT idcase) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(*), activity FROM event_log GROUP BY activity
SELECT count (DISTINCT idcase) FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS instance_count FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, count(DISTINCT activity) FROM event_log group by resource
SELECT resource, count(DISTINCT activity) FROM event_log group by resource
SELECT resource, count(DISTINCT activity) FROM event_log group by resource
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT count (DISTINCT activity), resource FROM event_log group by resource
SELECT count (DISTINCT activity), resource FROM event_log group by resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource
SELECT resource, COUNT(*) AS num_finalization_activities FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource;
SELECT resource, COUNT(*) AS num_finalization_activities FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource ORDER BY count DESC;
SELECT COUNT(*), resource FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource
SELECT COUNT(*) AS "Número de vezes" FROM event_log WHERE activity IN ('Finalizar viagem', 'Efetuar pagamento') GROUP BY resource;
SELECT resource, count(*) AS num_finalization_activities FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento') GROUP BY resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND id IN (SELECT MIN(id) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY idcase) GROUP BY idcase, resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource
SELECT resource, COUNT(*) AS count FROM ( SELECT resource, idcase, MIN(timestamp) AS first_timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource, idcase ) AS subquery GROUP BY resource;
SELECT resource, COUNT(*) AS count FROM ( SELECT resource, idcase, MIN(timestamp) AS first_occurrence FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource, idcase ) AS subquery GROUP BY resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY idcase, resource
SELECT count(DISTINCT idcase) FROM event_log WHERE activity = 'Reject' AND resource IN (SELECT resource FROM event_log WHERE activity = 'Pre-approve')
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY idcase
SELECT e1.idcase, COUNT(e1.activity) AS num_activities FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' GROUP BY e1.idcase
SELECT e1.idcase, COUNT(e1.activity) AS num_activities FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' GROUP BY e1.idcase
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity < 'Fim da viagem' GROUP BY idcase;
SELECT resource, COUNT(*) AS num_activities FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT COUNT(*) AS "Número de ocorrências" FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) AS "Número de eventos" FROM event_log WHERE activity = 'Fim da viagem';
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Fim da viagem' GROUP BY idcase;
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT select e1.idcase, count(e1.id) from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' and e1.timestamp < e2.timestamp group by e1.idcase
SELECT count(*) FROM event_log WHERE activity = 'END_TRIP' GROUP BY idcase;
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC
SELECT e1.idcase FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Rejeição determinada pelo supervisor' AND e2.activity = 'Início do processamento da declaração' ORDER BY e2.timestamp
SELECT activity, timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND strftime('%Y-%m', timestamp) <= '2018-03' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp < '2018-03-01' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp < '2018-04-01' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp < '2018-04-01' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp < '2018-03-31 23:59:59' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp <= '2018-03-31')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp <= '2018-03-31' );
SELECT event_log.idcase FROM event_log WHERE event_log.activity = 'Início da viagem' AND event_log.idcase NOT IN ( SELECT event_log.idcase FROM event_log WHERE event_log.activity = 'Fim da viagem' AND event_log.timestamp <= '2018-03-31' )
SELECT DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03') where activity = 'Início da viagem' EXCEPT SELECT DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MAX(timestamp)) = '2018-03') where activity = 'Fim da viagem'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp < '2018-03-31' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado'
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' EXCEPT SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' INTERSECT SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE resource IN ( SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 1 ) AND activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' );
SELECT idcase FROM event_log WHERE resource IN ( SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 1 ) AND activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' );
SELECT idcase FROM event_log WHERE resource IN ( SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 1 ) AND activity = 'Fim da viagem' EXCEPT SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 AND MAX(CASE WHEN activity = 'Fim da viagem' THEN 1 ELSE 0 END) = 1 AND SUM(CASE WHEN activity = 'Requisição de pagamento' THEN 1 ELSE 0 END) = 0 AND SUM(CASE WHEN activity = 'Pagamento efetuado' THEN 1 ELSE 0 END) = 0;
SELECT event_log.activity FROM event_log WHERE event_log.idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Declaração finalizada' ) AND event_log.idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' );
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' EXCEPT SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' UNION SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT idcase, count(distinct resource), sum(cost) FROM event_log group by idcase
SELECT idcase, count(distinct resource) AS num_resources, sum(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, count(distinct resource), sum(cost) FROM event_log group by idcase
SELECT COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost, idcase FROM event_log GROUP BY idcase;
SELECT idcase, count(distinct resource), sum(cost) FROM event_log group by idcase
SELECT idcase, sum(cost), count(distinct resource) FROM event_log group by idcase
SELECT idcase, sum(cost), count(distinct resource) FROM event_log group by idcase
SELECT idcase, sum(cost), count(distinct resource) FROM event_log group by idcase
SELECT idcase, sum(cost), count(distinct resource) FROM event_log group by idcase
SELECT COUNT(DISTINCT resource) AS num_people, SUM(cost) AS total_cost, idcase FROM event_log GROUP BY idcase;
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT CASE WHEN activity LIKE '%permissão%' THEN activity END) >= 2
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 AND activity LIKE '%permissão%'
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT "event_log"."activity" FROM "event_log" WHERE "event_log"."activity" LIKE '%permissão%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT id FROM event_log ORDER BY timestamp DESC
SELECT idcase, MAX(timestamp) AS last_timestamp FROM event_log GROUP BY idcase ORDER BY last_timestamp;
SELECT id FROM event_log ORDER BY idcase, timestamp DESC
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT id FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase ORDER BY MAX(timestamp) ) ORDER BY timestamp;
SELECT id, activity, timestamp, idcase FROM event_log ORDER BY timestamp DESC;
SELECT activity, timestamp, id FROM event_log ORDER BY timestamp;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp DESC;
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE id IN ( SELECT MAX(id) FROM event_log GROUP BY idcase );
SELECT activity, COUNT(*) FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log group by activity having count(*) > 100
SELECT activity, COUNT(*) FROM event_log GROUP BY activity HAVING COUNT(*) > 100
SELECT activity FROM event_log GROUP BY activity HAVING count(*) > 100
SELECT activity, COUNT(*) FROM event_log GROUP BY activity HAVING COUNT(*) > 100
SELECT CASE WHEN activity LIKE '%funcionário%' THEN 'funcionário' WHEN activity LIKE '%supervisor%' THEN 'supervisor' WHEN activity LIKE '%administração%' THEN 'administração' WHEN activity LIKE '%pré-aprovador%' THEN 'pré-aprovador' WHEN activity LIKE '%responsável pelo orçamento%' THEN 'responsável pelo orçamento' WHEN activity LIKE '%diretor%' THEN 'diretor' ELSE 'outro' END AS grupo, COUNT(DISTINCT idcase) AS quantidade_casos FROM event_log GROUP BY grupo ORDER BY quantidade_casos DESC;
SELECT CASE WHEN activity LIKE '%funcionário%' THEN 'funcionário' WHEN activity LIKE '%supervisor%' THEN 'supervisor' WHEN activity LIKE '%administração%' THEN 'administração' WHEN activity LIKE '%pré-aprovador%' THEN 'pré-aprovador' WHEN activity LIKE '%responsável pelo orçamento%' THEN 'responsável pelo orçamento' WHEN activity LIKE '%diretor%' THEN 'diretor' END AS grupo, COUNT(DISTINCT idcase) AS num_casos FROM event_log GROUP BY grupo ORDER BY num_casos DESC;
SELECT CASE WHEN activity LIKE '%funcionário%' THEN 'funcionário' WHEN activity LIKE '%supervisor%' THEN 'supervisor' WHEN activity LIKE '%administração%' THEN 'administração' WHEN activity LIKE '%pré-aprovador%' THEN 'pré-aprovador' WHEN activity LIKE '%responsável pelo orçamento%' THEN 'responsável pelo orçamento' WHEN activity LIKE '%diretor%' THEN 'diretor' ELSE 'outro' END AS grupo, COUNT(DISTINCT idcase) AS quantidade_casos FROM event_log GROUP BY grupo ORDER BY quantidade_casos DESC;
SELECT CASE WHEN activity LIKE '%funcionário%' THEN 'funcionário' WHEN activity LIKE '%supervisor%' THEN 'supervisor' WHEN activity LIKE '%administração%' THEN 'administração' WHEN activity LIKE '%pré-aprovador%' THEN 'pré-aprovador' WHEN activity LIKE '%responsável pelo orçamento%' THEN 'responsável pelo orçamento' WHEN activity LIKE '%diretor%' THEN 'diretor' END AS grupo, COUNT(DISTINCT idcase) AS quantidade_casos FROM event_log GROUP BY grupo ORDER BY quantidade_casos DESC;
SELECT CASE WHEN activity LIKE '%funcionário%' THEN 'funcionário' WHEN activity LIKE '%supervisor%' THEN 'supervisor' WHEN activity LIKE '%administração%' THEN 'administração' WHEN activity LIKE '%pré-aprovador%' THEN 'pré-aprovador' WHEN activity LIKE '%responsável pelo orçamento%' THEN 'responsável pelo orçamento' WHEN activity LIKE '%diretor%' THEN 'diretor' ELSE 'outro' END AS grupo, COUNT(*) AS quantidade FROM event_log GROUP BY grupo ORDER BY quantidade DESC;
SELECT activity, COUNT(*) AS count_activity FROM event_log WHERE resource IN ('funcionário', 'supervisor', 'administração', 'pré-aprovador', 'responsável pelo orçamento', 'diretor') GROUP BY activity ORDER BY CASE WHEN resource = 'funcionário' THEN 1 WHEN resource = 'supervisor' THEN 2 WHEN resource = 'administração' THEN 3 WHEN resource = 'pré-aprovador' THEN 4 WHEN resource = 'responsável pelo orçamento' THEN 5 WHEN resource = 'diretor' THEN 6 END, count_activity DESC;
SELECT activity, COUNT(DISTINCT idcase) AS count_cases FROM event_log GROUP BY activity ORDER BY count_cases DESC;
SELECT CASE WHEN activity LIKE '%funcionário%' THEN 'Funcionário' WHEN activity LIKE '%supervisor%' THEN 'Supervisor' WHEN activity LIKE '%administração%' THEN 'Administração' WHEN activity LIKE '%pré-aprovador%' THEN 'Pré-aprovador' WHEN activity LIKE '%responsável pelo orçamento%' THEN 'Responsável pelo orçamento' WHEN activity LIKE '%diretor%' THEN 'Diretor' ELSE 'Outro' END AS grupo, COUNT(*) AS quantidade FROM event_log GROUP BY grupo ORDER BY quantidade DESC;
SELECT idcase FROM event_log WHERE timestamp > (SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' AND idcase = event_log.idcase)
SELECT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp GROUP BY e1.idcase
SELECT idcase FROM event_log WHERE timestamp > (SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' AND idcase = event_log.idcase)
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND timestamp > event_log.timestamp );
SELECT idcase, timestamp FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource
SELECT O código fornecido não contém a consulta solicitada. Portanto, não é possível responder à pergunta.
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = (SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = (SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp DESC LIMIT 1
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity = 'Envio de lembrete' ORDER BY timestamp DESC)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = (SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(*) FROM event_log WHERE activity = 'envio de lembrete' AND status = 'parado'
SELECT DISTINCT resource FROM event_log WHERE timestamp = '2018-03-31' AND activity = 'not working'
SELECT resource FROM event_log WHERE timestamp = '2018-03-31' EXCEPT SELECT resource FROM event_log WHERE timestamp BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59';
SELECT resource FROM event_log WHERE NOT resource IN ( SELECT resource FROM event_log WHERE timestamp >= '2018-03-31' AND timestamp < '2018-04-01' );
SELECT resource FROM event_log WHERE timestamp = '2018-03-31' AND activity = 'idle'
SELECT resource FROM event_log WHERE activity = 'Idle' AND timestamp BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59'
SELECT resource FROM event_log WHERE timestamp = '2018-03-31' AND activity = 'Process Statement' GROUP BY resource
SELECT COUNT(*) AS "Quantidade de Eventos", el."idcase" AS "ID do Caso" FROM "event_log" AS el WHERE el."timestamp" BETWEEN '2018-12-01' AND '2018-12-05' AND el."activity" = 'Finalizar Caso' GROUP BY el."idcase" ORDER BY "Quantidade de Eventos" DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Conclusão' AND timestamp BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity ORDER BY frequency DESC;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT id), activity FROM event_log WHERE timestamp between '2018-12-01' and '2018-12-05' AND activity = 'finalizado' GROUP BY activity
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND activity IN ( SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Finalizar Processamento' ) ) GROUP BY activity ORDER BY frequency DESC;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Pagamento efetuado'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'pagamento efetuado'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Pagamento efetuado' )
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'pagamento efetuado'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log where activity = 'Fim da viagem' AND NOT activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado'
SELECT COUNT(DISTINCT resource) AS "Number of Resources", activity FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT resource) AS "Número de recursos", activity AS "Atividade" FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT resource) AS "Number of Distinct Resources", activity FROM event_log GROUP BY activity;
SELECT COUNT (DISTINCT resource) FROM event_log WHERE activity = 'process statement'
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Envio de lembrete' ) AND timestamp < ( SELECT timestamp FROM event_log WHERE activity = 'Envio de lembrete' );
SELECT activity FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity='Envio de lembrete') AND timestamp < (SELECT timestamp FROM event_log WHERE activity='Envio de lembrete')
SELECT activity FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity = 'Envio de lembrete')
SELECT count(*) AS "Quantidade de Eventos", idcase AS "ID do Caso" FROM event_log GROUP BY idcase ORDER BY "Quantidade de Eventos" DESC;
SELECT count(*) AS "event_count", idcase, COUNT(DISTINCT idcase) OVER (PARTITION BY event_count) AS "case_count" FROM event_log GROUP BY idcase ORDER BY event_count DESC;
SELECT count(*) AS "Quantidade de Eventos", idcase FROM event_log GROUP BY idcase ORDER BY count(*) DESC;
SELECT count(distinct idcase) FROM (SELECT count(*) as event_count, idcase FROM event_log group by idcase) group by event_count
SELECT COUNT(*) AS "Número de Eventos", idcase FROM event_log GROUP BY idcase
SELECT AVG(SUM(cost)) FROM event_log group by idcase
SELECT AVG(SUM(cost)) FROM event_log group by idcase
SELECT AVG(SUM(cost)) FROM event_log group by idcase
SELECT AVG(SUM(cost)) FROM event_log group by idcase
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(cost) FROM event_log
SELECT resource, AVG(cost) AS average_cost FROM event_log GROUP BY resource;
SELECT AVG (cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) from event_log group by resource
SELECT resource, AVG(cost) from event_log group by resource
SELECT resource, AVG(cost) from event_log group by resource
SELECT AVG(cost), resource FROM event_log GROUP BY resource
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(activity) DESC LIMIT 10
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 10
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(activity) DESC LIMIT 10
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(resource) DESC LIMIT 10
SELECT resource,COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Process Travel Claim' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT strftime('%Y-%m-%d', timestamp) as event_date, COUNT(*) as event_count FROM event_log GROUP BY event_date
SELECT activity, DATE(timestamp) AS date, COUNT(*) AS count FROM event_log GROUP BY activity, date ORDER BY activity, date;
SELECT count (*), date(timestamp) FROM event_log group by date(timestamp)
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT DISTINCT(idcase) FROM ( SELECT idcase, activity, resource, LEAD(resource) OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS next_resource FROM event_log ) WHERE resource <> next_resource;
SELECT Não há exemplos de SQL fornecidos no contexto para analisar e responder às perguntas sobre atividades executadas de forma seguida ou por funcionários diferentes.
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ) GROUP BY idcase;
SELECT COUNT(*) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor') AND timestamp < (SELECT timestamp FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1)
SELECT idcase, COUNT(*) AS num_interventions FROM event_log WHERE activity LIKE '%Aprovação%' GROUP BY idcase;
SELECT event_log1.timestamp AS timestamp_requisicao, event_log2.timestamp AS timestamp_aprovacao, (event_log2.timestamp - event_log1.timestamp) AS tempo_decorrido FROM event_log AS event_log1 JOIN event_log AS event_log2 ON event_log1.idcase = event_log2.idcase WHERE event_log1.activity = 'Permissão requisitada pelo funcionário' AND event_log2.activity = 'Permissão aprovada pela administração';
SELECT event_log1.timestamp AS "Data da solicitação", event_log2.timestamp AS "Data da aprovação", JULIANDAY(event_log2.timestamp) - JULIANDAY(event_log1.timestamp) AS "Intervalo de tempo (dias)" FROM event_log AS event_log1 JOIN event_log AS event_log2 ON event_log1.idcase = event_log2.idcase WHERE event_log1.activity = 'Permissão requisitada pelo funcionário' AND event_log2.activity = 'Permissão aprovada pela administração';
SELECT JULIANDAY(approved_timestamp) - JULIANDAY(requested_timestamp) AS time_elapsed_days FROM event_log WHERE activity = 'Permissão solicitada pelo funcionário' AND EXISTS ( SELECT 1 FROM event_log WHERE activity = 'Permissão aprovada pela administração' AND resource = event_log.resource );
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity
SELECT idcase FROM event_log WHERE activity LIKE '%rework%'
SELECT Não há exemplos de SQL fornecidos no contexto para analisar problemas de intervenções iguais e seguidas ou retrabalho.
SELECT idcase FROM event_log GROUP BY activity HAVING COUNT(*) > 1
SELECT idcase, activity, LAG(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS previous_activity FROM event_log WHERE activity = previous_activity;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) = 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 ORDER BY idcase;
SELECT activity, idcase, COUNT(*) AS count FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 1 ORDER BY count DESC
SELECT Não há exemplos de SQL fornecidos no contexto para analisar problemas de retrabalho ou intervenções iguais e seguidas.
SELECT idcase, activity, COUNT(*) AS count FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT DISTINCT resource FROM event_log WHERE activity LIKE '%supervisor%'
SELECT resource FROM event_log WHERE activity LIKE '%supervisor%' GROUP BY resource
SELECT resource FROM event_log WHERE activity = 'budget'
SELECT DISTINCT(resource) from event_log where activity like '%budget%'
