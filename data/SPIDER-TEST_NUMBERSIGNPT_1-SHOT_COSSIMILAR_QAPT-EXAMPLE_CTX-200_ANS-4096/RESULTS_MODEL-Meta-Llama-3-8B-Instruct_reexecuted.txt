SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James';
SELECT COUNT(DISTINCT resource) FROM event_log WHERE cost IS NULL;
resource, COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY COUNT(*) DESC
SELECT COUNT(*) FROM event_log WHERE cost IS NOT NULL;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE activity LIKE 'processamento das declarações%' GROUP BY activity ORDER BY frequency DESC;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 5;
Here is the completed SQL query: SELECT * FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20)
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 10;
SELECT * FROM event_log WHERE idcase = 'declaração 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01'
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10;
SELECT idcase, COUNT(*) AS num_actions, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5 ) ) GROUP BY idcase ORDER BY num_actions DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10;
SELECT id, COUNT(*) as total_actions FROM event_log WHERE id IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 100) GROUP BY id ORDER BY total_actions DESC;
SELECT resource FROM event_log WHERE strftime('%Y-%m-%d', timestamp) NOT LIKE '2018-01-%' AND resource = 'Charles';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT idcase, resource, COUNT(*) FROM event_log WHERE activity ='rejection' AND cost IS NULL;
SELECT idcase, MIN(count(*)) AS min_interventions, MAX(count(*)) AS max_interventions FROM ( SELECT idcase, resource, count(*) FROM event_log WHERE cost IS NULL GROUP BY idcase, resource ) AS subquery WHERE cost > 0
SELECT COUNT(*) FROM (SELECT DISTINCT idcase FROM event_log WHERE cost IS NULL EXCEPT SELECT DISTINCT idcase FROM event_log WHERE cost IS NOT NULL)
SELECT activity, COUNT(*) AS total_registers FROM event_log GROUP BY activity
SELECT idcase, COUNT(*) AS num_interventions, activity, COUNT(*) AS num_interventions_per_activity FROM event_log GROUP BY idcase, activity;
SELECT activity, COUNT(*) FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) FROM event_log GROUP BY activity;
SELECT resource, idcase, MAX(cost) AS max_cost, MIN(cost) AS min_cost, AVG(cost) AS avg_cost FROM event_log WHERE activity = 'processamento de declarações' GROUP BY resource, idcase ORDER BY max_cost DESC;
SELECT idcase, COUNT(*) FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase;
SELECT idcase, resource, COUNT(*) FROM event_log WHERE cost IS NULL;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' OR resource = 'Thomas';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Thomas' OR resource = 'Diana' OR resource = 'Sara'
SELECT * FROM event_log WHERE activity LIKE '%permissão%' ORDER BY cost DESC LIMIT 5
SELECT idcase FROM event_log WHERE id IN (SELECT id FROM event_log GROUP BY id, strftime('%Y-%m-%d', timestamp) HAVING COUNT(*) > 1);
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT COUNT(*) FROM event_log WHERE idcase = 56300;
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource;
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 5) GROUP BY resource ORDER BY COUNT(DISTINCT resource) DESC;
SELECT resource FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 5)
SELECT resource FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 5 )
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 5) GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 5) GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)
SELECT resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource, COUNT(*) AS num_occurrences FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource, COUNT(*) as total_aproved FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY total_aproved DESC LIMIT 10;
SELECT resource FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT count(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2;
SELECT idcase, timestamp FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase, timestamp HAVING COUNT(*) > 1 )
SELECT idcase, COUNT(*) AS num_intervencoes, id FROM event_log WHERE activity LIKE '%rejeitada%' AND cost IS NULL GROUP BY idcase, id
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT count(*), activity FROM event_log WHERE activity = 'Início da viagem' or activity = 'Fim da viagem' GROUP BY activity
SELECT idcase, COUNT(*) AS num_times FROM event_log GROUP BY idcase;
SELECT MAX(cost) FROM event_log
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador';
SELECT idcase, timestamp FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource;
SELECT idcase, COUNT(*) AS num_actions FROM event_log GROUP BY idcase;
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp > '2018-03-01' AND timestamp <= '2018-03-31'
SELECT DISTINCT resource FROM event_log ORDER BY resource;
SELECT DISTINCT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 200
SELECT AVG(cost) AS average_cost, activity FROM event_log GROUP BY activity;
SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1)
SELECT DISTINCT activity FROM event_log WHERE timestamp = '2018-04-12';
SELECT e1.idcase, e1.resource, e1.activity, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT COUNT(*), resource FROM event_log WHERE activity!= 'Finalizar Viagem' GROUP BY resource;
SELECT e1.resource, COUNT(e1.resource) AS num_actions FROM event_log AS e1 WHERE e1.activity!= 'Fim da viagem' GROUP BY e1.resource ORDER BY num_actions DESC;
SELECT COUNT(*), resource, MIN(timestamp) AS first_timestamp FROM event_log WHERE id IN ( SELECT MIN(id) AS first_id FROM event_log GROUP BY idcase, resource ) GROUP BY resource;
SELECT idcase, count(*) FROM event_log WHERE count(*) <= 10 GROUP BY idcase
SELECT idcase, COUNT(*) AS num_actions FROM event_log GROUP BY idcase, activity;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1)
Here is the completed SQL query: SELECT idcase, resource, COUNT(*) FROM event_log WHERE cost IS NULL GROUP BY idcase, resource
SELECT resource, COUNT(*) AS quantidade_de_vezes FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource ORDER BY resource;
SELECT activity, COUNT(*) AS frequency FROM event_log GROUP BY activity;
SELECT idcase, COUNT(*) AS total_actions FROM event_log WHERE activity IN ('Fim de Viagem', 'Efetuação de Pagamento') GROUP BY idcase
SELECT idcase, COUNT(*) AS num_actions FROM event_log WHERE activity = 'end' GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-05-02' AND '2018-03-31' AND NOT EXISTS (SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31');
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp <= '2018-03-31' )
SELECT id, activity, timestamp, resource, cost, idcase, rowid FROM event_log WHERE rowid IN ( SELECT MAX(rowid) FROM event_log GROUP BY idcase )
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity, COUNT(*) FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity, COUNT(*) FROM event_log WHERE idcase = 'declarações' GROUP BY activity HAVING COUNT(*) >= 100
SELECT grupo, COUNT(*) AS quantidade_execucoes, COUNT(*) OVER (PARTITION BY grupo) AS total_execucoes FROM ( SELECT CASE WHEN activity LIKE '%funcionário%' THEN 'funcionário' WHEN activity LIKE '%supervisor%' THEN'supervisor' WHEN activity LIKE '%administração%' THEN 'administração' WHEN activity LIKE '%pré-aprovador%' THEN 'pré-aprovador' WHEN activity LIKE '%responsável pelo orçamento%' THEN'responsável pelo orçamento' WHEN activity LIKE '%diretor%' THEN 'diretor' END AS grupo FROM event_log ) AS subquery GROUP BY grupo ORDER BY quantidade_execucoes DESC;
SELECT grupo, COUNT(*) as quantidade FROM (SELECT 'funcionário' as grupo FROM event_log WHERE activity LIKE '%funcionário%') UNION ALL (SELECT 'supervisor' as grupo FROM event_log WHERE activity LIKE '%supervisor%') UNION ALL (SELECT 'administração' as grupo FROM event_log WHERE activity LIKE '%administração%') UNION ALL (SELECT 'pré-aprovador' as grupo FROM event_log WHERE activity LIKE '%pré-aprovador%') UNION ALL (SELECT 'responsável pelo orçamento' as grupo FROM event_log WHERE activity LIKE '%responsável pelo orçamento%') UNION ALL (SELECT 'diretor' as grupo FROM event_log WHERE activity LIKE '%diretor%') GROUP BY grupo ORDER BY quantidade DESC;
SELECT grupo, COUNT(DISTINCT idcase) AS quantidade_de_casos FROM event_log WHERE activity LIKE '%funcionário%' OR activity LIKE '%supervisor%' OR activity LIKE '%administração%' OR activity LIKE '%pré-aprovador%' OR activity LIKE '%responsável pelo orçamento%' OR activity LIKE '%diretor%' GROUP BY grupo ORDER BY quantidade_de_casos DESC;
SELECT e1.id, e1.activity, e1.resource, e2.resource AS funcionario FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp
SELECT e1.id, e1.activity, e1.resource, e2.resource AS funcionario FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp
SELECT DISTINCT resource FROM event_log WHERE timestamp NOT BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59' AND resource NOT IN (SELECT resource FROM event_log WHERE timestamp BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59');
SELECT activity, COUNT(*) as count FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity;
SELECT idcase FROM (SELECT idcase, strftime('%Y-%m-%d', timestamp) as event_date, COUNT(*) as event_count FROM event_log GROUP BY idcase, event_date HAVING COUNT(*) > 1) AS temp GROUP BY idcase HAVING COUNT(*) > 1;
